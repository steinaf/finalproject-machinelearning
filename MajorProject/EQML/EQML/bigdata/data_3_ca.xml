<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<data>
    <topic>
        <text>computer architecture</text>
        <query>
            <text>computer architecture questions</text>
            <linkList>
                <link>http://www.careercup.com/page?pid=computer-architecture-low-level-interview-questions</link>
                <link>http://www.technicalsymposium.com/COMPUTER_ARCHITECTURE_TWO_MARK_QUESTIONS.html</link>
                <link>http://www.eecs.berkeley.edu/GradAffairs/CS/Prelims/arqu.html</link>
                <link>http://www.techinterviews.com/computer-architecture-and-design-interview-questions</link>
                <link>http://careerride.com/computer-architecture-and-design-interview-questions.aspx</link>
                <link>http://www.glassdoor.com.au/Interview/Mostly-technical-questions-related-to-computer-architecture-vlsi-and-digital-design-nothing-very-unexpected-but-need-to-QTN_444793.htm</link>
                <link>http://www.geeksforgeeks.org/forums/topic/a-gate-2011-question-about-computer-architecture/</link>
                <link>http://groups.yahoo.com/group/koolkampusmail/message/9255</link>
                <link>http://stackoverflow.com/questions/tagged/computer-architecture</link>
                <link>http://programmers.stackexchange.com/questions/192037/how-does-understanding-computer-architecture-help-a-programmer</link>
                <link>http://www.edaboard.com/thread285695.html</link>
                <link>http://www.coolinterview.com/type.asp?iType=96</link>
                <link>http://www.glassdoor.com/Interview/computer-architect-interview-questions-SRCH_KO0,18.htm</link>
                <link>http://www.careercup.com/page?pid=computer-architecture-low-level-interview-questions&amp;n=3</link>
                <link>http://www.cis.upenn.edu/~cis501/</link>
                <link>http://answers.yahoo.com/question/index?qid=20130212112430AAgsNmr</link>
            </linkList>
            <sectionList>
                <section>
                    <text>Computer Architecture &amp; Low Level Interview Questions | CareerCup CareerCup * Questions * Forum * Salaries * Resume Tips * RSS * Sign In ▼ * Sign In * View Cart Computer Architecture &amp; Low Level Interview Questions Page: 1 2 3 4 Filter: (None) A9 aabccd Abs india pvt. ltd.
Accenture Achieve Internet Adap.tv Adobe ADP Advisory Board Company Agilent Technologies Akamai Alcatel Lucent Altair Engineering Altera Amazon Amazon AMD Amdocs American Airlines Apache Design Apple AppNexus Argus Aricent Arista Networks Aristocrat Gaming Ask.com Aspire Systems ASU Athena Health Automated Traders Desk Autonomy Zantaz Axiom Sources Baidu Bank of America Barclays Capital Bazaarvoice Big Fish Binecs Bloomberg LP Blue Jeans Bocada Boeing Booking.com Brainware BT Cadence Inc Capgemini CapitalIQ Caritor Cavium Networks CCN CDAC-ACTS CGI-AMS Chegg.com Chelsio Communications Chicago Mercantile Exchange Chronus Cisco Systems Cisco Systems Citigroup Citrix Online Citrix System Inc Cloudera Cloudmere, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CMC LTD Cognzant Technology Solutions Collective Computer Associates Continental Credit Suisse Crompton Greeves CSC CSR Cubic Transportation Systems Limited Daptiv Defense Research and Development Organization of India Deloitte Consulting LLP Delve Networks Denmin Group Deshaw Inc Did-it.com Directi Dover Organization Ebay EFI Egenera Electronic Arts EMC Epic Systems Epsilon Ericsson Eterno Infotech Pvt Ltd Expedia EZ Prints F5 Networks Fabrix Facebook FactSet Research Systems, Inc Fair Issac Fiorano FlexTrade Flipkart Fortinet Future Advisor Future Group, Mumbai Fynanz Gartner Gayatri Vidya Parishad GE (General Electric) Georgia Pacific Global Scholar Globaltech Research Gluster GoDaddy Gold-Tier Goldman Sachs Google Green Bricks Groupon GrubHub Guruji Harman Kadron HCL HCL America Headrun Technologies Pvt Ltd Hewlett Packard Hi5 Highbridge Capital Home Depot Honeywell Huawei Hunan Asset Ibibo IBM Iconologic Igate IIT-D iLabs Imagination Technologies IMG Infibeam Infinium Informatica Infosys Initto InMobi Intel Interactive Brokers Interactive Design Internet Question InterraIT Intuit ION idea ION Trading iPowerFour Iron Mountain Ittiam Systems Ivycomptech Izon Jane Street JDA JP Morgan Juniper Networks Kalido Kaseya Kerkestavni Computecha Corporatci Kingfisher Kingfisher Airlines Kiwox Knewton Knoa Software Knowledge Systems KnowledgeBase Komli Media Kpro Solutions Lab126 Labs247 Laserfiche LexisNexis Lime Labs Linkedin LiteratureBay.com Live Nation LiveRamp Lockheed Martin London Investment Bank Loyom LSI Lunatic Server Solutions MAGMA Manhattan associates MAQ MarketRX Marvell Mathworks McAfee Medio Systems Megasoft Mentor Graphics Micron Microsoft Microsoft Microsoft MicroStrategy MIH Mindtree Wireless India Model N Monitor Group Morgan Stanley Motorola MounzIT Moyer Group mSpot Myntra Myntra.com National Informatics Centre National Instruments Ness NetApp Netflix Nexabion Nextag Nisum Technologies Nivio Technologies Nomura Novell NVIDIA One97 OnMobile Oracle Overstock.com Palantir Technology PayPal Pega Persistent Systems Philips Pinterest PJ Pvt Ltd Pocketgems Polaris PRDS Progress QNX QSI HealthCare Qualcomm Rapleaf Raytheon Real Networks Rebellion Research RelQ Software Company Limited Research In Motion Ricoh RightC Riverbed Roamware RoviCorp Roxar RSA Sabre Holdings Safenet Sage Software Salesforce Samsung Sap Labs Sapient Corporation SAS Research Schneider Electric Search Media Sears Holding Shutterfly Siemens SIG (Susquehanna International Group) SignPost Sileria Inc.
Singapore Technologies Socialcam Softchoice Sonoa Systems Sophos Spotify SRMicro Info Systems Starent Networks StartUp SunGard SWAPTON SOLUTIONS Symantec Symphony Services SynCfusion Synopsys R&amp;D Take Two Interactive Tally Solutions TATA Consultancy Services Tech India Line Techlogix Tejas Networks Tellabs Texas Instruments The Digital Group The Royal Bank of Scotland Chennai thePlatform Thirdware Technologies Thomson Reuters ThoughtWorks TP TRG Tribal Fusion Trilogy Turing Software Twitter Two Sigma United HealthGroup Urban Touch USAA USInternetworking VANS Vanu Vdopia Video Gaming Technologies Vizury VMWare Inc Walmart Labs Watchguard Wichorus Wipro Technologies Wireless Generation WorksApp X Xurmo Yahoo Yatra.com Yelp Zillow Zoosk ZS Associates Zycus Zynga (None) Accountant Analyst Android test engineer Applications Developer Area Sales Manager Associate Computer Scientist Consultant Developer Program Engineer Developer Program Engineer Development Support Engineer Field Sales Financial Application Engineer Financial Software Developer Firmware Engineer Front-end Software Engineer Graphics Programmer Intern iOS Developer Java Developer Member Technical Staff MTS Network Engineer Personnel Principal Software Engineer Product Security Engineer Production Engineer Program Manager Quality Assurance Engineer Research Scientist Reverse Engineering and System Developer Scientific Officer SDE-2 SDE1 SDE1 SDE1 Security Analyst Senior Software Development Engineer Site Reliability Engineer Software Analyst Software Architect Software Development Manager Software Engineer / Developer Software Engineer in Test Software Engineer in Test Software Engineer Intern Software Trainee Solutions Architect student System Administrator Systems Design Engineer Tech Lead Technical Architect Technical Support Engineer Testing / Quality Assurance Virus Researcher Web Developer (None) Algorithm Android Application / UI Design Arrays Arrays Assembly Automata Behavioral Bit Manipulation Brain Teasers C C C++ Cache Coding Compiler Computer Architecture &amp; Low Level Data Mining Data Structures Database Debugging Distributed Computing Dynamic Programming Experience Front End Web Development General Questions and Comments Graphics Hash Table Ideas Java Java JavaScript Knowledge Based Large Scale Computing Linked Lists Linux Kernel Math &amp; Computation Matrix Networking / Web / Internet Object Oriented Design OODesign Operating System Operators Perl PHP Probability Problem Solving Python Questions YOU should ask!
Sales Security Sets Sorting SQL Stacks String Manipulation System Administration System Design Terminology &amp; Trivia test Testing Testing Threads Trees and Graphs Unix vmware interview questions XML Sort By: Date | Number of Comments | Most Recent Comment | Votes * 1 of 1 vote 7 Answers What is the difference between a computers heap and it's stack?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- brighama on March 29, 2013 in United States Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 1 of 1 vote 2 Answers During boot, after the BIOS performs a successful power-on-self-test, describe everything that occurs until the console is presented to the user.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- longbelly on March 21, 2013 in United States Edit | Report Duplicate | Flag Google Site Reliability Engineer Computer Architecture &amp; Low Level * 1 of 1 vote 1 Answer Sequence of steps that happen in CPU, cache, TLB, VM, HDD leading to execution of “x = 7&quot; which isn’t present in cache or sysmem nor translation in TLB.
Also specify if any intrs, exceptions or faults are generated.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- ANKSCIRCLE on October 20, 2012 in United States Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer Design a system for the customer to review a product.
It should be able to incorporate web-services.
Describe the entire flow from the client to the database.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- naveen.mandadi on August 30, 2012 in India Edit | Report Duplicate | Flag Amazon Applications Developer Computer Architecture &amp; Low Level Data Structures Application / UI Design * 0 of 0 votes 0 Answers In your application, why database (story history) is used at client side and not on server side ?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Sachin on July 24, 2012 in India Edit | Report Duplicate | Flag Igate Technical Architect Computer Architecture &amp; Low Level Distributed Computing Application / UI Design * 0 of 0 votes 2 Answers At the Kernel level, if you want to write a memory leak analyzer, how will you implement it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- snehaldesh1 on June 26, 2012 in United States Edit | Report Duplicate | Flag Apple Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers What is a process.
What is a stack.
How many stacks can a process have.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is a thread.
How many threads can a process have.
Do the threads have their own stacks, or share the process stack(s), or both?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Terry on April 21, 2012 in United States Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 10 Answers what is the range of int data type? what is the maximum number (decimal number) that can be stored using any datatype ?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- ashish on March 25, 2012 in India for bing Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers What is a process and what is a thread?
What are their differences and similarities?
Can you have processes in processes?
How do you prevent deadlocks?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>NB:: The questions weren't this direct!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- llmorex on February 05, 2012 in England Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 0 Answers Asked few times over phone and in-person.
Asking to get my facts correct and consolidate the info for me and for everyone here.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How's synchornization differs in multi-core vs multiprocessor arch?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Little internals about them.
How the code design and implementation changes for these two arch?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>pour in your suggestions and any nice read if u know any.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Varun on December 06, 2011 in India Edit | Report Duplicate | Flag Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers Compiler optimization for memory based code.
How do you make sure your code works fine with such a code?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- einstein.goli on October 25, 2011 in United States Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers On some architecture stack grows upwards and on some architecture stack grows downwards.How will you find out whether the stack is growing upwards or downwards?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- McAfee on July 11, 2011 Edit | Report Duplicate | Flag McAfee Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 13 Answers You have a 64bit interger counter set to 0.
How long it will take to overflow the counter given that you are incrementing it at 4Ghz speed - anonymous on July 08, 2011 Edit | Report Duplicate | Flag Google Computer Architecture &amp; Low Level * 0 of 0 votes 6 Answers How would you design transfer of data packets from NY to Tokio?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>First I thought of traveling salesman problem where weight of connections between nodes is throughput of network.
This problem is NP which lead just to interviewers reply that I should care about design of system, recovery of data and acknowledge whether data has been transferred.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- gbabun on April 26, 2011 Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 2 Answers he drew a diagram on the white board, asked me this synchronization problem abt 2 processes trying to communicate with the hardware. there was 1 bit register on the hardware u can use as extra memory if u want. there were several approaches i tried, some which wouldnt work, the rest im not sure if they were right. in the end he said now give me a solution if it were a multi processor system. i didnt really say much after that. was pretty stuck.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Abhi on April 15, 2011 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer How does malloc work ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Bandiccot on March 12, 2011 Edit | Report Duplicate | Flag Riverbed Software Engineer / Developer Computer Architecture &amp; Low Level Linux Kernel Operating System * 0 of 0 votes 4 Answers What is virtual memory ?
What is the pre-requisite in hardware for supporting virtual memory ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Bandiccot on March 12, 2011 Edit | Report Duplicate | Flag Riverbed Software Engineer / Developer Computer Architecture &amp; Low Level Linux Kernel Operating System * 0 of 0 votes 3 Answers 4) Difference between Flip-FLOP ?
Where we use flip flop ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- siva.sai.2020 on February 16, 2011 Edit | Report Duplicate | Flag MAGMA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers 3) Littele Endian vs Big Endian ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1) which one decides endianess , Processor(CPU) or Operating System ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2) There any standard ways to convert little endian data to big endian and vice versa .
My answer: Linux is little endian and Solaris is big endian.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>After that I said Processor(CPU) decides endianness of the machine.
Intel processor supports little endian and SPARCV( Solaris) processor supports big endian.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>He asked what about Solaris operating system with Intel processor ?.
I said it is little endian.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- siva.sai.2020 on February 13, 2011 Edit | Report Duplicate | Flag Gluster Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 2 Answers What is a futex?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- blueskin.neo on November 18, 2010 Edit | Report Duplicate | Flag Morgan Stanley Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers What is a singleton class?
Explain the code?
How do you handle singleton object in multithreaded programs?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- blueskin.neo on November 18, 2010 Edit | Report Duplicate | Flag Morgan Stanley Computer Architecture &amp; Low Level * 0 of 0 votes 0 Answers give an example of symbol table, semantic stack and parse table in an compiler implementation - bob on October 20, 2010 Edit | Report Duplicate | Flag Laserfiche Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer 1) You have a test application that is issuing asynchronous un-buffered sequential writes to a 15k RPM disk connected through a 3Gb/s SAS interface.
The test application is able to get 150 IOPS for an IO size of 8KB.
What is the throughput for the writes being issued by this test application?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- manu on September 09, 2010 Edit | Report Duplicate | Flag Cisco Systems Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers How to find how much memory your program will need?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Jig on August 10, 2010 Edit | Report Duplicate | Flag Goldman Sachs Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers what is Amdhal's law?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Vishal on August 03, 2010 Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 5 Answers I want to create a LRU [least recently used cache] such that push, pop and find min [without deletion] are done in constant time how to do this?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- someone on June 28, 2010 Edit | Report Duplicate | Flag Amazon Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 36 Answers There is very long array of ints, and you are given pointer to base addr of this array.. each int is 16bit representation... you need to return the pointer to tht &quot;bit&quot; inside array where longest sequence of &quot;1&quot;s start - gradStudent on June 16, 2010Edit | Report Duplicate | Flag Amazon Software Engineer / Developer Algorithm Arrays Bit Manipulation Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer Explain the difference between Memory mapped I/O and DMA - raady on April 25, 2010 Edit | Report Duplicate | Flag Riverbed Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers Why don't we use malloc in embedded systems ?
How is memory allocated in Embedded systems ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Bandicoot on April 02, 2010 Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Computer Architecture &amp; Low Level Operating System System Design * 0 of 0 votes 1 Answer What does the wmb instruction do?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- - on February 22, 2010 Edit | Report Duplicate | Flag NetApp Software Engineer / Developer Computer Architecture &amp; Low Level Page: 1 2 3 4 Filter: (None) A9 aabccd Abs india pvt. ltd.
Accenture Achieve Internet Adap.tv Adobe ADP Advisory Board Company Agilent Technologies Akamai Alcatel Lucent Altair Engineering Altera Amazon Amazon AMD Amdocs American Airlines Apache Design Apple AppNexus Argus Aricent Arista Networks Aristocrat Gaming Ask.com Aspire Systems ASU Athena Health Automated Traders Desk Autonomy Zantaz Axiom Sources Baidu Bank of America Barclays Capital Bazaarvoice Big Fish Binecs Bloomberg LP Blue Jeans Bocada Boeing Booking.com Brainware BT Cadence Inc Capgemini CapitalIQ Caritor Cavium Networks CCN CDAC-ACTS CGI-AMS Chegg.com Chelsio Communications Chicago Mercantile Exchange Chronus Cisco Systems Cisco Systems Citigroup Citrix Online Citrix System Inc Cloudera Cloudmere, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CMC LTD Cognzant Technology Solutions Collective Computer Associates Continental Credit Suisse Crompton Greeves CSC CSR Cubic Transportation Systems Limited Daptiv Defense Research and Development Organization of India Deloitte Consulting LLP Delve Networks Denmin Group Deshaw Inc Did-it.com Directi Dover Organization Ebay EFI Egenera Electronic Arts EMC Epic Systems Epsilon Ericsson Eterno Infotech Pvt Ltd Expedia EZ Prints F5 Networks Fabrix Facebook FactSet Research Systems, Inc Fair Issac Fiorano FlexTrade Flipkart Fortinet Future Advisor Future Group, Mumbai Fynanz Gartner Gayatri Vidya Parishad GE (General Electric) Georgia Pacific Global Scholar Globaltech Research Gluster GoDaddy Gold-Tier Goldman Sachs Google Green Bricks Groupon GrubHub Guruji Harman Kadron HCL HCL America Headrun Technologies Pvt Ltd Hewlett Packard Hi5 Highbridge Capital Home Depot Honeywell Huawei Hunan Asset Ibibo IBM Iconologic Igate IIT-D iLabs Imagination Technologies IMG Infibeam Infinium Informatica Infosys Initto InMobi Intel Interactive Brokers Interactive Design Internet Question InterraIT Intuit ION idea ION Trading iPowerFour Iron Mountain Ittiam Systems Ivycomptech Izon Jane Street JDA JP Morgan Juniper Networks Kalido Kaseya Kerkestavni Computecha Corporatci Kingfisher Kingfisher Airlines Kiwox Knewton Knoa Software Knowledge Systems KnowledgeBase Komli Media Kpro Solutions Lab126 Labs247 Laserfiche LexisNexis Lime Labs Linkedin LiteratureBay.com Live Nation LiveRamp Lockheed Martin London Investment Bank Loyom LSI Lunatic Server Solutions MAGMA Manhattan associates MAQ MarketRX Marvell Mathworks McAfee Medio Systems Megasoft Mentor Graphics Micron Microsoft Microsoft Microsoft MicroStrategy MIH Mindtree Wireless India Model N Monitor Group Morgan Stanley Motorola MounzIT Moyer Group mSpot Myntra Myntra.com National Informatics Centre National Instruments Ness NetApp Netflix Nexabion Nextag Nisum Technologies Nivio Technologies Nomura Novell NVIDIA One97 OnMobile Oracle Overstock.com Palantir Technology PayPal Pega Persistent Systems Philips Pinterest PJ Pvt Ltd Pocketgems Polaris PRDS Progress QNX QSI HealthCare Qualcomm Rapleaf Raytheon Real Networks Rebellion Research RelQ Software Company Limited Research In Motion Ricoh RightC Riverbed Roamware RoviCorp Roxar RSA Sabre Holdings Safenet Sage Software Salesforce Samsung Sap Labs Sapient Corporation SAS Research Schneider Electric Search Media Sears Holding Shutterfly Siemens SIG (Susquehanna International Group) SignPost Sileria Inc.
Singapore Technologies Socialcam Softchoice Sonoa Systems Sophos Spotify SRMicro Info Systems Starent Networks StartUp SunGard SWAPTON SOLUTIONS Symantec Symphony Services SynCfusion Synopsys R&amp;D Take Two Interactive Tally Solutions TATA Consultancy Services Tech India Line Techlogix Tejas Networks Tellabs Texas Instruments The Digital Group The Royal Bank of Scotland Chennai thePlatform Thirdware Technologies Thomson Reuters ThoughtWorks TP TRG Tribal Fusion Trilogy Turing Software Twitter Two Sigma United HealthGroup Urban Touch USAA USInternetworking VANS Vanu Vdopia Video Gaming Technologies Vizury VMWare Inc Walmart Labs Watchguard Wichorus Wipro Technologies Wireless Generation WorksApp X Xurmo Yahoo Yatra.com Yelp Zillow Zoosk ZS Associates Zycus Zynga (None) Accountant Analyst Android test engineer Applications Developer Area Sales Manager Associate Computer Scientist Consultant Developer Program Engineer Developer Program Engineer Development Support Engineer Field Sales Financial Application Engineer Financial Software Developer Firmware Engineer Front-end Software Engineer Graphics Programmer Intern iOS Developer Java Developer Member Technical Staff MTS Network Engineer Personnel Principal Software Engineer Product Security Engineer Production Engineer Program Manager Quality Assurance Engineer Research Scientist Reverse Engineering and System Developer Scientific Officer SDE-2 SDE1 SDE1 SDE1 Security Analyst Senior Software Development Engineer Site Reliability Engineer Software Analyst Software Architect Software Development Manager Software Engineer / Developer Software Engineer in Test Software Engineer in Test Software Engineer Intern Software Trainee Solutions Architect student System Administrator Systems Design Engineer Tech Lead Technical Architect Technical Support Engineer Testing / Quality Assurance Virus Researcher Web Developer (None) Algorithm Android Application / UI Design Arrays Arrays Assembly Automata Behavioral Bit Manipulation Brain Teasers C C C++ Cache Coding Compiler Computer Architecture &amp; Low Level Data Mining Data Structures Database Debugging Distributed Computing Dynamic Programming Experience Front End Web Development General Questions and Comments Graphics Hash Table Ideas Java Java JavaScript Knowledge Based Large Scale Computing Linked Lists Linux Kernel Math &amp; Computation Matrix Networking / Web / Internet Object Oriented Design OODesign Operating System Operators Perl PHP Probability Problem Solving Python Questions YOU should ask!
Sales Security Sets Sorting SQL Stacks String Manipulation System Administration System Design Terminology &amp; Trivia test Testing Testing Threads Trees and Graphs Unix vmware interview questions XML Sort By: Date | Number of Comments | Most Recent Comment | Votes Add Question CareerCup is the world's biggest and best source for software engineering interview preparation.See all our resources .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How Can You Help CareerCup?
Find Out When Gayle / CareerCup / Cracking the Coding Interview is in Your City Top Companies * Amazon (3014) * Amazon (3014) * Microsoft (1676)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Google (669) * Bloomberg LP (587)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Adobe (343) * Facebook (230)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Yahoo (215) * More Companies » Top Jobs * Software Engineer / Developer (7008)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Software Engineer in Test (725)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Software Engineer in Test (725)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Developer Program Engineer (343)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Developer Program Engineer (343)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Financial Software Developer (280)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Testing / Quality Assurance (105)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Program Manager (83)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Applications Developer (83)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Analyst (79) * More Jobs » Top Topics * Algorithm (3495)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Coding (754) * Data Structures (540)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* C (504) * C++ (457)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Java (455) * Java (455) * Terminology &amp; Trivia (294)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Brain Teasers (288)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Arrays (277) * More Topics » What's Going On Report a Bug or Issue Books is a comprehensive book walking you through every aspect of getting a job at a top tech company, while focuses on software engineering interviews.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Videos CareerCup's interview videos give you a real-life look at technical interviews.
In these unscripted videos, watch how other candidates handle tough questions and how the interviewer thinks about their performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Resume Review Most engineers make critical mistakes on their resumes -- we can fix your resume with our custom resume review service.
And, we use fellow engineers as our resume reviewers, so you can be sure that we &quot;get&quot; what you're saying.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Mock Interviews Our Mock Interviews will be conducted &quot;in character&quot; just like a real interview, and can focus on whatever topics you want.
All our interviewers have worked for Microsoft, Google or Amazon, you know you'll get a true-to-life experience.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Information * Team, Contact &amp; About * Salaries * RSS * Behavioral Preparation Grid * Sample Resumes Products * * * CtCI iPhone App * Videos Services * Mock Interviews * Resume Review * Wiser Profile (LinkedIn Review) Social * CareerCup on Facebook * CtCI on Facebook * Gayle McDowell on Facebook * CareerCup on Twitter * Gayle on Twitter * CareerCup Blog CareerCup.com © 2012 COMPUTER ARCHITECTURE- TWO MARK QUESTIONS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>know the personalities hold your mouse,move left and right * Home * University Symposiums * College Symposiums * Engineering College Symposiums * Medical College Symposiums * Management College Symposiums * Arts and Science College Symposiums * Other College Symposiums * IIT Symposiums * IIT-MADRAS * IIT-DELHI * IIT-BOMBAY * IIT-KANPUR * IIT-GUWAHATI * IIT-ROORKEE * IIT-KHARAGPUR * IISC-BANGALORE * IIM Symposiums * IIM-AHMEDABAD * IIM-BANGALORE * IIM-KOZHIKODE * IIM-CALCUTTA * IIM-INDORE * IIM-LUCKNOW * IIM-SHILLONG * IIIT Symposiums * IIIT-PUNE * IIIT-BANGALORE * IIIT-HYDERABAD * IIIT-DELHI * IIITM-GWALIOR * IIIT-ALLAHABAD * IIITM-KERALA * IIITM-BHUBANESWAR * NIT Symposiums * Gallery * Photo gallery * Video gallery COMPUTER ARCHITECTURE- TWO MARK QUESTIONS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Training Info Admissions Info Courses Info Scholarships Info GATE Info UPSC Info Job Info Materials Info 1.Define Computer Architecture Computer Architecture Is Defined As The Functional Operation Of The Individual H/W Unit In A Computer System And The Flow Of Information Among The Control Of Those Units 2.Define Computer H/W Computer H/W Is The Electronic Circuit And Electro Mechanical Equipment That Constitutes The Computer 3.
What Is Meant By Cache Memory ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A Memory That Is Smaller And Faster Than Main Memory And That Is Interposed Between The Cpu And Main Memory.
The Cache Acts As A Buffer For Recently Used Memory Location 4.what is locality of reference?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Many instruction in localized area of the program are executed repeatedly during some time period and the remainder of the program is accessed relatively infrequently .this is referred as locality of reference.
5.what is IO mapped input output?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A memory reference instruction activated the READ M (or)WRITE M control line and does not affect the IO device.
Separate IO instruction are required to activate the READ IOand WRITE IO lines ,which cause a word to be transferred between the address aio port and the CPU.
The memory and IO address space are kept separate.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>6.specify the three types of the DMA transfer techniques?
Single transfer mode(cyclestealing mode) Block Transfer Mode(Brust Mode) Demand Transfer Mode Cascade Mode 7. why is memory refreshing circuit needed ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>al cells on the corresponding yow to be read and refreshed during both read and write operation .the contents of the d ram are maintained each row of cell must be accessed periodically once every 2 � 16 ms. refresh circuit usually performs this function . automatically 8 what are the functions of control unit ?
the memory arithmetic and logic ,and input and output units store and process information and perform i/p and o/p operation, the operation of these unit must be co ordinate in some way this is the task of control unit the cu is effectively the nerve center that sends the control signal to other units and sence their states.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>9.What is an interrupt?
An interrupt is an event that causes the execution of one program to be suspended and another program to be executed.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>10.What are the uses of interrupts? � Recovery from errors � Debugging � Communication between programs � Use of interrupts in operating system 11.Define vectored interrupts.
In order to reduce the overhead involved in the polling process, a device requesting an interrupt may identify itself directly to the CPU.
Then, the CPU can immediately start executing the corresponding interrupt-service routine.
The term vectored interrupts refers to all interrupt-handling schemes base on this approach.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>12. What is the need for reduced instruction chip?
1. Relatively few instruction types and addressing modes.
2. Fixed and easily decoded instruction formats.
3. Fast single-cycle instruction execution.
4. Hardwired rather than microprogrammed control.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>13. Name any three of the standard I/O interface.
1. SCSI (small computer system interface),bus standards 2.
Back plane bus standards 3.
IEEE 796 bus (multibus signals) 4.
NUBUS 5.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>IEEE 488 bus standard 15.Explain the pipeline types.
1. Instruction pipeline 2.
Arithmetic pipeline 16.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Explain the various classifications of parallel structures.
1. SISD (single instruction stream single data stream 2.
SIMD(single instruction stream multiple data stream 3.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>MIMD(multiple instruction stream multiple data stream 4.
MISD(multiple instruction stream single data stream 17.
What is absolute addressing mode?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The address of the location of the operand is given explicitly as a part of the instruction.
Eg.
Move a , 2000 18.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Specify three types of data transfer techniques.
1. Arithmetic data transfer 2.
Logical data transfer 3.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Programmed control data transfer 19.
What is the role of MAR and MDR?
The MAR (memory address register) is used to hold the address of the location to or from which data are to be transferred and the MDR(memory data register) contains the data to be written into or read out of the addressed location.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>20. What are the various types of operations required for instructions?
1. Data transfers between the main memory and the CPU registers 2.
Arithmetic and logic operation on data 3.
Program sequencing and control 4.
I/O transfers 21.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is the role of IR and PC?
Instruction Register (IR) contains the instruction being executed.
Its output is available to the control circuits, which generate the timing signals for controlling the processing circuits needed to execute the instructions.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Program Counter (PC) register keeps track of the execution of the program.
It contains the memory address of the instruction currently being executed .
During the execution of the current instruction, the contents of the PC are updated to correspond to the address of the next instructions to be executed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>22.Define memory access time?
The time that elapses between the initiation of an operation and completion of that operation ,for example ,the time between the READ and the MFC signals .This is Referred to as memory access time.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>23. Define memory cycle time.
The minimum time delay required between the initiations of two successive memory operations, for example, the time between two successive READ operations.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>24.Define Static Memories.
Memories that consist of circuits capable of retaining the state as long as power is applied are known as static memories.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>25.Distinguish Between Static RAM and Dynamic RAM?
Static RAM are fast, but they come at high cost because their cells require several transistors.
Less expensive RAM can be implemented if simpler cells are used.
However such cells do not retain their state indefinitely; Hence they are called Dynamic RAM.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>26.Distiguish between asynchronies DRAM and synchronous RAM.
The specialized memory controller circuit provides the necessary control signals, RAS And CAS ,that govern the timing.
The processor must take into account the delay in the response of the memory.
Such memories are referred to as asynchronous DRAMS.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The DRAM whose operations is directly synchronized with a clock signal.
Such Memories are known as synchronous DRAM 27.what are the various units in the computer?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1,input unit 2.output unit 3.control unit 4.memory unit 5.arithmetic and logical unit 28.what is an I/O channel?
An i/o channel is actually a special purpose processor, also called peripheral processor.
The main processor initiates a transfer by passing the required information in the input output channel. the channel then takes over and controls the actual transfer of data.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>29.what is a bus?
A collection of wires that connects several devices is called a bus.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>30.Define word length?
Each group of n bits is referred to as a word of information and n is called the word length.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>31.explain the following the address instruction?
1.three-address instruction-it can be represented as add a,b,c Operands a,b are called source operand and c is called destination operand.
2.two-address instruction-it can be represented as add a,b 3.one address instruction-it can be represented as add a 4.1 1/2 address instruction it can be represented the type of instruction in which one address always refers to a location in the main memory and the other, shorter address always refers to a cpu register, is intermediate to the one-two-address formats because of this property is called I � address format.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>5.zero address instruction.
It is also possible to use instruction where the location s of all operand are defined implicitly.
This operand of the use of the method for storing the operand in which called push down stack.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Such instructions are sometimes referred to us zero address instruction.
32.what is the straight-line sequencing? the cpu control circuitry automatically proceed to fetch and execute instruction, one at a time in the order of the increasing addresses.
This is called straight line sequencing.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>33.what is the role of pc?
The cpu contains a register called the program counter, which holds the address of instruction to be executed next.. to begin the execution of the program the address of its First instruction must be placed into the pc.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>34.what are steps for execution of a complete instruction?
1.fetch the instruction.
2.fetch the first operand (the contents of the memory location pointed by the address field of the instruction.)
3.perform the calculation.
4.load the result.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>35.what is a a bit slice?
A bit slice is �slice� through the data path of the typical processor.
It contains all Circuits necessary to provide alu function, register transfer and control function for only a few bits of the data path.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>36.what is DMA?
A special control unit may be provided to enable transfer a block of data directly between an external device and memory without contiguous intervention by the cpu.
This approach is called DMA.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>37.why program controlled I/O is unsuitable for high-speed data transfer?
1. in program controlled i/o considerable overhead is incurred.. because several program instruction have to be executed for each data word transferred between the external devices and MM.
2. many high speed peripheral; devices have a synchronous modes of operation. that is data transfer are controlled by a clock of fixed frequency, independent of the cpu.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>38.what is the function of i/o interface?
The function is to coordinate the transfer of data between the cpu and external devices.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>39.what is NUBUS?
A NUBUS is a processor independent, synchronous bus standard intended for use in 32 bit micro processor system.
It defines a backplane into which upto 16 devices may be plugged each in the form of circuit board of standard dimensions.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>40. what do you mean associative mapping technique?
The tag of an address received from the CPU is compared to the tag bits of each block of the cache to see if the desired block is present.
This is called associative mapping technique.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>41. What is LRU replacement algorithm?
When a block is to be overwritten it is sensible to overwrite the one that has gone the largest time without being referenced.
This block is called Least Recently Used block and the technique is called LRU replacement algorithm.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>42. Explain virtual memory technique.
Techniques that automatically move program and data blocks into the physical memory when they are required for execution are called virtual memory technique.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>43. What are virtual and logical addresses?
The binary addresses that the processor issues for either instruction or data are called virtual or logical addresses.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>44. Define translation buffer.
Most commercial virtual memory systems incorporate a mechanism that can avoid the bulk of the main memory access called for by the virtual to physical addresses translation buffer.
This may be done with a cache memory called a translation buffer, which retains the results of the recent translation.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>45. Name some of the IO devices.
1. Video terminals 2.
Video displays 3.
Alphanumeric displays 4.
Graphics displays 5.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flat panel displays 6.
Printers 7.
Plotters 46.
What is branch delay slot?
The location containing an instruction that may be fetched and then discarded because of the branch is called branch delay slot.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>47. What is optical memory?
Optical or light based techniques for data storage, such memories usually employ optical disk which resemble magnetic disk in that they store binary information in concentric tracks on an electromechanically rotated disks.
The information is read as or written optically, however with a laser replacing the read write arm of a magnetic disk drive.
Optical memory offer high storage capacities but their access rate is are generally less than those of magnetic disk.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>48. What is microprogrammed control?
Microprogrammed control in which control signals are generated by a program similar to machine language program.
A sequence of one (or) more microoperation, such as addition, multiplication is called a micro program.
The address where these microinstructions are stored in CM is generated by microprogrammed control.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>49. What is microprogramming?
A sequence of Control Words corresponding to the control sequence of a machine instruction constitutes the micro routine for that instruction, and the individual control words in this micro routine are referred to as microinstructions.
Microprogramming is a method of control unit design in which the control signal selection and sequencing information is stored in a ROM (or) RAM called a control memory CM.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>50.What are static and dynamic memories?
Static memory are memories which require periodic no refreshing.
Dynamic memories are memories, which require periodic refreshing.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>51. What are the steps required for a pipelinened processor to process the instruction?
1. F Fetch: read the instruction from the memory 2.
D Decode: decode the instruction and fetch the source operand(s).
3. E Execute: perform the operation specified by the instruction.
4. W Write: store the result in the destination location.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>52. What are the steps taken when an interrupt occurs?
1. Source of the interrupt 2.
The memory address of the required ISP 3.
The program counter &amp; cpu information saved in subroutine 4.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Transfer control back to the interrupted program 53 Define instruction pipeline.
The transfer of instructions through various stages of the cpu instruction cycle., including fetch opcode,decode opcode,compute operand addresses.
Fetch operands, execute instructions and store results.
This amounts to realizing most (or) all of the cpu in the form of multifunction pipeline called an instruction pipelining.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>54. Define latency.
The term memory latency is used to refer to the amount of time it takes to transfer a word of data to or from the memory.
The term latency is used to denote the time it takes to transfer the first word of data.
This time is usually substantially longer than the time needed to transfer each subsequent word of a block.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>55. Define bandwidth.
Bandwidth is a product of the rate at which the data are transferred (and accessed) and the width of the data bus.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>56. Define hit rate.
A successful access to data in a cache is called a hit.
Number of hits stated as a fraction of all attempted accesses is called the hit rate.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>57. Define miss rate.
A miss rate is the number of misses stated as a fraction of attempted accesses.
Extra time needed to bring the desired information into the cache is called the miss penalty.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>58. Distinguish between system space and user space. assembling the operating system routine into a virtual address space , is called system space that is separate from the virtual space in which user application program reside.
The latter space is called user space.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>59.Define 1.
Signal - The binary information is represented in digital computers by physical quantities called signals.
2. Gates � The manipulation of binary information is done by logic circuits called gates.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gates are blocks of hardware that produce signals of binary 1 or 0 where input logic requirements are satisfied.
3. Flip flop � The storage elements employed in clocked sequential circuits are called flip flops.
A flip flop is a binary cell capable of storing 1 bit of information.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>60. Define combinational circuit.
A combinational circuit is a connected arrangement of logic gates with the set of inputs and outputs.
A combinational circuit transforms binary information from the given input data to the required output data.
Combinational are employed in digital computers required for generating binary control decisions and for providing digital components required for data processing.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>61. Define sequential circuits.
A sequential circuit is an interconnectin of flip-flops and gates.
The gates by themselves constitute a combinational circuit, but when included with the flip flops, the overall circuit is classified as a sequential circuit.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>62. Define interface.
The word interface refers to the boundary between two circuits or devices.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>63. Define pipelining.
Pipelining is a techinique of decomposing a sequential process into sub operations with each subprocess being executed in a special dedicated segment that operates concurrently with all other segments.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>64. Define parallel processing.
Parallel processing is a term used to denote a large class of techniques that are used to provide simultaneous data-processing tasks for the purpose of increasing the computational speed of a computer system.
Instead of processing each instruction sequentially as in a conventional computer, a parallel processing system is able to perform concurrent data processing to achieve faster execution time.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>65. What are the components of memory management unit?
1. A facility for dynamic storage relocation that maps logical memory references into physical memory addresses.
2 A provision for sharing common programs stored in memory by different users .
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>.3.
Protection of information against unauthorized access between users and preventing users from changing operating system functions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>66. What is programmed I/O?
Data transfer to and from peripherals may be handled using this mode.
Programmed I/O operations are the result of I/O instructions written in the computer program.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>DOWNLOAD FULL QUESTION PAPER IN WORD FORMAT About-Us     Contact-Us    Site-map �copyright 2009 All rights are reserved to technicalsymposium.com Architecture Questions Computer Architecture Questions (AR)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(Fall 2011 - Asanovic and Patterson): 1) Explain energy and power.
How is energy dissipated in a modern microprocessor?
What techniques could an architect use to reduce energy consumption in a microprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2) Explain the different types of memory used in modern server and handheld computers.
What are their cost/bit, densities, access latencies, and bandwidths?
How would you take advantage of different memory types in a modern memory system?
3) Describe the operation of an out-of-order superscalar processor based on a unified physical register file (e.g., MIPS R10K or Alpha 21264).
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Describe how register renaming can be performed in parallel for a group of sequential instructions.
What is the minimal number of physical registers needed?
How does instruction scheduling logic cope with variable latency of cache accesses?
4) Describe the principal types of parallelism exploited in computer systems.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Describe representative architectures for each type of parallelism.
(Fall 2010 - Kubi &amp; Patterson): &quot;Q1: Flash Memory Q2: Modern processor Q3: CMOS dependability Q4: Personal Mobile Device&quot; (Fall 2008 - Asanovik &amp; Wawrzynek): &quot;1.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Memory Hierarchy a) For a typical modern general purpose processor sketch and describe in detail the memory hierarchy. b) How would you enhance/modify the above to accommodate several processors sharing a cache-coherent memory. c) Would your solution scale to hundreds of processors?
If not, what would you change to accommodate the scaling?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2. Processor Microarchitecture a) Sketch and describe the major stages of a modern out-of-order processor pipeline and how the processor works. [BP/IF, Dec/RegRename, Ex, Completion, Commit] b) Devise and write assembly code for an example program where register renaming helps performance.
Show an example where it doesn't help. c) Devise and write assembly code for an example program where branch prediction helps and where it doesn't. d) If you had to choose only one of register renaming and branch prediction over the other, which one would you choose and why?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. Power and Energy a) What is the relationship between power and energy?
Why are these important considerations in digital systems. b) Describe (in formula form) the components of power consumption in CMOS circuits. c) Take the design of a floating point unit for instance.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For a fixed required throughput, what could you do to lower its energy/operation? d) What ultimately limits the effectiveness of the techniques from c)?
4. Parallel Processing In 2005 there was a historic in the industry with all microprocessor companies announced that their future products would be chip-scale multiprocessors (CMPs).
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Why did this happen? [No more Vt scaling (leakage problem dominates), diminishing returns on ILP extraction, memory latency (&amp;BW?) problems] 5.
Looking ahead Consider as a baseline architecture, a collection of energy efficient RISC cores.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Assuming that technology stops scaling, what can be done to further reduce energy consumption for a given workload? [accelerators, vectors, ...]&quot; (Spring 2004 - Wawrzynek &amp; Patterson): &quot;1) Power and Energy in Microprocessors a) Give us a metric for expressing energy efficiency of a microprocessor for a particular workload.
(would expect MIPS/watt or joules/instruction, ...) b) If I gave you a microprocessor and that workload, how would you measure its average energy efficiency?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(needs to understand P=IV and think about using a current meter.
Then measure time and number of instructions, ..., ) c) What are the factors that effect/determine power consumption in this experiment and how could you influence each factor?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(P = Cv&lt;s&gt;2f, c is process and wire lengths, v is process and user set,...)
2) Microprocessor Limitaions a) What do you think some of the technological limitations to increasing microprocessor performance in the next 3 to 7 years? b) How do recent 80x86 microprocessor designs match up to those limitations? c) How would you expect such limitations will change the microarchitectures in this time period?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3) Networks of processors Suppose you were engineering a multiprocessor on a chip (a homogeneous array of simple processing units with local memory each).
Think about what structure you would use to connect the processors together. a) What network topologies would you consider and why?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(Should be able to describe meshes, trees, busses, xbar, etc.)
What factors would you consider in choosing one versus another?
What other factors would come into the design?
(need to consider area cost, control and routing complexity, packet switched or circuit swithed, cross-section bandwidth, scaling) How would you go about determining the best design for this network?&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(Fall 2003 - Culler &amp; Kubiatowicz): &quot;Q1: For the first question, we were looking for concise definition of precise interrupts, followed by clear illuminations of mechanisms for achieving precise interrupts in both 5-stage and out of order pipelines.
Q2: The second question focused on evaluating design tradeoffs.
It centered on energy efficiency.
Q3: The third question focused on instruction set design.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The specific context was communication on a chip based multiprocessor.
We asked for a list of possible forms of communication and then to discuss how to extend the ISA for each.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Q4: For the final question, we were looking to explore the design space for a NAS (network attached storage) system.&quot;
(Fall 2002 - Culler &amp; Patterson): &quot;Q1: Vector processing Q2: Power and energy Q3: Errors in computers Q4: Branch prediction&quot; (Spring 2002 - Kubiatowicz &amp; Wawrzynek): &quot;Q1: RISC/CISC Q2: Power consumption Q3: Networked multiprocessors Q4: Multi-threading&quot; (Fall 2001 - Kubiatowicz &amp; Patterson): &quot;Q1: modern processor design Q2: trace caches Q3: VLSI scaling Q4: high-transaction rate server&quot; (Spring 2001 - Wawrzynek &amp; Kubiatowicz): &quot;Q1: What are precise interrupts?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Why are they useful?
Discuss how to implement precise interrupts in a modern processor (superscalar, out-of-order) of your choice.
What is branch prediction?
Why is it useful?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How does it fit into your example processor?
What other things do people try to predict?
Q2: Draw the floorplan for a processor (real or imaginary but realistic).
Include the major functional blocks and their approximate sizes.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Imagine you now have a merged DRAM/logic process.
Assuming an identical organization and memory hierarchy, how would this affect the floorplan?
How would the floorplan differ if you could change the organization or memory hierarchy?
Q3: What is memory coherency in multiprocessors?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Discuss coherency in a snoopy bus model.
Describe a series of reads and writes in this model.
What is consistency?
What is sequential consistency and how can it be modelled?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Describe the limitation of snoopy-based coherency models?
What is/are the solutions?
Describe a series of reads and writes in that model?
Q4: We want to create a network router from a standard PC.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(For our purposes, a router will input a packet, examine the packet, make a decision about where to route the packet based on stored state, and send the packet out that port.)
Draw a diagram of this system and trace a packet through this system.
How do we determine the number of ports that a single PC can support?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is the bottleneck?
How do you justify this?
Estimate various execution times, bandwidths, and latencies.&quot;
(Fall 2000 - Wawrzynek &amp; Patterson): &quot;Q1: Identify the critical paths in microprocessor design.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is the effect of carry logic on adder delay?
Discuss fast adder techniques.
Q2: Discuss issues related to disk drives, trends, today's spec, and future specs.
Reason about read times for an entire disk and how this relates to RAIDs and other disk arrays.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Q3: Discuss the basic issues involved with system implementation alternatives.
Q4: Identify some out-of-order (OOO) execution processors.
Select one and describe its operations.&quot;
(Spring 2000 - Wawrzynek &amp; Kubiatowicz): &quot;Q1: Discuss the distinctions between RISC and CISC; compare and contrast the advantages of one over the other.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Discuss whether the RISC/CISC distinction is still valid today.
Q2: Discuss the detailing of overheads of message communication.
How would you optimize communication?
Q3: Account for the large difference in energy observed between solving a problem with custom hardware vs. a general purpose processor.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>List some of the metrics one might use to decide between a custom ASIC, an FPGA, or a general purpose processor.
Q4: What is the cache-coherence problem?
What are the definitions of sequential consistency?
Discuss the details of snoopy protocols. and about the typical bus bandwidth.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Estimate the maximum number of processors that would fit on a bus.&quot;
(Fall 1999 - Wawrzynek &amp; Kubiatowicz): &quot;Q1.
Describe precise interrupt.
Why is it useful?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Describe exactly how you would implement it on a 5 stage pipeline.
Draw a rough block diagram of an out-of-order execution processor.
Describe how you implement precise interrupt with respect to that block diagram.
What happens to the precise interrupt scheme when there is branch mispredictions?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Q2: Given a very simple processor with no cache, no floating point unit, single issue, everything in order, pipelined processor, estimate the number of transistors it will use.
Given the number of transistors you just came up with, can you implement it using some state-of-the art FPGA?
What is the rough capacity of the FPGA?
What are some pros and cons of implementing such a processor on a FPGA if it is possible?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Why would someone ever want to do such thing in the real world?
Q3: Suppose you want to implement a multiprocessor over the conventional network (like ethernet), describe all the mechanisms you need to pass a message from one user to another user.
Estimate the time it takes for the message to go through each part of the process.
Given the time you just estimated, is it fast enough to meet the need of implementing multiprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How can you improve the speed?
How can you protect users from interfering each other if they have control over the network hardware?
Q4: Define energy efficiency.
Given that you have a 4-way super-scalar processor, a program, and the data input, describe how (including hardware setup) you can measure the energy efficiency of this processor.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What would be the issue if you want to compare this energy efficiency number with other processors?
If you are a chief architect, what kind of processor you would design to optimize energy efficiency?&quot;
(Spring 1999 - Patterson &amp; Kubiatowicz): &quot;Q1: What are the causes of cache misses (three C's)?
Describe how to remove these.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Under what circumstances would they be advantageous?
Q2: What is the definition of precise interrupts and the implementation of precise interrupts in a five-stage pipeline?
Discuss modern superscalar processors.
Q3: Discuss some of the issues behind the replacement of buses with routers.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What are some advantages of router-like architectures?
Q4: Discuss computational paint.&quot;
(Fall 1998 - Patterson &amp; Kubiatowicz): &quot;Q1: What is the definition of precise interrupts and the implementation of precise interrupts in a five-stage pipeline?
Discuss modern superscalar processors.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Q2: What are the consequences of increased wire delay?
How would you evaluate ambiguous design alternatives?
Q3: Discuss the basic message communication path.
Why would a separate network be needed to avoid protocal overhead?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Q4: (A database design problem was given.)
Calculate the numbers of disks and CPUs for 100% utilization as well as bus organization.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What does the queueing theory suggest?&quot;
August 2000 Computer architecture and design interview questions | TechInterviews Search Tech Interviews Tech Interviews Prepare for job interviews with the questions and answers asked by high-tech employers Skip to content * .NET * C++ * Database * General * Hardware * Java * Networking * Puzzles * SAP ABAP * Testing * Unix/Linux * VB * Web dev * Windows Hardware &gt;&gt; Computer architecture and design interview questions « Embedded systems interview questions Microsoft interview questions» Computer architecture and design interview questions By admin | December 7, 2003 * What is pipelining?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What are the five stages in a DLX pipeline? * For a pipeline with ‘n’ stages, what’s the ideal throughput?
What prevents us from achieving this ideal throughput? * What are the different hazards?
How do you avoid them? * Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages? * What are Branch Prediction and Branch Target Buffers? * How do you handle precise exceptions or interrupts? * What is a cache? * What’s the difference between Write-Through and Write-Back Caches?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Explain advantages and disadvantages of each. * Cache Size is 64KB, Block size is 32B and the cache is Two-Way Set Associative.
For a 32-bit physical address, give the division between Block Offset, Index and Tag. * What is Virtual Memory?
* What is Cache Coherency?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is MESI?
* What is a Snooping cache?
* What are the components in a Microprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is ACBF(Hex) divided by 16?
* Convert 65(Hex) to Binary * Convert a number to its two’s compliment and back * The CPU is busy but you want to stop and do some other task.
How do you do it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This entry was posted in Hardware .
Bookmark the permalink .Post a comment or leave a trackback:Trackback URL . « Embedded systems interview questions Microsoft interview questions» 12 Comments on Computer architecture and design interview questions * Charles Clevor Posted 3/23/2005 at 5:05 am| Permalink I think questions should involve clues with sections of reference of reference to aid in effective revision.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Deepak Posted 10/24/2007 at 4:21 am | Permalink What are the five stages in a DLX pipeline?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Deepak Posted 10/24/2007 at 4:22 am | Permalink What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 11/6/2007 at 3:14 am | Permalink # Deepak said, What are the five stages in a DLX pipeline?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Instruction Fetch Stage Instruction Decode Stage Instruction Execution Stage Memory Stage Write Back * Rahul Singhal Posted 11/6/2007 at 3:16 am | Permalink # Deepak said, What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>MESI is a Cache Coherency protocol used in multi-processor systems to indicate the state in which the data in the cache of a particular processor is.
It stands of Modified, Exclusive, Shared and Invalid * sateesh rahul Posted 8/6/2008 at 9:47 am | Permalink 1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Instruction fetch cycle (IF): Send the program counter (PC) to memory and fetch the current instruction from memory.
Update the PC to the next sequential PC by adding 4 (since each instruction is 4 bytes) to the PC.
2. Instruction decode/register fetch cycle (ID): Decode the instruction and read the registers corresponding to register source specifiers from the register file.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Do the equality test on the registers as they are read, for a possible branch.
Sign-extend the offset field of the instruction in case it is needed.
Compute the possible branch target address by adding the sign-extended offset to the incremented PC.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In an aggressive implementation, which we explore later, the branch can be completed at the end of this stage, by storing the branch-target address into the PC, if the condition test yielded true.
Decoding is done in parallel with reading registers, which is possible because the register specifiers are at a fixed location in a RISC architecture.
Appendix A Pipelining: Basic and Intermediate Concepts This technique is known as fixed-field decoding.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Note that we may read a register we don’t use, which doesn’t help but also doesn’t hurt performance.
(It does waste energy to read an unneeded register, and power-sensitive designs might avoid this.)
Because the immediate portion of an instruction is also located in an identical place, the sign-extended immediate is also calculated during this cycle in case it is needed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.
Execution/’effective address cycle (EX): The ALU operates on the operands prepared in the prior cycle, performing one of three functions depending on the instruction type.
Ã¢â‚¬Â¢ Memory reference: The ALU adds the base register and the offset to form the effective address.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ã¢â‚¬Â¢ Register-Register ALU instruction: The ALU performs the operation specified by the ALU opcode on the values read from the register file.
Ã¢â‚¬Â¢ Register-Immediate ALU instruction: The ALU performs the operation specified by the ALU opcode on the first value read from the register file and the sign-extended immediate.
In a load-store architecture the effective address and execution cycles can be combined into a single clock cycle, since no instruction needs to simultaneously calculate a data address and perform an operation on the data.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4. Memory access (MEM): If the instruction is a load, memory does a read using the effective address computed in the previous cycle.
If it is a store, then the memory writes the data from the second register read from the register file using the effective address.
5. Write-back cycle (WB): Ã¢â‚¬Â¢ Register-Register ALU instruction or Load instruction: Write the result into the register file, whether it comes from the memory system (for a load) or from the ALU (for an ALU instruction).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:19 pm | Permalink 9.
Write Through: All the writes to cache always go to the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Write back: Writes to cache do not go to the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Advantages of WT: Mostly used in mutliprocessor systems and keeps the data coherent beteen the cache and the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Disadv of WT: It requires more bandwidth as all the writes need to go all the way to the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Adv of WB: All the writes happen at the speed of the cache which is faster and does not require a large bandwidth.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Disadv of WB: Coherency is not there.
Needs protocol for coherency.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:26 pm | Permalink 6.
Branch Prediction is the scheme that is used to predict if the branch would be taken or not based on the behavior of the branch in the past.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Branch Target Buffer is the hardware that, in most cases, stores the target of a taken branches in the past.
Thus if the branch is encountered again and if the prediction is taken the address of the next instruction to be read is provided by the reading out the BTB.
Usually BTB is implemented as a fully associative cache.
Some BTB implementation also store the target instructions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:27 pm | Permalink 19.
Send an interrupt to the busy CPU.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:30 pm | Permalink For a pipeline with Ã¢â‚¬ËœnÃ¢â‚¬â„¢ stages, whatÃ¢â‚¬â„¢s the ideal throughput?
What prevents us from achieving this ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ans: The ideal throughput should be 1 instruction per clock cycle.
Dependencies and hazards like Data Hazard, Control Hazard and structural hazards prevent us from acheiving them.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:37 pm | Permalink Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ans: There are several reasons for that: 1.
Since almost all the processors use branch prediction (which happens quite late in the pipeline say 30), if branch prediction comes out to be incorrect then processor has to flush all 29 instructions in pipe behind branch instruction which is a huge performance hit.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2. 50 pipe statges would require registers after each stage and each register would have some latency.
So eventually the latency of each instruction increases (although throughput will increase)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. If you have 50 pipe stages, you are more likely to run it at a higher clock speed [because you are able to :)], you would end up having heating issues.
Faster the clock, hotter it gets….remember Pentium 4 Prescott :)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:41 pm | Permalink What is a cache?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A cache is faster memnory that is placed between the main memory and the processor to reduce the gap between their operating speeds.
Cache are usually very fast SRAMS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Caches exploit the property of temporal and spatial locality.
(Remember to mention this in your interview):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Temporal locality: If the data accessed recently, it is more likely to be accessed soon again.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Spatial locality: If a data was accessed, processor is more likely to access the data closer to it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Comment Click here to cancel reply.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your email isnever published nor shared.
Required fields are marked * Name * Email * Website Comment * * * Job Interview Question Articles * C# Interview Questions and Answers * QTP Interview Questions and Answers * C++ Interview Questions and Answers * PHP Interview Questions and Answers * XML Interview Questions and Answers * JavaScript Interview Questions and Answers * Asp.Net Interview Questions and Answers * J2EE Interview Questions and Answers * ABAP Interview Questions and Answers * Perl Interview Questions and Answers * Java Interview Questions and Answers * Resources * Technology Question and Answer Website * How to dance around the salary-expectation question * 10 mistakes managers make during job interviews * Stupid interview questions * How to Answer These Tricky Interview Questions * Seven tips for writing an online profile for LinkedIn, MySpace or Facebook * Laptop computers * Ink cartridges * Tutorials * AJAX Tutorials * Dealing with your job * Getting a job * JavaScript tutorials * Job interview tips from Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>HotJobs * MySQL tutorials * Retiring from your job * Ruby on Rails tutorials * Salary guide for IT jobs * Self-employment * TechInterviews guides in PDF * Understanding pointers * XML Tutorials * XUL tutorials * RSS Feeds * All posts * All comments Powered by WordPress .
Built on the Thematic Theme Framework .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>20 computer architecture and design interview questions and answers - freshers, experienced 20 computer architecture and design interview questions and answers            * Interview Q&amp;A * Videos * Placement papers * HR interview * CV * Cover letter * GD * Aptitude * Online practice tests * Java tutorial * .NET tutorial * Log In * Student Login * College Login * User Login For Video Computer Architecture and Design interview questions and answers 1.
Different types of interrupts in a microprocessor system - Computer architecture and design 2.Common rules of assembly language - Computer architecture and design 3.What do you understand vertical micro code?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Computer architecture and design 4.Explain the two hardware methods to establish priority - Computer architecture and design 5.Explain the requirement of page-table and the different ways in which the table can be organized 6.Flip Flops - Computer architecture and design 7.Partitioning in reference to operating systems - Computer architecture and design 8.What do you understand by virtualization.
Mention the pros and cons.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>9.Differences between high level and assembly language. - Computer architecture and design 10.Differences of horizontal and vertical micro code - Computer architecture and design 11.Different types of mappings used in cache memory - Computer architecture and design 12.What are the different ways in which writing into the cache be done?
- Computer architecture and design 13.Different types of micro-operations - Computer architecture and design 14.What are the different types of fields that are part of an instruction?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>15.What are the major difficulties of pipeline conflicts in processors supporting pipe lining?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>16.Characteristics of the RISC architecture - Computer Architecture and Design 17.Steps involved in an instruction cycle - Computer Architecture and Design 18.Components of the Ven Neumann architecture - Computer Architecture and Design 19.Different types of addressing modes of an instruction - Computer Architecture and Design 20.Pros and cons of emulation - Computer Architecture and Design 1.
Define computer architecture and design.
2. What is computer organization?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. What are the different classes of computers?
4. State and explain Amdahl's Law.
5. Define what is a data path?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>6. What is the principle of locality?
7. What are the various categories of Computer architecture?
8. What are instruction sets?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>9. Define the layout for instruction sets?
10. What do you understand by ISA?
11. What steps are performed during the ISA process?
12. How can instruction sets be classified.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>13. State the difference between memory interpretation and memory alignment?
14. What is DLX architecture?
15. What is an instruction fetch cycle?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>16. What is the effective address cycle?
17. What does system design process include?
18. Define implementation in terms of computer architecture and design?
19. What is logic implementation?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>20. What is circuit implementation?
21. What is physical implementation?
22. What is design validation?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>23. What are the important types of computer architecture?
24. State the differences between a scalar and a vector processor?
25. State the differences between register machine and stack machine?
26. What is macro architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>27. What do you understand by assembly ISA?
28. Define the programmer visible macro architecture?
29. Define UISA in reference to computer architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>30. What is the purpose of defining a pin architecture?
31. What are the performance issues of pipe lining?
32. What is the importance of pipe lining in computer architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>33. What are the various pipeline hazards?
34. What are structural hazards in reference to pipelines?
35. What are data hazards in reference to pipelines?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>36. How can data hazards be classified?
37. What are stalls in reference to pipeline hazards?
38. How can hazards be controlled?
39. What are branch prediction schemes?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>40. What are Exceptions?
41. What are the different types of exceptions?
42. What are user maskable exceptions?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>43. What is parallelism in reference to computer architecture?
44. What are the two different levels of parallelism?
45. What is instruction level parallelism?
46. What is dynamic scheduling?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>47. What are crosscutting issues faced in ILP?
48. What are the limits of instruction level parallelism?
49. What do you understand by thread level parallelism?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>50. What are the common issues faced in parallelism with multiple processors?
51. What is the significance of storage system's in reference to computer architecture?
52. What is a fault in computer architecture terms?
53. How is I/O performance measured?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Write your comment - Share Knowledge and Experience Interview questions * ASP.NET * ADO.NET * AJAX * C#.NET * VB.NET * NET Remoting * NET interview *   * C * C++ * Java * Oops * Data structure * Operating system *   * Database concepts * Oracle * Sql server * Biztalk * Sharepoint * Notification services * Reporting services * Service-oriented architecture * Data warehousing *   * PHP * MySQL * Project management * Linux * Testing * Networking * Software engineering * Microsoft solution framework * UML * XML * HTML * SOAP * CSS * Web services * VBScript * JavaScript *   * Job interviews * Working from home * Articles - Nishant Kumar   Home | Want a Job?
Submit Key Skills | Employer login | My key skills | About us | Sitemap | Contact us Copyright © 2008 - 2010 CareerRide.com.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All rights reserved.
Terms of use  |  Follow us on Facebook!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>               Placement practice test: Java | SAP | .NET | Oracle | Sql Server | QA | Aptitude | Networking | All Skills AMD - Mostly technical questions related to computer architecture, vlsi, and digital design. nothing very unexpected but need to know the basics very well. | Glassdoor.com.au * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * Australia * Canada * India * United Kingdom * United States Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look atAMD interview questions and advice.
All interview reviews are posted anonymously byAMD employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.0 831 AMD 3.0 831 reviews www.amd.com Sunnyvale, CA 5000+ Employees Work in HR?
Claim Profile Share an Interview Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections 65 interview experiences Back to all AMD Interview Questions &amp; Reviews Interview Question for Co-op at AMD: Apr 04, 2013 0 of 0 people found this helpful Mostly technical questions related to computer architecture, vlsi, and digital design. nothing very unexpected but need to know the basics very well.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Tags:   See more ,   See less 8 Add Tags [?]
See more for this AMD Co-op Interview Helpful Question?   Yes | No Inappropriate?
Answers &amp; Comments (0)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To comment on this question, Sign In with Facebook or Sign Up You might also be interested in: Interview Questions , Co-op Interview Questions ,AMD Interview Interviews by Company * Monash Interview * Coles Group Interview * Cotton On Interview * University of Sydney Interview * Subway Interview * Commonwealth Bank of Australia Interview * ThoughtWorks Interview * Macquarie Group Interview * BP Interview * Optus Interview * CBA Interview * Goldman Sachs Interview * AECOM Interview * Bunnings Warehouse Interview * Madison Tyler Holdings Interview Salaries by Company * ACT Public Service Salaries * ACT Auditor-General's Office Salaries * ACT Public Service Health Directorate Salaries * ACT Public Service Justice and Community Safety Directorate Salaries * ACT Public Service Treasury Directorate Salaries * Cultural Facilities Corp.
Salaries * Spinecare Chiropractic Castle Plaza Salaries * Yamatji Marlpa Aboriginal Salaries * RTW Steel Fabrication &amp; Construction Salaries * Schindler Lifts Australia Salaries * Vital Services Group Salaries * Thai Airways Salaries * Southgate Electrics Salaries * Total Security Concepts Salaries * Westcoast Electrics Salaries Tags are like keywords, helping to categorise interview questions that have something in common.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, you need an account to use this feature.
Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team, and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Out of Here * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A GATE 2011 question about Computer Architecture - GeeksforGeeks | GeeksforGeeks GeeksforGeeks A computer science portal for geeks Log in * Home * Q&amp;A * Interview Corner * Ask a question * Contribute * GATE * Algorithms * C * C++ * Books * About us Loading A GATE 2011 question about Computer Architecture Home › Forums › Multiple Choice Questions › A GATE 2011 question about Computer Architecture Tagged: GATE This topic contains 4 replies, has 2 voices, and was last updated by  Indranil Bhattacharya 11 months, 1 week ago .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Viewing 5 posts - 1 through 5 (of 5 total) * Author Posts * February 15, 2011 at 6:57 AM #80282 Anonymous Consider a hypothetical processor with an instruction of type LW R1, 20(R2), which during execution reads a 32-bit word from memory and stores it in a 32-bit register R1.
The effective address of the memory location is obtained by the addition of constant 20 and the contents of register R2.
Which of the following best reflects the addressing mode implemented by this instruction for the operand in memory?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(A) Immediate Addressing ( Register Addressing (C) Register Indirect Scaled Addressing (D) Base Indexed Addressing August 18, 2011 at 4:52 PM #105298 Anonymous Based indexed Addressing, as the register R2 will serve as the index and 20 will be the Base address..
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>January 6, 2012 at 5:24 PM #105299 Anonymous based indexed addressing January 7, 2012 at 10:06 AM #105300 Anonymous base indexed addressing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>May 4, 2012 at 9:54 AM #105301 Indranil Bhattacharya Participant Base Index Addressing.. as the Content of register R2 will serve as the index and 20 will be the Base address.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Author Posts Viewing 5 posts - 1 through 5 (of 5 total) You must be logged in to reply to this topic.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  @geeksforgeeks, Some rights reserved        Contact Us Powered by WordPress &amp; MooTools , customized by geeksforgeeks team koolkampusmail : Message: COMPUTER ARCHITECTURE INTERVIEW QUESTIONS Skip to search.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* New User?
Register * Sign In * Help Make Y!
My Homepage *   Notifications Help * Mail * My Y! * Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Groups Search Search Web Breaking News Visit Yahoo!
News for the latest.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>×Close this window koolkampusmail · KoolKampus Newsletter Mail * Home * Messages * Attachments * Members Only * Post * Files * Photos * Links * Database * Polls * Members * Calendar The Yahoo!
Groups Product Blog Check it out!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Info Settings Group Information * Members: 2891 * Category: Education * Founded: Jun 11, 2005 * Language: English Already a member?
Sign in to Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Groups Tips Did you know...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Message search is now enhanced, find messages faster.
Take it for a spin.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Messages Message # Search: Advanced Messages Help Topic List   &lt; Prev Topic  |  Next Topic &gt; COMPUTER ARCHITECTURE INTERVIEW QUESTIONS &lt; Prev  Next &gt; Posted By: * aloksha2006 * aloksha2006 * Send Email Tue Jan 2, 2007 11:08 am  | * Options * View Source * Use Fixed Width Font * Unwrap Lines COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!   Get NEW INTERVIEW QUESTIONS DAILY Join http://groups.yahoo.com/group/kkmail   www.kyapoocha.com   CLICK THE QUESTION TO VIEW THE ANSWER                  What is cache memory?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is hard disk and what is its purpose?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Where�s MBR located on the disk?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What�s the speed and device maximum specs for Firewire?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What�s the difference between L1 and L2 cache?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Name the processor lines of two major manufacturers?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Where does CPU Enhanced mode originate from?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Where does the Real mode on the CPU come from?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer How do you clear CMOS password?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What are the basic expansion card types?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is a compiler?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is NV-RAM?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is called Scratch pad of computer?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is the difference between primary &amp; secondary storage device?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is meant by LATCH?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer   VIEW OTHER CATEGORIES :   * AJAX Interview Questions * Microprocessors Interview Questions * ASP.Net Interview Questions * Networking Interview Questions * BlueTooth Interview Questions * Object Oriented Interview Questions * C# Interview Questions * Operating System Interview Questions * C/C++ Interview Questions * Oracle Interview Questions * Computer Architecture Interview Questions * PHP Interview Questions * Computer Networks Interview Questions * Puzzles * CSS Interview Questions * Questions to Ask during an HR Interview * Data Structure Interview Questions * SAP-ABAP Interview Questions * Data WareHousing Interview Questions * Siebel Interview Questions * Database Interview Questions * Software Testing * EJB Interview Questions * SQL Interview Questions * HR Interview Questions * Struts Interview Questions * HTML * System Integration Interview Questions * J2EE Interview Questions * UNIX Interview Questions * Java Interview Questions * VB.NET Interview Questions * JavaScript * VBScript Interview Questions * JMS Interview Questions * Visual Basic Interview Questions * JSP Interview Questions * XML Interview Questions * Linux Interview Questions * Microprocessors Interview Questions  Student Resources...
HR Interview Questions C Technical Questions MBA Information C++ &amp; OOPS Questions GATE Preparation Java - Interview Questions GRE Preparation Data Structures Technical Semester Files &amp; Reports Unix/Linux Based Questions Paper Presentations Operating Systems Concepts GD Preparation Database Mgmt.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Systems Visa Information Computer Networks TOEFL Overview ASP.NET Questions MBA Interview Prep J2EE Interview Questions   __________________________________________________ Do You Yahoo!?
Tired of spam?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Mail has the best spam protection around http://mail.yahoo.com &lt; Prev  Next &gt; Expand Messages Author Sort by Date COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Oct 25, 2006 12:45 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Oct 25, 2006 12:52 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Oct 25, 2006 12:52 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Nov 30, 2006 9:45 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Nov 30, 2006 9:45 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Dec 24, 2006 6:52 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Dec 24, 2006 6:54 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Dec 24, 2006 6:55 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!
Get NEW INTERVIEW...
Alok Sharma aloksha2006 Dec 28, 2006 9:28 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Dec 28, 2006 9:28 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Dec 28, 2006 9:29 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Jan 2, 2007 11:55 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Jan 2, 2007 12:17 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Alok Sharma aloksha2006 Jan 15, 2007 9:30 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Jan 15, 2007 9:31 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Jan 15, 2007 9:35 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Feb 26, 2007 9:28 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Feb 26, 2007 9:29 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Feb 26, 2007 11:55 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS ICC CRICKET WORLD CUP 2007� LIVE SCORES AND UPDATES.
MATCH SCHEDULE ONLY AT KOOLKAMPUS.COM COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Mar 21, 2007 12:07 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS ICC CRICKET WORLD CUP 2007� LIVE SCORES AND UPDATES.
MATCH SCHEDULE ONLY AT KOOLKAMPUS.COM COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most... ankur jain ankurjain1212 Mar 21, 2007 12:07 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS ICC CRICKET WORLD CUP 2007� LIVE SCORES AND UPDATES.
MATCH SCHEDULE ONLY AT KOOLKAMPUS.COM COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Alok Sharma aloksha2006 Mar 21, 2007 12:08 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Mar 30, 2007 12:18 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Mar 30, 2007 12:20 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu14 Mar 30, 2007 12:20 pm &lt; Prev Topic  |  Next Topic &gt; SPONSOR RESULTS Home Loan EMI Calculator www.ApnaPaisa.com/emicalculator - How much EMI will you have to pay?�Just enter amount, tenure &amp; rate.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Southgate Computers www.SouthgateComputers.com - New and Used desktops - laptops Super fast gaming computers Your Daily Dose of Fun http://www.india.com/ - With Bollywood Gossip, Pics, Cars, Gadgets &amp; More - On India.com!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Copyright � 2010 Yahoo!
Inc.
All rights reserved.
Privacy Policy - Terms of Service - Guidelines NEW - Help   Newest 'computer-architecture' Questions - Stack Overflow Stack Exchange log in | careers 2.0 | chat | meta | about | faq Stack Overflow * Questions * Tags * Users * Badges * Unanswered * Ask Question Tagged Questions info newest frequent votes active unanswered Thecomputer-architecture tag has no wiki summary.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>learn more… | top users | synonyms -3 votes 0answers 27 views How much memory is required for the page tables? [closed]
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>a.
Consider a machine with 32-bit virtual addresses, 32-bit physical addresses, and a 4096-byte page size.
A two-level page table system is used and each table occupies one full page.
Assume each page ... memory-management computer-architecture asked yesterday user2282600 1 0 votes 0answers 13 views How to evaluate the critical path for MIPS single cycle CPU The Situation I'm trying to read the book 'Digital Design Computer Architecture'.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In the part of Performance Analysis(7.3.4 in the book), Author refers to clock cycle for MIPS single cycle processor. ... computer-architecture asked yesterday inherithandle 648 1 vote 0answers 16 views find the cache data accessed by thread I read from wiki that &quot;Data is transferred between memory and cache in blocks of fixed size, called cache lines.
When a cache line is copied from memory into the cache, a cache entry is created.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The ... multithreading caching operating-system scheduling computer-architecture asked yesterday naran 257 1 vote 0answers 15 views find the pages accessed by thread I am looking for some scheduling options based on data accessed by threads.
Is there any way to find the pages of cache accessed by a specific thread.
If i have two threads from two different ... multithreading caching operating-system scheduling computer-architecture asked yesterday naran 257 0 votes 3answers 35 views Increasing cpu core directly related to performance? [closed]
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Simple question, increasing core directly related to performance?
My understanding (kindly correct me if i am wrong) is in multi-core systems, communication overhead and memory latencies are a ... performance architecture computer-architecture asked Apr 11 at 13:31 Saqlain 1,601411 0 votes 1answer 43 views Are possible ones these MIPS instructions?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'm trying to crash problems in the book 'Computer organization and Design'.
I come across a sequence of instructions in solution of book.
But Qtspim, mips assembler, can't interpret them.
Here is ... mips computer-architecture asked Mar 31 at 8:07 inherithandle 648 -1 votes 1answer 36 views How do people go about building a computer from scratch and adding an OS to it? [closed]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'm not talking about custom built computers.
I'm talking about building a computer totally from scratch, with its own operating system.
How does putting electric circuits and transistors together, ... architecture computer-architecture asked Mar 30 at 15:33 Brad Guy 12 -2 votes 0answers 72 views LRU Algorithms, Aging Algorithm, Clock Ticks? [closed]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Having some trouble understanding this question here.
I've looked through my book for an answer but I got nothing that would make me understand this better.
&quot;In clock tick 0, pages 0, 1 are ... algorithm caching computer-architecture lru asked Mar 26 at 20:56 kangtong 1 0 votes 0answers 77 views I'd like to read memory combinationally I'd like to read memory combinationally using the enable input 'MemRead'.
Also the input 'i_data' is written into memory on rising clock edge.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>But it does not work.
Am i using always statements ... verilog computer-architecture modelsim asked Mar 23 at 5:37 inherithandle 648 0 votes 1answer 17 views Forwarding and stall length I'm studying for an exam, currently a question about forwarding.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I've come across two examples of pipelining.
(FI = Fetch instruction, DI = Decode instruction, CO = Call operand, FO = Fetch operand, ... pipeline forwarding computer-architecture asked Mar 21 at 11:30 Yoan 1025 0 votes 1answer 16 views How to retrieve unique identification from computer?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What can I extract from computer to identify it.
MAC address, Hard disk serial number, then? identifier computer-architecture asked Mar 21 at 11:23 Armen Khachatryan 88317 2 votes 0answers 45 views How are operating systems compiled and booted the very first time? [migrated]
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'm interested in how operating systems work.
I've been reading some articles about Linux and seem to understand how it all generally comes together, but I feel like there's a chicken and egg dilemma ... c compilation operating-system computer-architecture asked Mar 18 at 2:45 Gleb 575 0 votes 1answer 51 views GPU Architecture Source Book I want to know all about GPU's HARDWARE ARCHITECTURE and all i got on the internet was nothing except GPU programming , i need basic hardware introduction such as ALU , Memory management and ... can ... hardware gpu computer-architecture asked Mar 15 at 16:39 xinox 11 0 votes 1answer 39 views Ratio of Source Code / Machine Language [closed]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For a Computer Science assignment, I am supposed to write a small program in any language and determine the ratio of source code instructions to compiled machine code instructions - how do I do this?
computer-science computer-architecture asked Mar 1 at 1:45 beginnerprogrammer 709 1 vote 1answer 81 views Software Stack for a Particular computer I am working on a project and my team is responsible for the software stack of the particular hardware.
I only have the instruction set of the processor in my hand and I need to develop the complete ... c assembly computer-architecture instruction-set askedFeb 25 at 20:22 Anirudh Chhangani 455 1 2 3 4 5 … 17 next 15 30 50 per page newest computer-architecture questions feed 248 questions tagged computer-architecture about » Community Bulletin blog Introducing our Careers 2.0 Employer Resource Center Related Tags assembly  × 35 operating-system  × 26 mips  ×  25 computer-science  × 25 c  × 23 architecture  ×  20 hardware  × 19 memory  × 18 x86  × 18 caching  × 17 c++  × 12 cpu-architecture  × 11 memory-management  × 11 binary  × 10 cpu  × 9 processor  × 7 instruction-set  × 7 verilog  × 6 pipeline  × 6 parallel-processing  × 5 cpu-registers   × 5 intel  ×  5 multithreading  × 4 optimization  ×  4 compiler  × 4 about | faq | blog | chat | data | legal | privacy policy | jobs | advertising info |mobile | contact us | feedback ■ stackoverflow.com   ■ api/apps   ■ careers 2.0   ■ serverfault.com   ■ superuser.com   ■ meta   ■ area 51   ■ webapps   ■ gaming   ■ ubuntu   ■ webmasters   ■ cooking   ■ game development   ■ math   ■  photography   ■ stats   ■ tex   ■  english   ■ theoretical cs   ■ programmers   ■ unix   ■ apple   ■ wordpress   ■ physics   ■ home improvement   ■ gis   ■  electrical engineering   ■ android   ■ security   ■ bicycles   ■ dba   ■  drupal   ■ sharepoint   ■ scifi &amp; fantasy   ■ ux   ■ skeptics   ■ rpg   ■  judaism   ■ mathematica   ■ travel   rev 2013.4.16.648 site design / logo © 2013 stack exchange inc; user contributions licensed undercc-wiki with attribution required Stack Overflow works best with JavaScript enabled How does understanding computer architecture help a programmer?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Programmers Stack Exchange Stack Exchange log in | chat | meta | about | faq Programmers * Questions * Tags * Users * Badges * Unanswered * Ask Question Tell me more × Programmers Stack Exchange is a question and answer site for professional programmers interested in conceptual questions about software development.
It's 100% free, no registration required.
How does understanding computer architecture help a programmer? [duplicate]
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>up vote 8 down vote favorite 1 This question already has an answer here:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Is it necessary to understand what's happening at the hardware level to be a good programmer?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>8 answers It is said, by Mike P. Wittie, in the course curriculum of computer architecture that, Students need to understand computer architecture in order to structure a program so that it runs more efficiently on a real machine I'm asking to more experienced programmers or professionals that have a background in this topic:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How does learning computer architecture help you?
What aspect benefits you most?
How did learning computer architecture changed your programming structuring?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>computer-architecture share |improve this question edited Mar 26 at 20:23 asked Mar 26 at 20:10 Volkan İlbeyli 1479 1   @MichaelT Assembly programming is only a subpart of computer architecture; practically you can know assembly programming without knowing what pipeline or superscalar is. – m3th0dman Mar 26 at 20:52 2   @m3th0dman The answers that are showing up here could be copied into the other question without changes and fit just as well - and vice versa.
The question is dealing with &quot;how does understanding a lower level than you are working on help understand the higher level?&quot;
- and at that level, these two questions are identical. – MichaelT Mar 26 at 20:58 1   @MichaelT Not necessarily; in the below answers branch prediction or memory hierarchy are mentioned and they don't really have much connection with assembly programming. – m3th0dman Mar 26 at 21:05 1   Duplicate answers do not a duplicate question necessarily make.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Close it as a duplicate if you must, but close it because the question is a duplicate, not because the answers are the same. – Robert Harvey Mar 26 at 22:27 1   I'm sorry, but assembly language != architecture.
The two have some overlap, but on the whole, are completely different.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The memory hierarchy, basic operating system design, and task scheduling are but a small number of categories that fall under &quot;architecture&quot; that have nothing to do with assembly. – Stargazer712 Mar 27 at 1:51 show 1 more comment marked as duplicate by Caleb , Jalayn , kevin cline , Frank Shearar , Kilian Foth Mar 28 at 9:20 This question has been asked before and already has an answer.
If those answers do not fully address your question, pleaseask a new question .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>9 Answers active oldest votes up vote 14 down vote accepted How does understanding physics help people drive a car?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* They understand phenomena like brake fade, and will compensate for it. * They understand center of gravity and how tires grip the road. * They understand hydroplaning, and how to avoid it. * They know how to best enter and exit a curve. * They are far less likely to tailgate.
And so on.
You can drive a car without knowing much about physics, but understanding physics does make you a better driver.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Two example of how understanding computer architecture can affect the way you code:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* branch prediction * Cache size and access patterns share |improve this answer edited Mar 27 at 17:21 answered Mar 26 at 20:27 Robert Harvey 45k894186 10   I completely disagree with this comparison.
If you compare with a car, the question should be&quot;How does understanding car mechanics help people drive a car?&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>You do not need to know how the engine works to be a good driver.
Your comparison is more like comparing to the electronics in a computer, not the architecture as software. – w4rumy Mar 27 at 9:13 2   @w4rumy - The &quot;computer architecture&quot;is the innards of the CPU, the caches, the buses, the nasty edge-cases where analog and digital meet, the...
The comparison is truly apt. – Vatine Mar 27 at 14:33 1   I think a better comparison would be a mechanical engineer and a mechanic.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Each deals with related problems at different levels of abstraction, and both could benefit from the insights of the other.
The driver seems more aligned with the user. – Justin984 Mar 27 at 15:22 3   Y'all are taking this too literally.
Can you know something about the engine that will make you a better driver (the horsepower, the torque curve)?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Absolutely.
You think race car drivers don't know everything they can possibly know about their car's mechanical design? – Robert Harvey Mar 27 at 15:24 1   @Ian: Your argument is fine, except that I never made any mention of speed or winning.
No analogy is ever perfect. – Robert Harvey Mar 28 at 14:45 show9 more comments up vote 3 down vote It is basically the same reason as for understanding C and pointers or maybe even algorithms; the only difference is that if you know computer architecture you really understand pointers (actually pointers seem very trivial after knowing computer architecture).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I cannot say about myself that I am an experienced programmer but a (actually the) book on computer architecture I read was for me the most interesting book I have read, related to computers and programming.
By understanding computer architecture you basically understand how everything is linked together, how a computer works and how come a program really does work; you see the big picture.
Without computer architecture you cannot truly understand:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* memory management: heap, stack, virtual memory, memory hierarchy and the so spoken about pointers (why is there a stack overflow, why is recursion not so good etc.) * assembly programming (if you want to program embedded) * compilers and interpreters (if you want to understand optimizations and when it is useless to optimize on code because it is already being made by the compiler) * linkers (dynamically linked libraries) * operating systems (if you want to read Linux kernel code) * the list can go on...
From my really subjective point of view it is by far more interesting and maybe even more useful than knowing algorithms.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>share |improve this answer edited Mar 26 at 20:47 Volkan İlbeyli 1479 answered Mar 26 at 20:38 m3th0dman 2,4222721 up vote 3 down vote In today's world, this reasoning is negligible if it is present at all for the majority of programming situations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The places that it is applicable is when one is writing assembly for a particular processor, working on a situation that requires one to take advantage of a particular architecture, or limited significantly by the architecture (embedded systems) so that the previous two points become all the more important.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For programmers of interpreted languages (perl, python, ruby) or languages that run in their own virtual machine (java, C#) the underlying machine is completely abstracted away.
A Java program wouldn't be coded differently to run on a massive cluster or on one's desktop.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The cases where the architecture does make a difference as mentioned are embedded systems where it is necessary to consider very low level concerns that are for that environment.
The other extreme also exists - where one is writing high performance code either in assembly or something that is compiled to native code (not running in a virtual machine).
In these extremes, one is concerned with what fits into the processor cache and how fast it is to access different parts of memory, which way the branch prediction on the processor goes (if the processor uses branch prediction at all or delay slots).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The question of branch prediction and delay slots or processor cache does not enter in to the vast majority of programming issues andcannot enter into interpreted or virtual machine languages.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All that said, it is useful to understand a level of what is going on one deeper than the existing code is being written at.
The further than that rapidly reaches diminishing returns.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A Java programmer should understand a programming language with manual memory management and pointer math to understand what is going on under the covers.
A C programmer should understand assembly so that one can realize what pointersreally are and where memory really comes with.
Assembly coders should be familiar with the architecture to understand what trade offs of branch prediction and delay slots mean... and to take it even further, those designing processors should be familiar with quantum mechanics for how semiconductors and gates work at a very basic level.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>share |improve this answer answered Mar 27 at 13:56 MichaelT 6,19411541 A pragmatic answer; hopefully you haven't been downvoted too many times.
I will note, however that understanding processor cachescan be a part of programming on a managed platform.
Although in 99.99999% of the cases, it shouldn't. – parsifal Mar 27 at 16:06 @parsifal a most interesting example.
Though cache friendly doesn't need to know the specifics.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There is much more design in there that deals with working with the JVM to to work well with the underlying system than paying attention to the underlying system itself (the example of a LongToObjectHashMap which uses long primitives rather than Long objects).
This goes to the footnote martinfowler.com/articles/lmax.html#footnote-collection-imp which reinforces that unless performance is critical, it doesn't matter too much. –  MichaelT Mar 27 at 22:36 up vote 1 down vote It can help quite a bit actually.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Understanding concepts such as shared memory and inter-processor communication and the potential delays involved with these can help a programmer arrange their data and communicative methods to avoid relying heavily on these mechanisms, if needed.
This is true for other areas of programming such as horizontal scaling, where distribution and communication among a program or system of programs is a main focal point.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Understanding the pitfalls or tar pits of a physical system can help you arrange such a program to help negotiate the physical systems as quickly and efficiently as possible.
Simply throwing data into a communication queue and expecting it to scale is an undersight of what may really need to be put in place, especially if you must scale your software onto larger systems for better support.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Equally, understanding the benefits of something such as functional programming can really be exemplified in the light of understanding what's going on a physical, systems level and thus makes even more traction for concepts such as these, in my opinion.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>One last quick example could be understanding the concept of say stream-processing and how sending data off to a processing unit like a video card may be best done in a very specific manner such as: send off all required calculations, receive back the frame of data in one fell swoop.
In something like video graphics or maybe even physics calculations you wouldn't want to continually have an open communication with such a device; thus knowing this you would want to arrange this part of your program as such.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>After all, if programmers did not understand these issues and road-blocks then these solutions would never exist in the format that they do.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>share |improve this answer edited Mar 27 at 15:23 answered Mar 27 at 15:00 scape 314 up vote 1 down vote I'd go so far as to say that anyone who doesn't understand computer organization is doomed to be a lousy programmer.
You'll know:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* how to organize your data structures and algorithms to be more cache efficient * how a function call works, and the implications for calling convention * the segments of memory, and their implications for variable declarations * how to read assembly, and thus interpret the output of a compiler * the effects of instruction-level parallelism and out-of-order instruction scheduling, and what that means for branching Basically, you'll learn how a computer actually works, and thus you'll be able to map your code to it more effectively.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>share |improve this answer edited Mar 27 at 19:41 answered Mar 26 at 20:33 chrisaycock 5,48431445 7   I wouldn't go that far.
Functionality and good design will always trump performance unless performance isunusuable - and you don't need to know about cache efficiency to make 99% of apps 'usuable'. – Telastyn Mar 26 at 20:46 When I studied computer science (approx.
20 years ago), all of these things were relevant.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Are they still relevant to programmers studying today, who will very possibly go on to a career entirely involving managed and interpreted code?
I'm not so sure.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Certainly they're a lot less relevant compared to, say, algorithmic design and analysis, which has lost absolute no relevance in managed and interpreted languages. – Carson63000 Mar 26 at 22:14 @Carson63000, yes.
Managed programming means, &quot;Programming with the assistance of a garbage collector and a JIT compiler&quot; It doesnot mean &quot;Programming in a magical fairy tale land where all the problems of the world disappear.&quot; :) Too many people treat managed programming as though it is the second definition. –  Stargazer712 Mar 27 at 15:58 I'm intrigued: what are &quot;the three segments of memory&quot;?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The only answer I can come up with is &quot;text, data, and bss,&quot; but then &quot;overhead&quot; seems a strange word. – parsifal Mar 27 at 16:43 @parsifal, Cache, RAM, and Disk.
For more information: en.wikipedia.org/wiki/Memory_hierarchy .
With that said, there are not necessarily 3.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Many people consider registers and cache in a different teir.
In addition, cache is usually divided up into the L1 and L2 cache (and sometimes an L3 cache).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How complicated you want it to be depends on how deep you want to dig. – Stargazer712 Mar 27 at 17:11 show9 more comments up vote 1 down vote Understanding the principles of computer architecture requires learning many important principles of programming.
Therefore, a knowledge of computer architecture is relevant to programming in any language, no matter how high level.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>These important principles include:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Fundamental data structures like arrays and stacks * Program structure: Loops, conditionals, subroutines (jump and call) * Considerations of time and space efficiency * Systems: The way various components fit together through abstract interfaces.
Apparently this is controversial, so I will elaborate.
Take the instruction set, a construct with a general form (operands, addressing modes, encoding) that is applicable to many different kinds of operations, such as arithmetic, logical, memory modification, and interrupt control.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This illustrates a general principle of system design, namely that systems are composed of individual subsystems that all share the same abstract interface, and that abstract interfaces are capable of handling many specific components.
This principle is also visible in a web application which may store the same kind of object (abstract interface) in a database, in memory, or on a web page (subsystems).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In each case, the abstract interface specifies the general form without specifying the concrete detail.
System design is the art of knowing what to make general and what to make specific.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This is a skill honed by designing and understanding systems -- in any language and at any level. share |improve this answer edited Mar 27 at 20:39 answered Mar 27 at 17:58 Lyn Headley 1113 Downvote.
Your last point, in particular, has nothing to do with computer architecture. – user16764 Mar 27 at 18:44 @user16764 - do you have a rigorous definition of what &quot;computer architecture&quot; is?
Can you post a link to it? – parsifal Mar 27 at 19:09 @parsifal Of course.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'm surprised you'd need to ask for it though: en.wikipedia.org/wiki/Computer_architecture – user16764 Mar 27 at 19:16 @user16764 - I wondered if that would be your link.
So when you read &quot;which described an organization of logical elements&quot; you can't translate that as &quot;components&quot; and &quot;abstract interfaces&quot;?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>That's just one example.
I would claim, for example, that in a modern CPU the entire instruction set is an &quot;abstract interface.&quot; – parsifal Mar 27 at 19:18 Or do you interpret &quot;abstract interface&quot; as a feature of a specific programming language? – parsifal Mar 27 at 19:19 show 10 more comments up vote 0 down vote Knowing your architecture allows you to know when something that's being asked for is impossible.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I was once asked to write a program to communicate with a PIC over a PC serial port.
The protocol would have the PIC sending nine-bit bytes, with no flow control.
I would display in my program's UI the values of the fields in the packets that the PIC sent.
Obvious question: how do I read the ninth bit of each byte?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The protocol engineer and I decided that we would try setting the parity to MARK and then treat the ninth bit as a parity bit.
I would read the value of the ninth bit according to the success or failure of the parity check.
Well, I implemented that, and it didn't work.
The values being displayed were obviously wrong.
And after three continuous days of researching PC UART architecture, I found out why.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Here's why.
The PC UART buffers its input.
By the time it interrupts the CPU to say &quot;READY TO READ&quot;, any number of bytes could have accumulated in its buffer.
There is, however, only one Line Status Register to hold the value of the parity check.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It is therefore impossible to tell which byte in the buffer failed the parity check.
So: make sure that the buffer is only one byte long, you say?
That's a flow control setting, and I already mentioned that this protocol didn't have flow control.
If I didn't know the architecture of the hardware I was programming, I would never have been able to say: &quot;Reading the ninth bit is impossible and needs to be cut.&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>share |improve this answer edited Mar 27 at 17:20 answered Mar 27 at 17:12 user16764 2,98811019 up vote 0 down vote Generally NO, You don't need to know computer architecture to be a good programmer, That's more in the EE realm IMO.. unless of course you're in embedded systems development, but in that case you're married to the chip and programming right on it, so you'll need to know the architecture of THAT &quot;computer&quot; (and even then it may not matter), but having a general architectural understanding of how computers work wont be good for much else than Water-hole discussions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I would say it's even less important these days at the rate hardware is declining in price and performance is improving / increasing and how quickly the technologies are changing and languages are evolving.
Data structures and design patterns don't really have much to do with physical hardware architecture as far as I know.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Generally Programmers come from a computer science background, in which case, they've more than likely taken computer architecture classes, but now-a-days, Operating Systems are going virtual, disk space is shared, memory is scaleable, etc.. etc..
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I have been able to make a great career in programming(10+ years) and I have very little educational knowledge of computer architecture, mostly because...
I was an Art major!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Update: Just to be fair, MY &quot;little educational knowledge&quot; came from my CPU Sci.
Minor. and still, I've never needed to use anything I've learned from my Assembly classes or my Computer Architecture classes in my &quot;Programming&quot; career.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Even now as I play around with some Mesh Networking Idea's implementing the ZigBee spec, I've found that using the products and tools available (XBee ), I'm able to program inPython and plop the code right on chip (SoC) and do some really neat stuff with it..ALL without having to worry about anything to do with actual architecture of the chips, etc.. there are definitely hardware limitations to be cognitive of because of the chip size and the intended low price target.. but even THAT will become less in the upcoming years.So I stand by my &quot;Generally NO&quot; answer share |improve this answer edited Mar 27 at 17:32 answered Mar 26 at 22:02 hanzolo 1,604312 I think &quot;generally no&quot; is a good summary.
There are certainly fields of programming where it's as important as ever; but the bulk of professional programmers do not work in those fields. – Carson63000 Mar 26 at 22:16 2   &quot;There are certainly fields of programming where it's as important as ever&quot; Do any of those fields include programming in high level languages?
If yes, to be more specific, what is the case, to give an example? – Volkan İlbeyli Mar 26 at 22:25 @Volkanİlbeyli Programming in high level languages is just a means to an end.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Many programmers who need to know this stuff for part of their job will also have use for some high level languages, if that was your question. – delnan Mar 26 at 22:28 2   I disagree.
We use some huge machine (32 cores 60G Memory and 3.3TB drives) ran as in a cluster of 400 machines.
But since are field is BigData even these machines are miniscule in terms of the data being processed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>So the principle are just as relevant.
The machine abilities may be doubling every 18 months but the data we are attempting to processes is doubling every 6 months. – Loki Astari Mar 26 at 22:48 1   -1.
You don't know what you don't know.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Understanding cache performance, the memory hierarchy, operating systems, time sharing, and countless other things have made me a much better programmer.
You're willfully ignorant (and that is fine), as long as you don't set your sights too high.
If you want to truly become a &quot;good&quot; programmer, than you must make an effort understand the machines that you are commanding. – Stargazer712 Mar 27 at 1:42 show7 more comments up vote -4 down vote Learning computer architecture helps immensely in programming.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Without understanding the environment the program is running in, your mental model is seriously handicapped.
We see the world, not as it is, but as we are -- through the mental model.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>You won't notice the difference in happy case scenarios, where everything just happens to work, but it will make a crucial difference when you are working on harder problems or debugging weird bugs (ie. real life programming).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It's the difference between &quot;WTF?&quot; and &quot;Ah, of course!&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>share |improve this answer answered Mar 27 at 20:33 Maglob 2,6261922 3   Specifics please. – user16764 Mar 27 at 20:38 Not the answer you're looking for?
Browse other questions tagged computer-architecture or ask your own question .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>tagged computer-architecture  ×  23 asked 20 days ago viewed 779 times active 19 days ago Get the weekly newsletter!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Top questions and answers * Important announcements * Unanswered questions see an example newsletter By subscribing, you agree to the privacy policy and terms of service .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>15 votes ·comment · stats Linked 22 Is it necessary to understand what's happening at the hardware level to be a good programmer?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Related 11 Can increased usage of higher and higher programming languages lead to a deficit of programmers with computer architecture knowledge?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>8 Learning computer architecture as a programmer 1 Books on computer architecture that covers these topics 1 online computer architecture courses?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2 Things about Computer Architecture every programmer should know 5 Why do computer architecture textbooks prefer MIPS architecture?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4 How can I tell whether my computer is Harvard or von Neumann architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2 How many bits' address is required for a computer with n bytes of memory?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 How Do Computers Process Conditional/Input/ Event Based Code?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>about | faq | blog | chat | data | legal | privacy policy | jobs | advertising info | mobile | contact us | feedback ■ stackoverflow.com   ■ api/apps   ■ careers 2.0   ■ serverfault.com   ■ superuser.com   ■ meta   ■ area 51   ■ webapps   ■ gaming   ■ ubuntu   ■ webmasters   ■ cooking   ■ game development   ■ math   ■  photography   ■ stats   ■ tex   ■  english   ■ theoretical cs   ■ programmers   ■ unix   ■ apple   ■ wordpress   ■ physics   ■ home improvement   ■ gis   ■  electrical engineering   ■ android   ■ security   ■ bicycles   ■ dba   ■  drupal   ■ sharepoint   ■ scifi &amp; fantasy   ■ ux   ■ skeptics   ■ rpg   ■  judaism   ■ mathematica   ■ travel   rev 2013.4.16.648 site design / logo © 2013 stack exchange inc; user contributions licensed undercc-wiki with attribution required Programmers Stack Exchange works best with JavaScript enabled computer architecture questions * Resend activation?
* Lost password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Register * Remember Me?
* Forum * New Posts * Unanswered Posts * FAQ * Forum Actions * Mark Forums Read * Community * Groups * Reported Items * Calendar * Link to Us * Quick Links * Today's Posts * View Site Leaders * Forum Rules * Activity Stream * Search * Help * Rules * Groups * Albums * Blogs * What's New?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Advanced Search * * Forum * Digital Design and Programming * PLD, SPLD, GAL, CPLD, FPGA Design * computer architecture questions + Post New Thread Results 1 to 5 of 5 Thread:computer architecture questions * LinkBack * LinkBack URL * About LinkBacks *   * Bookmark &amp; Share * Digg this Thread!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Add Thread to del.icio.us * Bookmark in Technorati * Tweet this thread &lt;http://twitter.com/home?
status=computer+architecture+questions http%3A%2F%2Fwww.edaboard.com%2Fthread285695.html&gt; * Thread Tools * Show Printable Version * Download This Thread * Subscribe to this Thread… * Search Thread * *   Advanced Search * 12-04-13, 15:11 #1 abd93 Newbie level 2 Join Date Apr 2013 Posts 2 Helped 0 / 0 Points 18 Level 1 computer architecture questions I need some help,,,can For the following code:assuming an un-pipelined processor :
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>MUL AX, BX, CX Number of Stages= OR EX, BP, AX Number of Stages= Load DX, 0 (CX) Number of Stages= Load EX, 0 (DX) Number of Stages= ADD DX, DX, EX Number of Stages= Store DX, 1 (CX) Number of Stages= Store EX, 1 (DX) Number of Stages= Reply With Quote *          * 12-04-13, 17:16 #2 mrflibble Advanced Member level 5 Join Date Apr 2010 Posts 1,593 Helped 419 / 415 Points 9,038Level 22 Re: computer architecture questions Come on, for homework assignments at least pretend to cut-n-paste the assignment in a readable fashion.
I guess this one gets this weeks award for least amount of time spent on a &quot;Do my homework post&quot;.
Well done!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 members found this post helpful.
Reply With Quote *          * 13-04-13, 08:02 #3 abd93 Newbie level 2 Join Date Apr 2013 Posts 2 Helped 0 / 0 Points 18 Level 1 Re: computer architecture questions For the following code: MUL AX, BX, CX OR EX, BP, AX Load DX, 0 (CX) Load EX, 0 (DX) ADD DX, DX, EX Store DX, 1 (CX) Store EX, 1 (DX) assuming an un-pipelined processor.what is the number of stages for each instruction?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reply With Quote *          * 13-04-13, 08:48 #4 TrickyDicky Advanced Member level 5 Join Date Jun 2010 Posts 3,214 Helped 880 / 880 Points 16,735Level 31 Re: computer architecture questions Is that the same queston, just re-ordered?
Reply With Quote * 13-04-13, 13:45 #5 mrflibble Advanced Member level 5 Join Date Apr 2010 Posts 1,593 Helped 419 / 415 Points 9,038Level 22 Re: computer architecture questions Looks like Intel code, however they have made more than one type of CPU (or maybe your Teacher doesn't know that )
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Check out the 'manuals' at the bottom of the Wikipedia page below for current CPU architecture ..
Source(s): http://en.wikipedia.org/wiki/X86_assembly_language I am sure you can appreciate the reciprocity of effort here.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Took me ages!
You multi-sourcing laz&lt;s&gt;H&lt;s&gt;H&lt;s&gt;H person that displays qualities that one might consider not exactly positive.
Reply With Quote + Post New Thread « Factors to be considered in Digital design for a protocol | Newbie JTAG-FPGA question » Similar Threads * computer architecture (1) * Computer Architecture (24) * Mobile architecture vs computer architecture (2) * COMPUTER ARCHITECTURE (2) * computer architecture (2) -- Edaboard Classic-- Lightweight -- Default Mobile Style * Contact Us * Forum for Electronics * Privacy Statement * Terms of Service * Top All times are GMT +1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The time now is15:00.
Powered by vBulletin Copyright © 2010 vBulletin Solutions, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All rights reserved.
SEO by vBSEO ©2011, Crawlability, Inc.
Computer Architecture and Design Interview Questions and Answers - Computer Architecture and Design Interview FAQs &amp; Computer Architecture and Design Books Sponsored Links Interview Questions Home Data Warehousing Database Microsoft J2EE Languages Networking Operating Systems Oracle PeopleSoft SAP Siebel General Hardware Mainframe Audit Oracle Apps WebSite Related Testing Multimedia Accounts Computers Protocols Data Structure Arts Commerce Police Officer Interview Questions Call Center Interview Questions Aerospace Science MBBS Certifications Inventory Planning Business Intelligence Algorithm Marketing Web Sphere Portal Servers Civil Engineering Mechanical Engineering Electrical &amp; Electronics Engineering(EEE) Electronics and Communication (EC) Engineering Chemical Engineering Data Mining Computer Graphics JAVA STANDARD EDITION Our Services Get 9,000 Interview Questions &amp; Answers in an eBook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 9500+ Pages * 9000 Question &amp; Answers * All Tech.
Categories * 14 MB Content Get it now !!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>SEARCH INTERVIEW QUESTIONS: Advertisements Computer Architecture and Design Interview Questions COOLINTERVIEW.COM HARDWARE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE AND DESIGN INTERVIEW QUESTIONS QUESTIONS LISTING Computer Architecture and Design Interview Questions &amp; Answers Below we have listed all the Computer Architecture and Design Interview Questions and answers.
Feel free to comment on anyComputer Architecture and Design Interview Questions or answer by the comment feature available on the page.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To buy an eBook containing 9000 Interview Questions, with Answers, Click Here .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 2 3 Next Sort By :   Latest First   |  Oldest First   |  By Rating Question Rating View Answer What are the basic components in a Microprocessor?
View Answer What are the five stages in a DLX pipeline?
View Answer For a pipeline with ?n? stages, what?s the ideal throughput?
What prevents us from achieving this ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer What?s the difference between Write-Through and Write-Back Caches?
Explain advantages and disadvantages of each.
View Answer What are the different hazards?
How do you avoid them?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer What is ACBF(Hex) divided by 16?
View Answer What are the different hazards?
How do you avoid them?
View Answer Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer Convert 65(Hex) to Binary.
View Answer How many types of memory in computer architecture?
View Answer what is the difference between interrupt service routine and subroutine ?
View Answer What is a Snooping cache?
View Answer What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer Convert 65(Hex) to Binary?
View Answer can u send me some questions on general computer concepts because i am preparing for keane software there they are asking questions on computers View Answer What is Cache Coherency?
View Answer How do you handle precise exceptions or interrupts?
View Answer For a pipeline with &quot;n&quot; stages, whats the ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What prevents us from achieving this ideal throughput?
View Answer What is pipelining?
View Answer Can virtual memory be greater then main memory?
View Answer 1 2 3 Next A D V E R T I S E M E N T User Options * Home * Ask Questions * About Us * Feedback * Contact Us * Sponsored Links Latest 10 Questions  What is the lifecycle of an applet?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is the difference between applications and applets?
What is multithreading and what are the methods for inter-thread communication and what is the class in which these methods are defined?
What is the difference between exception and error?
What is the difference between abstract class and interface?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is interface and its use?
What is difference between overloading and overriding?
What is final, finalize() and finally?
How many ways can an argument be passed to a subroutine and explain them?
What are methods and how are they defined?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Copyright ©2003-2013 CoolInterview.com, All Rights Reserved.
Privacy Policy | Terms and Conditions Download Yahoo Messenger | Placement Papers | FREE SMS | ASP .Net Tutorial | Web Hosting | Dedicated Servers | C Interview Questions &amp; Answers Testing Articles | Testing Books | Testing Certifications | Testing FAQs | Testing Downloads | Testing Interview Questions | Testing Jobs | Testing Training Institutes 0.03 Cache = 0 SecondsComputer Architect Interview Questions | Glassdoor * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United States * Australia * Canada * India * United Kingdom Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look at Computer Architect interview questions and reviews.
All interview questions posted anonymously by employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer Architect Interview Questions (Posted anonymously by job candidates)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>0 Interview Questions: Search Suggestions * Try more general keywords ('engineer' rather than 'systems engineer') * Check your spelling * Replace abbreviations with the entire word ('accountant' rather than 'CPA') You might also be interested in: Interview Questions Interviews by Company * Microsoft Interview * Apple Interview * Amazon.com Interview * Accenture Interview * Booz Allen Hamilton Interview Jobs by Title * Software Engineer Jobs * Manager Jobs * Project Manager Jobs * Senior Software Engineer Jobs * Consultant Jobs * Senior Consultant Jobs * Analyst Jobs * Associate Jobs * Director Jobs * Intern Jobs * Engineer Jobs * Business Analyst Jobs * Vice President Jobs * Product Manager Jobs * Program Manager Jobs Sorry, you need an account to use this feature.Sign In with Facebook or Sign Up Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
All Rights Reserved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give other employees and job seekers your view from the inside Simply post an anonymous review for a recent interview experience or current/former employer.
Your post is anonymous – and if you're worried someone will be able to identify your review, you can even post without telling us your job title and location.Learn More .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Review No thanks –I'll just look around Computer Architecture &amp; Low Level Interview Questions | CareerCup CareerCup * Questions * Forum * Salaries * Resume Tips * RSS * Sign In ▼ * Sign In * View Cart Computer Architecture &amp; Low Level Interview Questions Page: 1 2 3 4 Filter: (None) A9 aabccd Abs india pvt. ltd.
Accenture Achieve Internet Adap.tv Adobe ADP Advisory Board Company Agilent Technologies Akamai Alcatel Lucent Altair Engineering Altera Amazon Amazon AMD Amdocs American Airlines Apache Design Apple AppNexus Argus Aricent Arista Networks Aristocrat Gaming Ask.com Aspire Systems ASU Athena Health Automated Traders Desk Autonomy Zantaz Axiom Sources Baidu Bank of America Barclays Capital Bazaarvoice Big Fish Binecs Bloomberg LP Blue Jeans Bocada Boeing Booking.com Brainware BT Cadence Inc Capgemini CapitalIQ Caritor Cavium Networks CCN CDAC-ACTS CGI-AMS Chegg.com Chelsio Communications Chicago Mercantile Exchange Chronus Cisco Systems Cisco Systems Citigroup Citrix Online Citrix System Inc Cloudera Cloudmere, Inc.
CMC LTD Cognzant Technology Solutions Collective Computer Associates Continental Credit Suisse Crompton Greeves CSC CSR Cubic Transportation Systems Limited Daptiv Defense Research and Development Organization of India Deloitte Consulting LLP Delve Networks Denmin Group Deshaw Inc Did-it.com Directi Dover Organization Ebay EFI Egenera Electronic Arts EMC Epic Systems Epsilon Ericsson Eterno Infotech Pvt Ltd Expedia EZ Prints F5 Networks Fabrix Facebook FactSet Research Systems, Inc Fair Issac Fiorano FlexTrade Flipkart Fortinet Future Advisor Future Group, Mumbai Fynanz Gartner Gayatri Vidya Parishad GE (General Electric) Georgia Pacific Global Scholar Globaltech Research Gluster GoDaddy Gold-Tier Goldman Sachs Google Green Bricks Groupon GrubHub Guruji Harman Kadron HCL HCL America Headrun Technologies Pvt Ltd Hewlett Packard Hi5 Highbridge Capital Home Depot Honeywell Huawei Hunan Asset Ibibo IBM Iconologic Igate IIT-D iLabs Imagination Technologies IMG Infibeam Infinium Informatica Infosys Initto InMobi Intel Interactive Brokers Interactive Design Internet Question InterraIT Intuit ION idea ION Trading iPowerFour Iron Mountain Ittiam Systems Ivycomptech Izon Jane Street JDA JP Morgan Juniper Networks Kalido Kaseya Kerkestavni Computecha Corporatci Kingfisher Kingfisher Airlines Kiwox Knewton Knoa Software Knowledge Systems KnowledgeBase Komli Media Kpro Solutions Lab126 Labs247 Laserfiche LexisNexis Lime Labs Linkedin LiteratureBay.com Live Nation LiveRamp Lockheed Martin London Investment Bank Loyom LSI Lunatic Server Solutions MAGMA Manhattan associates MAQ MarketRX Marvell Mathworks McAfee Medio Systems Megasoft Mentor Graphics Micron Microsoft Microsoft Microsoft MicroStrategy MIH Mindtree Wireless India Model N Monitor Group Morgan Stanley Motorola MounzIT Moyer Group mSpot Myntra Myntra.com National Informatics Centre National Instruments Ness NetApp Netflix Nexabion Nextag Nisum Technologies Nivio Technologies Nomura Novell NVIDIA One97 OnMobile Oracle Overstock.com Palantir Technology PayPal Pega Persistent Systems Philips Pinterest PJ Pvt Ltd Pocketgems Polaris PRDS Progress QNX QSI HealthCare Qualcomm Rapleaf Raytheon Real Networks Rebellion Research RelQ Software Company Limited Research In Motion Ricoh RightC Riverbed Roamware RoviCorp Roxar RSA Sabre Holdings Safenet Sage Software Salesforce Samsung Sap Labs Sapient Corporation SAS Research Schneider Electric Search Media Sears Holding Shutterfly Siemens SIG (Susquehanna International Group) SignPost Sileria Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Singapore Technologies Socialcam Softchoice Sonoa Systems Sophos Spotify SRMicro Info Systems Starent Networks StartUp SunGard SWAPTON SOLUTIONS Symantec Symphony Services SynCfusion Synopsys R&amp;D Take Two Interactive Tally Solutions TATA Consultancy Services Tech India Line Techlogix Tejas Networks Tellabs Texas Instruments The Digital Group The Royal Bank of Scotland Chennai thePlatform Thirdware Technologies Thomson Reuters ThoughtWorks TP TRG Tribal Fusion Trilogy Turing Software Twitter Two Sigma United HealthGroup Urban Touch USAA USInternetworking VANS Vanu Vdopia Video Gaming Technologies Vizury VMWare Inc Walmart Labs Watchguard Wichorus Wipro Technologies Wireless Generation WorksApp X Xurmo Yahoo Yatra.com Yelp Zillow Zoosk ZS Associates Zycus Zynga (None) Accountant Analyst Android test engineer Applications Developer Area Sales Manager Associate Computer Scientist Consultant Developer Program Engineer Developer Program Engineer Development Support Engineer Field Sales Financial Application Engineer Financial Software Developer Firmware Engineer Front-end Software Engineer Graphics Programmer Intern iOS Developer Java Developer Member Technical Staff MTS Network Engineer Personnel Principal Software Engineer Product Security Engineer Production Engineer Program Manager Quality Assurance Engineer Research Scientist Reverse Engineering and System Developer Scientific Officer SDE-2 SDE1 SDE1 SDE1 Security Analyst Senior Software Development Engineer Site Reliability Engineer Software Analyst Software Architect Software Development Manager Software Engineer / Developer Software Engineer in Test Software Engineer in Test Software Engineer Intern Software Trainee Solutions Architect student System Administrator Systems Design Engineer Tech Lead Technical Architect Technical Support Engineer Testing / Quality Assurance Virus Researcher Web Developer (None) Algorithm Android Application / UI Design Arrays Arrays Assembly Automata Behavioral Bit Manipulation Brain Teasers C C C++ Cache Coding Compiler Computer Architecture &amp; Low Level Data Mining Data Structures Database Debugging Distributed Computing Dynamic Programming Experience Front End Web Development General Questions and Comments Graphics Hash Table Ideas Java Java JavaScript Knowledge Based Large Scale Computing Linked Lists Linux Kernel Math &amp; Computation Matrix Networking / Web / Internet Object Oriented Design OODesign Operating System Operators Perl PHP Probability Problem Solving Python Questions YOU should ask!
Sales Security Sets Sorting SQL Stacks String Manipulation System Administration System Design Terminology &amp; Trivia test Testing Testing Threads Trees and Graphs Unix vmware interview questions XML Sort By: Date | Number of Comments | Most Recent Comment | Votes * 0 of 0 votes 4 Answers Reverse bit within a 32 bit integer - Hank Lee on July 22, 2008 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level Coding * 0 of 0 votes 9 Answers Implement in-place swap.
Now implement one won't cause overflow (i.e: can't use addition)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Hank Lee on July 22, 2008 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level Coding * 0 of 0 votes 0 Answers Draw 2-level paging diagram.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Hank Lee on July 22, 2008 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers What is DMA?
Can user level buffer / pointer used by kernel or drivers?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Hank Lee on May 10, 2008 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 2 of 0 votes 20 Answers Write an aligned malloc &amp; free function.
Which takes number of bytes and aligned byte (which is always power of 2)
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ex. align_malloc (1000,128); it will return memory address multiple of 128 of the size 1000.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>aligned_free(); it will free memory allocated by align_malloc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- NewGuy on April 26, 2008 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level Coding * 0 of 0 votes 18 Answers Can u have a floating point operation inside a interrupt handler?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>He asked me this question after he asked me whether there can be a print message inside a interrupt handler.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- backbone on April 01, 2008 Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Linux Kernel Computer Architecture &amp; Low Level * 0 of 0 votes 17 Answers 1.
DMA controller.
2. Cache coherency.- MESI /MSI protocol 3.
Cache coherency mechanism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4. Interrupt handler.
5. what happens when function1 calls function2 with it.(like where does the linkage register stuff get stored..and resume execution) 6.Can u have reentrant code inside interrupt handler.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(NO) 7.What will happen/can u have printf/printk inside an interrrupt hancler (i think he wanted me to say no.. but I did not know the reason) 8.context switch.. when do u need it.
9.what does a interrupt handler take in as input... and what does it return.( it does not accept or return anything)
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>10. what is the difference between ISR and interrupt handler.(Both are the same)
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>11.how to search a book in one million books.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>12.How to check whether a linked list is circular.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Backbone on April 01, 2008 Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Linux Kernel Computer Architecture &amp; Low Level Linked Lists * 1 of 0 votes 1 Answer 1) Design a synchronous circuit which follows this pattern: 1000 1100 1110 1111 0111 0011 0001 0000 1000 Is it possible to design this circuit if there is no reset.
If yes then how?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2) Design a circuit which generates the following pattern:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1000 0100 0010 0001 0010 0100 1000 3) In the above mentioned question how many FF's are least required?
Justify your answer!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4)Generate the above mentioned pattern by using only combinational logic and D FF.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- AJ on February 22, 2008 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer How do compilers work?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Mallika.I. on February 19, 2008Edit | Report Duplicate | Flag Barclays Capital Analyst Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers What is a mutex used for?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- cafemocha on January 30, 2008 Edit | Report Duplicate | Flag VMWare Inc Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer what is booting?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Munivelu K Reddy on October 17, 2007 Edit | Report Duplicate | Flag Bocada Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 8 Answers Reverse the bits in an incoming bitstream given a function that has its input parameters as a char *ptr and tot_siz where tot_siz is the size of the buffer..
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- SigPro on July 13, 2007 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 2 Answers The function (fopen() and fprintf()) returns EINTR when interrupted by a signal that was caught.
We want to test this by sending a signal to interrupt fopen/fprintf when it is called.  When should the signal be sent?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Ravi Kant Pandey on May 17, 2007 Edit | Report Duplicate | Flag IBM Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 5 Answers How would you add two 64 bit numbers on a 32 bit machine?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Natalia on May 15, 2007 Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer Given an integer, exchange the Most Significant Bit with the Least Significant Bit and vice versa.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- vodangkhoa on February 01, 2007 Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers Name all the registers in the X86 machine.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- vodangkhoa on January 31, 2007 Edit | Report Duplicate | Flag Apple Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 6 Answers How much memory will the following code take.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>void example { int bytes; virtual functionName{ }; } - Sach (Sachin) on December 21, 2006Edit | Report Duplicate | Flag Bloomberg LP Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers What is buffer overflow and how do you exploit it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- vodangkhoa on December 13, 2006 Edit | Report Duplicate | Flag Amazon Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 10 Answers For small dataset (less than 200 elements), why is unsorted array has better performance than binary tree?
This wasn't the case 20 years ago.
(Hint: It has to do with computer architecture.)
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- vodangkhoa on November 12, 2006 Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level Data Structures * 0 of 0 votes 0 Answers How would you discover a memory leak in a software product that contains thousands of lines?
I said build a reference table for dynamically allocated variables, similar to one java does, and he seemed OK with that.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Oz. on October 23, 2006 Edit | Report Duplicate | Flag Zillow Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 12 Answers 3) What are memory leaks ? what tools you have used ?
4) Whats the size of integer, double - basic questions ?
5) How will you determine the size of an variable without using sizeof operator ?
Ans: Basically get the difference on the pointer address for the current and the incremented position and storing the difference on data type ptrdiff_t.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Alfy on July 31, 2006 Edit | Report Duplicate | Flag Bloomberg LP Software Engineer / Developer Computer Architecture &amp; Low Level Terminology &amp; Trivia * 0 of 0 votes 2 Answers 6) whats the difference between malloc and calloc ?
7) whats the difference between new and malloc ?
8) whats a virtual function ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Alfy on July 31, 2006 Edit | Report Duplicate | Flag Bloomberg LP Software Engineer / Developer Computer Architecture &amp; Low Level Terminology &amp; Trivia * 0 of 0 votes 4 Answers Assume that you are working on a small device which has a CPU with no MMU (Memory Management Unit) and a limited amount of memory (1M).
We want to be able to run apps on the device that may need more than 1M throughout their execution, although they never need more than 1M at any particular instant.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We are in control of the operating system running on the device as well as all tools, compilers, linkers, etc.
Discuss ideas on implementing a virtual memory management system on the machine.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- MK on July 15, 2006 Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 6 Answers Write a program to check whether the given two logical addresses are in the same page.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- XXXX on July 14, 2006 Edit | Report Duplicate | Flag Expedia Software Engineer / Developer Computer Architecture &amp; Low Level Coding * 0 of 0 votes 10 Answers When would a program crash in a buffer overrun case.
Gave me, buff[50]; for( int i=0; i &lt;100; i++ ) buff[i] = 0; What will happen to first 50 bytes assigned, when would the program crash - AJ on April 24, 2006 Edit | Report Duplicate | Flag Amazon Software Engineer / Developer Computer Architecture &amp; Low Level Terminology &amp; Trivia * 0 of 0 votes 7 Answers Q) Lets say you have a disk of size N with N blocks.
Every block stores part of a file.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Every file starts from a single block.
The block size is not enough to store a file.
Every block has a used/unused bit and a pointer to the next block in the disk which will store the next part of the file and so on.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A block which stores the end of a file points to null.
Also a block whose unused bit is 0 doesnt point to anything and is not pointed to by any block.
Now u have an index of files with filename as index and the value as the first block in which the file starts.Lets says u somehow lose these indices and values.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How will you find an efficient algorithm to recreate this index structure with values.
You can use any filenames while creating the indices.
(While solving one shld think of cases where the file starts at block 4 which points to 1 then to 2 and ends at 3)
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Sach (Sachin) on April 22, 2006Edit | Report Duplicate | Flag Microsoft Computer Architecture &amp; Low Level * 0 of 0 votes 11 Answers If a variable is a Global Variable, then where it's stored in memory?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Karthik Srinivasan on April 17, 2006Edit | Report Duplicate | Flag Bloomberg LP Software Engineer / Developer Computer Architecture &amp; Low Level Terminology &amp; Trivia * 0 of 0 votes 1 Answer Interviewer&gt;If there are variable defined where the variable stored in the memory?
My Answere&gt; All temporary variable are stored in Stack.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Karthik Srinivasan on April 17, 2006Edit | Report Duplicate | Flag Bloomberg LP Software Engineer / Developer Computer Architecture &amp; Low Level Terminology &amp; Trivia * 0 of 0 votes 6 Answers Given a chunk of memory 1.
Implement malloc.
2. Implement free.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- vodangkhoa on March 05, 2006 Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level * 1 of 0 votes 3 Answers A disk is partioned into two hemispheres colored in black and white and the disk is rotating.By appropriate positioning of sensors (A sensor can read the disk near it as black or white) we need to find the direction of the motion of the disk.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- vodangkhoa on March 05, 2006 Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level Page: 1 2 3 4 Filter: (None) A9 aabccd Abs india pvt. ltd.
Accenture Achieve Internet Adap.tv Adobe ADP Advisory Board Company Agilent Technologies Akamai Alcatel Lucent Altair Engineering Altera Amazon Amazon AMD Amdocs American Airlines Apache Design Apple AppNexus Argus Aricent Arista Networks Aristocrat Gaming Ask.com Aspire Systems ASU Athena Health Automated Traders Desk Autonomy Zantaz Axiom Sources Baidu Bank of America Barclays Capital Bazaarvoice Big Fish Binecs Bloomberg LP Blue Jeans Bocada Boeing Booking.com Brainware BT Cadence Inc Capgemini CapitalIQ Caritor Cavium Networks CCN CDAC-ACTS CGI-AMS Chegg.com Chelsio Communications Chicago Mercantile Exchange Chronus Cisco Systems Cisco Systems Citigroup Citrix Online Citrix System Inc Cloudera Cloudmere, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CMC LTD Cognzant Technology Solutions Collective Computer Associates Continental Credit Suisse Crompton Greeves CSC CSR Cubic Transportation Systems Limited Daptiv Defense Research and Development Organization of India Deloitte Consulting LLP Delve Networks Denmin Group Deshaw Inc Did-it.com Directi Dover Organization Ebay EFI Egenera Electronic Arts EMC Epic Systems Epsilon Ericsson Eterno Infotech Pvt Ltd Expedia EZ Prints F5 Networks Fabrix Facebook FactSet Research Systems, Inc Fair Issac Fiorano FlexTrade Flipkart Fortinet Future Advisor Future Group, Mumbai Fynanz Gartner Gayatri Vidya Parishad GE (General Electric) Georgia Pacific Global Scholar Globaltech Research Gluster GoDaddy Gold-Tier Goldman Sachs Google Green Bricks Groupon GrubHub Guruji Harman Kadron HCL HCL America Headrun Technologies Pvt Ltd Hewlett Packard Hi5 Highbridge Capital Home Depot Honeywell Huawei Hunan Asset Ibibo IBM Iconologic Igate IIT-D iLabs Imagination Technologies IMG Infibeam Infinium Informatica Infosys Initto InMobi Intel Interactive Brokers Interactive Design Internet Question InterraIT Intuit ION idea ION Trading iPowerFour Iron Mountain Ittiam Systems Ivycomptech Izon Jane Street JDA JP Morgan Juniper Networks Kalido Kaseya Kerkestavni Computecha Corporatci Kingfisher Kingfisher Airlines Kiwox Knewton Knoa Software Knowledge Systems KnowledgeBase Komli Media Kpro Solutions Lab126 Labs247 Laserfiche LexisNexis Lime Labs Linkedin LiteratureBay.com Live Nation LiveRamp Lockheed Martin London Investment Bank Loyom LSI Lunatic Server Solutions MAGMA Manhattan associates MAQ MarketRX Marvell Mathworks McAfee Medio Systems Megasoft Mentor Graphics Micron Microsoft Microsoft Microsoft MicroStrategy MIH Mindtree Wireless India Model N Monitor Group Morgan Stanley Motorola MounzIT Moyer Group mSpot Myntra Myntra.com National Informatics Centre National Instruments Ness NetApp Netflix Nexabion Nextag Nisum Technologies Nivio Technologies Nomura Novell NVIDIA One97 OnMobile Oracle Overstock.com Palantir Technology PayPal Pega Persistent Systems Philips Pinterest PJ Pvt Ltd Pocketgems Polaris PRDS Progress QNX QSI HealthCare Qualcomm Rapleaf Raytheon Real Networks Rebellion Research RelQ Software Company Limited Research In Motion Ricoh RightC Riverbed Roamware RoviCorp Roxar RSA Sabre Holdings Safenet Sage Software Salesforce Samsung Sap Labs Sapient Corporation SAS Research Schneider Electric Search Media Sears Holding Shutterfly Siemens SIG (Susquehanna International Group) SignPost Sileria Inc.
Singapore Technologies Socialcam Softchoice Sonoa Systems Sophos Spotify SRMicro Info Systems Starent Networks StartUp SunGard SWAPTON SOLUTIONS Symantec Symphony Services SynCfusion Synopsys R&amp;D Take Two Interactive Tally Solutions TATA Consultancy Services Tech India Line Techlogix Tejas Networks Tellabs Texas Instruments The Digital Group The Royal Bank of Scotland Chennai thePlatform Thirdware Technologies Thomson Reuters ThoughtWorks TP TRG Tribal Fusion Trilogy Turing Software Twitter Two Sigma United HealthGroup Urban Touch USAA USInternetworking VANS Vanu Vdopia Video Gaming Technologies Vizury VMWare Inc Walmart Labs Watchguard Wichorus Wipro Technologies Wireless Generation WorksApp X Xurmo Yahoo Yatra.com Yelp Zillow Zoosk ZS Associates Zycus Zynga (None) Accountant Analyst Android test engineer Applications Developer Area Sales Manager Associate Computer Scientist Consultant Developer Program Engineer Developer Program Engineer Development Support Engineer Field Sales Financial Application Engineer Financial Software Developer Firmware Engineer Front-end Software Engineer Graphics Programmer Intern iOS Developer Java Developer Member Technical Staff MTS Network Engineer Personnel Principal Software Engineer Product Security Engineer Production Engineer Program Manager Quality Assurance Engineer Research Scientist Reverse Engineering and System Developer Scientific Officer SDE-2 SDE1 SDE1 SDE1 Security Analyst Senior Software Development Engineer Site Reliability Engineer Software Analyst Software Architect Software Development Manager Software Engineer / Developer Software Engineer in Test Software Engineer in Test Software Engineer Intern Software Trainee Solutions Architect student System Administrator Systems Design Engineer Tech Lead Technical Architect Technical Support Engineer Testing / Quality Assurance Virus Researcher Web Developer (None) Algorithm Android Application / UI Design Arrays Arrays Assembly Automata Behavioral Bit Manipulation Brain Teasers C C C++ Cache Coding Compiler Computer Architecture &amp; Low Level Data Mining Data Structures Database Debugging Distributed Computing Dynamic Programming Experience Front End Web Development General Questions and Comments Graphics Hash Table Ideas Java Java JavaScript Knowledge Based Large Scale Computing Linked Lists Linux Kernel Math &amp; Computation Matrix Networking / Web / Internet Object Oriented Design OODesign Operating System Operators Perl PHP Probability Problem Solving Python Questions YOU should ask!
Sales Security Sets Sorting SQL Stacks String Manipulation System Administration System Design Terminology &amp; Trivia test Testing Testing Threads Trees and Graphs Unix vmware interview questions XML Sort By: Date | Number of Comments | Most Recent Comment | Votes Add Question CareerCup is the world's biggest and best source for software engineering interview preparation.See all our resources .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How Can You Help CareerCup?
Find Out When Gayle / CareerCup / Cracking the Coding Interview is in Your City Top Companies * Amazon (3014) * Amazon (3014) * Microsoft (1676)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Google (669) * Bloomberg LP (587)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Adobe (343) * Facebook (230)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Yahoo (215) * More Companies » Top Jobs * Software Engineer / Developer (7008)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Software Engineer in Test (725)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Software Engineer in Test (725)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Developer Program Engineer (343)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Developer Program Engineer (343)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Financial Software Developer (280)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Testing / Quality Assurance (105)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Program Manager (83)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Applications Developer (83)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Analyst (79) * More Jobs » Top Topics * Algorithm (3495)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Coding (754) * Data Structures (540)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* C (504) * C++ (457)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Java (455) * Java (455) * Terminology &amp; Trivia (294)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Brain Teasers (288)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Arrays (277) * More Topics » What's Going On Report a Bug or Issue Books is a comprehensive book walking you through every aspect of getting a job at a top tech company, while focuses on software engineering interviews.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Videos CareerCup's interview videos give you a real-life look at technical interviews.
In these unscripted videos, watch how other candidates handle tough questions and how the interviewer thinks about their performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Resume Review Most engineers make critical mistakes on their resumes -- we can fix your resume with our custom resume review service.
And, we use fellow engineers as our resume reviewers, so you can be sure that we &quot;get&quot; what you're saying.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Mock Interviews Our Mock Interviews will be conducted &quot;in character&quot; just like a real interview, and can focus on whatever topics you want.
All our interviewers have worked for Microsoft, Google or Amazon, you know you'll get a true-to-life experience.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Information * Team, Contact &amp; About * Salaries * RSS * Behavioral Preparation Grid * Sample Resumes Products * * * CtCI iPhone App * Videos Services * Mock Interviews * Resume Review * Wiser Profile (LinkedIn Review) Social * CareerCup on Facebook * CtCI on Facebook * Gayle McDowell on Facebook * CareerCup on Twitter * Gayle on Twitter * CareerCup Blog CareerCup.com © 2012 CIS 501 (Fall 2012): Computer Architecture CIS 501 (Fall 2012): Computer Architecture Instructor:Prof.
Milo Martin Lecture: Tuesday/Thursday 12:00 to 1:20 E-mail:cis501@cis TAs:Laurel Emurian and Mishal Awadah Graders:Vikas Choudhary, Dhruv Arya, Pulah Shah, and Yiran Qin Course Schedule Key Links * Piazza Message Boards * Course Schedule Lecture Notes * Unit 1 - Introduction * Unit 2 - ISAs * Unit 3 - Technology * Unit 4 - Performance * Unit 5 - Pipelining * Unit 6 - Caches * Unit 7 - Virtual Memory * Unit 8 - Superscalar * Unit 9 - Scheduling * Unit 10 - Multicore * Unit 11 - Vectors * Unit 12 - XBox360 * Midterm exam info Papers &amp; Discussion Questions * Paper discussion question instructions * Cramming More Components onto Integrated Circuits by Gordon Moore * Moore discussion questions -- due Thursday, September 13th * The Evolution of RISC Technology at IBM by John Cocke and V.
Markstein * Cocke discussion questions -- due Thursday, September 20th * The Envelope is Back by Jon Bentley * Bentley discussion questions -- due Thursday, October 4th * Improving Direct-Mapped Cache Performance by the Addition of a Small Fully-Associative Cache and Prefetch Buffers by Norm Jouppi * Jouppi reading questions -- due Thursday, November 1st * Memory Dependence Prediction using Store Sets by George Chrysos and Joel Emer * Chrysos reading questions -- due Thursday, November 29th Homeworks * Homework1a and Homework1b -- due Friday, Sept 28th -- Homework1a Solution --Homework1b Solution * Homework2a and Homework2b -- due Wednesday, Oct 10th -- Homework2a Solution --Homework2b Solution * Homework3a and Homework3b -- due Friday, Oct 19th -- Homework3a Solution --Homework3b Solution * Homework4 -- due Wednesday, Nov 7th --Homework4 Solution * Homework5 -- due Wednesday, Nov 21th --Homework5 Solution * Homework6 -- due Friday, Dec 7th --Homework6 Solution * Extra - Extra Solution Exams * CIS501 2012 Final - CIS501 2012 Final Solution * CIS501 2011 Final - CIS501 2011 Final Solution * CIS501 2010 Final - CIS501 2010 Final Solution * CIS501 2012 Midterm - CIS501 2012 Midterm Solution * CIS501 2011 Midterm - CIS501 2011 Midterm Solution * CIS501 2010 Midterm - CIS501 2010 Midterm Solution Digial Library Links The ACM and IEEE digital libraries can be accessed from off-campus by using the following Penn proxy links:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* ACM Digital Library * IEEE Xplore * IEEE Micro * IEEE Computer Course Syllabus Course Description This course is a graduate course on computer architecture with an emphasis on a quantitative approach to cost/performance design tradeoffs.
The course covers the fundamentals of classical and modern processor design: performance and cost issues, instruction sets, pipelining, caches, physical memory, virtual memory, I/O superscalar and out-of-order instruction execution, speculative execution, long (SIMD) and short (multimedia) vector execution, multithreading, and an introduction to shared memory multiprocessors.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Prerequisites CIS501 is a graduate-level course on computer architecture that assumes significant prior knowledge of computer organization and architecture (do not be mislead by the word &quot;Introduction&quot; in the course title).
You should already be familiar with hardware caches, instruction execution pipelines, basic logic design, and some assembly-level programming.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Students will have expected to have had a course that covers the material in a textbook such as Patterson and Hennessy's &quot;Computer Organization and Design: The Hardware/Software Interface&quot;.
Penn'sCIS371 is an example of such a course.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If you do not have the appropriate background, you should either consider not taking the course or spend significant time review this textbook and the lecture notes fromCIS371 .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Previous CIS501 Offerings This course is based on my previous offerings of CIS501 over the last few years:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* CIS501 - Fall 2011 * CIS501 - Fall 2010 * CIS501 - Fall 2009 * CIS501 - Fall 2008 * CIS501 - Fall 2005 Textbook We will use the following textbook:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Microprocessor Architecture: From Simple Pipelines to Chip Multiprocessors by Jean-Loup Baer Those of you who feel that you are lacking in certain areas may also want to acquire a copy of the most recent edition of Patterson and Hennessy's &quot;Computer Organization and Design: The Hardware/Software Interface&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Grading * Paper Reviews: 5% * Homework: 20% * Midterm exam: 30% * Final exam: 45% Exams There will be a midterm exam and a final exam.
The final exam will be cumulative and will be held during the final time slot for the course.
The final exam will also count as the PhD Architecture WPE I exam.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Homework There will be several homework assignments, consisting of problems to be worked out by hand and/or coding of simulations.
Homework is due at the beginning of the class period for which it is assigned.
As for late homework, see the course overview slides for the specific policy.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Paper Reviews We will read several papers from the research literature during this course.
Before we discuss the paper in class, you will meet in groups to discuss the paper and write a concise response to a few high-level questions about the paper.
To avoid the same groups for each paper, you may be in a group with a student at most once.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Academic Misconduct Academic misconduct such as cheating will not be tolerated.
The work you submit in this class is expected to be your own.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If you submit work that has in part or in whole been copied from some published or unpublished source (including current or former students), or that has been prepared by someone other than you, or that in any way misrepresents somebody else's work as your own, you will face severe discipline by the university.
(Adapted from text appearing at the Office of Student Conduct page.)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Any detected cases of cheating will be pursued.
Penalties can include: receiving a zero on the assignment (the minimum penalty), failing the course, having a note placed in your permanent academic record, suspension, and ultimately expulsion.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>See Penn's Code of Academic Integrity for more information.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Generated on: 2012-12-21 02:34 UTC.
What relevant is number system to computer architecture? - Yahoo!
Answers Skip to search.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* New User?
Register * Sign In * Help Get new Yahoo!
Mail apps *   Notifications Help * Mail * My Y! * Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Answers Search Search Web Breaking News Visit Yahoo!
News for the latest.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>×Close this window * Home * Browse Categories * Arts &amp; Humanities * Beauty &amp; Style * Business &amp; Finance * Cars &amp; Transportation * Computers &amp; Internet * Consumer Electronics * Dining Out * Education &amp; Reference * Entertainment &amp; Music * Environment * Family &amp; Relationships * Food &amp; Drink * Games &amp; Recreation * Health * Home &amp; Garden * Local Businesses * News &amp; Events * Pets * Politics &amp; Government * Pregnancy &amp; Parenting * Science &amp; Mathematics * Social Science * Society &amp; Culture * Sports * Travel * Yahoo!
Products * My Activity Sorry, you need to be Signed in to see this.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Not a member?
Join Here .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* About * How Answers Works * Points &amp; Levels * Community Guidelines * Leaderboard * Suggestion Board * Answers Blog * Ask What would you like to ask? * Answer * Discover What are you looking for?
Advanced Search * Home &gt; * All Categories &gt; * Computers &amp; Internet &gt; * Programming &amp; Design &gt; * Resolved Question Doctor Member since: January 19, 2013 Total points: 93 (Level 1) * Add Contact * Block Resolved Question Show me another » What relevant is number system to computer architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Under computer science * 2 months ago * Report Abuse by BASHIR Member since: February 12, 2013 Total points: 112 (Level 1) * Add Contact * Block Best Answer - Chosen by Voters Number system otherwise known as the computer language is the internal representation of numeric values, symbols, alphabet,signs,and other graphical input data. its relevance or importance is provision of medium of communication between the computer and its users since the computer cannot understand the users language but the number system language, the number system becomes a channel through which the computer understands the users language by converting the graphical symbols to number base system.
Source(s):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>IQ * 2 months ago * Report Abuse 100% 1 Vote * 0 stars - mark this as Interesting!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Email * Comment (0)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Save * Add to My Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Add to Del.icio.us * RSS * There are currently no comments for this question.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* You must be logged into Answers to add comments.
Sign in orRegister .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* by Fat, Old, Bearded, Bald Guy Member since: November 06, 2012 Total points: 25,570 (Level 7) Badge Image: Contributing In: Do It Yourself (DIY) Words &amp; Wordplay Maintenance &amp; Repairs * Add Contact * Block identification ie line numbers?
algorithms * 2 months ago * Report Abuse 0% 0 Votes Discover Questions in Programming &amp; Design * What are the function of ?
(questionmark) and :(colon) in the PHP code (fmod ($counter,2))?
$bg=odd: $bg=even;?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* C# read from file error?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* CCDA: &quot;Cisco certified design associate&quot;.
What is it?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* C++ problem of sum n factorial numbers?
Ready to Participate?Get Started!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Categories * All Categories * Computers &amp; Internet * Computer Networking * Hardware * Internet * Other - Computers * Programming &amp; Design * Security * Software Who found this interesting?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Be the first person to mark this question as interesting!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Answers International * Argentina * Australia * Brazil * Canada * China * France * Germany * Hong Kong * India * Indonesia * Italy * Japan * Malaysia * Mexico * New Zealand * Philippines * Quebec * Singapore * South Korea * Spain * Taiwan * Thailand * United Kingdom * United States * Vietnam * en Español Yahoo! does not evaluate or guarantee the accuracy of any Yahoo!
Answers content.Click here for the Full Disclaimer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Help us improve Yahoo!
Answers.
Send Feedback Copyright © 2013 Yahoo!
Inc.
All Rights Reserved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Copyright/IP Policy - * Privacy Policy - * About Our Ads - * Terms of Service - * Community Guidelines * - Safety Tips
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
            </sectionList>
        </query>
        <query>
            <text>computer architecture interview questions</text>
            <linkList>
                <link>http://www.techinterviews.com/computer-architecture-and-design-interview-questions</link>
                <link>http://www.careercup.com/page?pid=computer-architecture-low-level-interview-questions</link>
                <link>http://careerride.com/computer-architecture-and-design-interview-questions.aspx</link>
                <link>http://groups.yahoo.com/group/koolkampusmail/message/9255</link>
                <link>http://www.coolinterview.com/type.asp?iType=96</link>
                <link>http://www.globalguideline.com/interview_questions/Questions.php?sc=Computer_Architecture_and_Design_Interview_Questions</link>
                <link>https://itunes.apple.com/us/book/computer-architecture-interview/id465251634?mt=11</link>
                <link>http://www.devbistro.com/tech-interview-questions/Hardware.jsp</link>
                <link>http://www.glassdoor.com/Interview/computer-architecture-interview-questions-SRCH_KT0,21.htm</link>
                <link>http://kyapoocha.com/computer-architecture-interview-questions</link>
                <link>http://www.glassdoor.com.au/Interview/Mostly-technical-questions-related-to-computer-architecture-vlsi-and-digital-design-nothing-very-unexpected-but-need-to-QTN_444793.htm</link>
                <link>http://www.technicalsymposium.com/itinterviewquestions.html</link>
                <link>http://www.glassdoor.com/Interview/Cavium-Networks-Interview-Questions-E20425.htm</link>
                <link>http://www.hitequest.com/Hardware/Intel_q.html</link>
                <link>http://www.glassdoor.com/Interview/LSI-Interview-Questions-E1579.htm</link>
                <link>http://www.glassdoor.co.uk/Interview/The-questions-were-on-my-projects-digital-design-computer-architecture-verilog-coding-on-a-problem-give-state-machine-QTN_399098.htm</link>
                <link>http://www.glassdoor.com/Interview/Intel-Corporation-Graduate-Technical-Intern-Interview-Questions-EI_IE1519.0,17_KO18,43.htm</link>
                <link>http://www.glassdoor.com/Interview/NVIDIA-Hardware-Engineer-Interview-Questions-EI_IE7633.0,6_KO7,24.htm</link>
                <link>http://www.geekinterview.com/question_details/37283</link>
            </linkList>
            <sectionList>
                <section>
                    <text>Computer architecture and design interview questions | TechInterviews Search Tech Interviews Tech Interviews Prepare for job interviews with the questions and answers asked by high-tech employers Skip to content * .NET * C++ * Database * General * Hardware * Java * Networking * Puzzles * SAP ABAP * Testing * Unix/Linux * VB * Web dev * Windows Hardware &gt;&gt; Computer architecture and design interview questions « Embedded systems interview questions Microsoft interview questions» Computer architecture and design interview questions By admin | December 7, 2003 * What is pipelining?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What are the five stages in a DLX pipeline? * For a pipeline with ‘n’ stages, what’s the ideal throughput?
What prevents us from achieving this ideal throughput? * What are the different hazards?
How do you avoid them? * Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages? * What are Branch Prediction and Branch Target Buffers? * How do you handle precise exceptions or interrupts? * What is a cache? * What’s the difference between Write-Through and Write-Back Caches?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Explain advantages and disadvantages of each. * Cache Size is 64KB, Block size is 32B and the cache is Two-Way Set Associative.
For a 32-bit physical address, give the division between Block Offset, Index and Tag. * What is Virtual Memory?
* What is Cache Coherency?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is MESI?
* What is a Snooping cache?
* What are the components in a Microprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is ACBF(Hex) divided by 16?
* Convert 65(Hex) to Binary * Convert a number to its two’s compliment and back * The CPU is busy but you want to stop and do some other task.
How do you do it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This entry was posted in Hardware .
Bookmark the permalink .Post a comment or leave a trackback:Trackback URL . « Embedded systems interview questions Microsoft interview questions» 12 Comments on Computer architecture and design interview questions * Charles Clevor Posted 3/23/2005 at 5:05 am| Permalink I think questions should involve clues with sections of reference of reference to aid in effective revision.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Deepak Posted 10/24/2007 at 4:21 am | Permalink What are the five stages in a DLX pipeline?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Deepak Posted 10/24/2007 at 4:22 am | Permalink What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 11/6/2007 at 3:14 am | Permalink # Deepak said, What are the five stages in a DLX pipeline?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Instruction Fetch Stage Instruction Decode Stage Instruction Execution Stage Memory Stage Write Back * Rahul Singhal Posted 11/6/2007 at 3:16 am | Permalink # Deepak said, What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>MESI is a Cache Coherency protocol used in multi-processor systems to indicate the state in which the data in the cache of a particular processor is.
It stands of Modified, Exclusive, Shared and Invalid * sateesh rahul Posted 8/6/2008 at 9:47 am | Permalink 1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Instruction fetch cycle (IF): Send the program counter (PC) to memory and fetch the current instruction from memory.
Update the PC to the next sequential PC by adding 4 (since each instruction is 4 bytes) to the PC.
2. Instruction decode/register fetch cycle (ID): Decode the instruction and read the registers corresponding to register source specifiers from the register file.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Do the equality test on the registers as they are read, for a possible branch.
Sign-extend the offset field of the instruction in case it is needed.
Compute the possible branch target address by adding the sign-extended offset to the incremented PC.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In an aggressive implementation, which we explore later, the branch can be completed at the end of this stage, by storing the branch-target address into the PC, if the condition test yielded true.
Decoding is done in parallel with reading registers, which is possible because the register specifiers are at a fixed location in a RISC architecture.
Appendix A Pipelining: Basic and Intermediate Concepts This technique is known as fixed-field decoding.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Note that we may read a register we don’t use, which doesn’t help but also doesn’t hurt performance.
(It does waste energy to read an unneeded register, and power-sensitive designs might avoid this.)
Because the immediate portion of an instruction is also located in an identical place, the sign-extended immediate is also calculated during this cycle in case it is needed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.
Execution/’effective address cycle (EX): The ALU operates on the operands prepared in the prior cycle, performing one of three functions depending on the instruction type.
Ã¢â‚¬Â¢ Memory reference: The ALU adds the base register and the offset to form the effective address.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ã¢â‚¬Â¢ Register-Register ALU instruction: The ALU performs the operation specified by the ALU opcode on the values read from the register file.
Ã¢â‚¬Â¢ Register-Immediate ALU instruction: The ALU performs the operation specified by the ALU opcode on the first value read from the register file and the sign-extended immediate.
In a load-store architecture the effective address and execution cycles can be combined into a single clock cycle, since no instruction needs to simultaneously calculate a data address and perform an operation on the data.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4. Memory access (MEM): If the instruction is a load, memory does a read using the effective address computed in the previous cycle.
If it is a store, then the memory writes the data from the second register read from the register file using the effective address.
5. Write-back cycle (WB): Ã¢â‚¬Â¢ Register-Register ALU instruction or Load instruction: Write the result into the register file, whether it comes from the memory system (for a load) or from the ALU (for an ALU instruction).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:19 pm | Permalink 9.
Write Through: All the writes to cache always go to the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Write back: Writes to cache do not go to the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Advantages of WT: Mostly used in mutliprocessor systems and keeps the data coherent beteen the cache and the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Disadv of WT: It requires more bandwidth as all the writes need to go all the way to the main memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Adv of WB: All the writes happen at the speed of the cache which is faster and does not require a large bandwidth.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Disadv of WB: Coherency is not there.
Needs protocol for coherency.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:26 pm | Permalink 6.
Branch Prediction is the scheme that is used to predict if the branch would be taken or not based on the behavior of the branch in the past.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Branch Target Buffer is the hardware that, in most cases, stores the target of a taken branches in the past.
Thus if the branch is encountered again and if the prediction is taken the address of the next instruction to be read is provided by the reading out the BTB.
Usually BTB is implemented as a fully associative cache.
Some BTB implementation also store the target instructions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:27 pm | Permalink 19.
Send an interrupt to the busy CPU.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:30 pm | Permalink For a pipeline with Ã¢â‚¬ËœnÃ¢â‚¬â„¢ stages, whatÃ¢â‚¬â„¢s the ideal throughput?
What prevents us from achieving this ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ans: The ideal throughput should be 1 instruction per clock cycle.
Dependencies and hazards like Data Hazard, Control Hazard and structural hazards prevent us from acheiving them.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:37 pm | Permalink Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ans: There are several reasons for that: 1.
Since almost all the processors use branch prediction (which happens quite late in the pipeline say 30), if branch prediction comes out to be incorrect then processor has to flush all 29 instructions in pipe behind branch instruction which is a huge performance hit.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2. 50 pipe statges would require registers after each stage and each register would have some latency.
So eventually the latency of each instruction increases (although throughput will increase)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. If you have 50 pipe stages, you are more likely to run it at a higher clock speed [because you are able to :)], you would end up having heating issues.
Faster the clock, hotter it gets….remember Pentium 4 Prescott :)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rahul Singhal Posted 10/16/2008 at 6:41 pm | Permalink What is a cache?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A cache is faster memnory that is placed between the main memory and the processor to reduce the gap between their operating speeds.
Cache are usually very fast SRAMS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Caches exploit the property of temporal and spatial locality.
(Remember to mention this in your interview):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Temporal locality: If the data accessed recently, it is more likely to be accessed soon again.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Spatial locality: If a data was accessed, processor is more likely to access the data closer to it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Comment Click here to cancel reply.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your email isnever published nor shared.
Required fields are marked * Name * Email * Website Comment * * * Job Interview Question Articles * C# Interview Questions and Answers * QTP Interview Questions and Answers * C++ Interview Questions and Answers * PHP Interview Questions and Answers * XML Interview Questions and Answers * JavaScript Interview Questions and Answers * Asp.Net Interview Questions and Answers * J2EE Interview Questions and Answers * ABAP Interview Questions and Answers * Perl Interview Questions and Answers * Java Interview Questions and Answers * Resources * Technology Question and Answer Website * How to dance around the salary-expectation question * 10 mistakes managers make during job interviews * Stupid interview questions * How to Answer These Tricky Interview Questions * Seven tips for writing an online profile for LinkedIn, MySpace or Facebook * Laptop computers * Ink cartridges * Tutorials * AJAX Tutorials * Dealing with your job * Getting a job * JavaScript tutorials * Job interview tips from Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>HotJobs * MySQL tutorials * Retiring from your job * Ruby on Rails tutorials * Salary guide for IT jobs * Self-employment * TechInterviews guides in PDF * Understanding pointers * XML Tutorials * XUL tutorials * RSS Feeds * All posts * All comments Powered by WordPress .
Built on the Thematic Theme Framework .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer Architecture &amp; Low Level Interview Questions | CareerCup CareerCup * Questions * Forum * Salaries * Resume Tips * RSS * Sign In ▼ * Sign In * View Cart Computer Architecture &amp; Low Level Interview Questions Page: 1 2 3 4 Filter: (None) A9 aabccd Abs india pvt. ltd.
Accenture Achieve Internet Adap.tv Adobe ADP Advisory Board Company Agilent Technologies Akamai Alcatel Lucent Altair Engineering Altera Amazon Amazon AMD Amdocs American Airlines Apache Design Apple AppNexus Argus Aricent Arista Networks Aristocrat Gaming Ask.com Aspire Systems ASU Athena Health Automated Traders Desk Autonomy Zantaz Axiom Sources Baidu Bank of America Barclays Capital Bazaarvoice Big Fish Binecs Bloomberg LP Blue Jeans Bocada Boeing Booking.com Brainware BT Cadence Inc Capgemini CapitalIQ Caritor Cavium Networks CCN CDAC-ACTS CGI-AMS Chegg.com Chelsio Communications Chicago Mercantile Exchange Chronus Cisco Systems Cisco Systems Citigroup Citrix Online Citrix System Inc Cloudera Cloudmere, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CMC LTD Cognzant Technology Solutions Collective Computer Associates Continental Credit Suisse Crompton Greeves CSC CSR Cubic Transportation Systems Limited Daptiv Defense Research and Development Organization of India Deloitte Consulting LLP Delve Networks Denmin Group Deshaw Inc Did-it.com Directi Dover Organization Ebay EFI Egenera Electronic Arts EMC Epic Systems Epsilon Ericsson Eterno Infotech Pvt Ltd Expedia EZ Prints F5 Networks Fabrix Facebook FactSet Research Systems, Inc Fair Issac Fiorano FlexTrade Flipkart Fortinet Future Advisor Future Group, Mumbai Fynanz Gartner Gayatri Vidya Parishad GE (General Electric) Georgia Pacific Global Scholar Globaltech Research Gluster GoDaddy Gold-Tier Goldman Sachs Google Green Bricks Groupon GrubHub Guruji Harman Kadron HCL HCL America Headrun Technologies Pvt Ltd Hewlett Packard Hi5 Highbridge Capital Home Depot Honeywell Huawei Hunan Asset Ibibo IBM Iconologic Igate IIT-D iLabs Imagination Technologies IMG Infibeam Infinium Informatica Infosys Initto InMobi Intel Interactive Brokers Interactive Design Internet Question InterraIT Intuit ION idea ION Trading iPowerFour Iron Mountain Ittiam Systems Ivycomptech Izon Jane Street JDA JP Morgan Juniper Networks Kalido Kaseya Kerkestavni Computecha Corporatci Kingfisher Kingfisher Airlines Kiwox Knewton Knoa Software Knowledge Systems KnowledgeBase Komli Media Kpro Solutions Lab126 Labs247 Laserfiche LexisNexis Lime Labs Linkedin LiteratureBay.com Live Nation LiveRamp Lockheed Martin London Investment Bank Loyom LSI Lunatic Server Solutions MAGMA Manhattan associates MAQ MarketRX Marvell Mathworks McAfee Medio Systems Megasoft Mentor Graphics Micron Microsoft Microsoft Microsoft MicroStrategy MIH Mindtree Wireless India Model N Monitor Group Morgan Stanley Motorola MounzIT Moyer Group mSpot Myntra Myntra.com National Informatics Centre National Instruments Ness NetApp Netflix Nexabion Nextag Nisum Technologies Nivio Technologies Nomura Novell NVIDIA One97 OnMobile Oracle Overstock.com Palantir Technology PayPal Pega Persistent Systems Philips Pinterest PJ Pvt Ltd Pocketgems Polaris PRDS Progress QNX QSI HealthCare Qualcomm Rapleaf Raytheon Real Networks Rebellion Research RelQ Software Company Limited Research In Motion Ricoh RightC Riverbed Roamware RoviCorp Roxar RSA Sabre Holdings Safenet Sage Software Salesforce Samsung Sap Labs Sapient Corporation SAS Research Schneider Electric Search Media Sears Holding Shutterfly Siemens SIG (Susquehanna International Group) SignPost Sileria Inc.
Singapore Technologies Socialcam Softchoice Sonoa Systems Sophos Spotify SRMicro Info Systems Starent Networks StartUp SunGard SWAPTON SOLUTIONS Symantec Symphony Services SynCfusion Synopsys R&amp;D Take Two Interactive Tally Solutions TATA Consultancy Services Tech India Line Techlogix Tejas Networks Tellabs Texas Instruments The Digital Group The Royal Bank of Scotland Chennai thePlatform Thirdware Technologies Thomson Reuters ThoughtWorks TP TRG Tribal Fusion Trilogy Turing Software Twitter Two Sigma United HealthGroup Urban Touch USAA USInternetworking VANS Vanu Vdopia Video Gaming Technologies Vizury VMWare Inc Walmart Labs Watchguard Wichorus Wipro Technologies Wireless Generation WorksApp X Xurmo Yahoo Yatra.com Yelp Zillow Zoosk ZS Associates Zycus Zynga (None) Accountant Analyst Android test engineer Applications Developer Area Sales Manager Associate Computer Scientist Consultant Developer Program Engineer Developer Program Engineer Development Support Engineer Field Sales Financial Application Engineer Financial Software Developer Firmware Engineer Front-end Software Engineer Graphics Programmer Intern iOS Developer Java Developer Member Technical Staff MTS Network Engineer Personnel Principal Software Engineer Product Security Engineer Production Engineer Program Manager Quality Assurance Engineer Research Scientist Reverse Engineering and System Developer Scientific Officer SDE-2 SDE1 SDE1 SDE1 Security Analyst Senior Software Development Engineer Site Reliability Engineer Software Analyst Software Architect Software Development Manager Software Engineer / Developer Software Engineer in Test Software Engineer in Test Software Engineer Intern Software Trainee Solutions Architect student System Administrator Systems Design Engineer Tech Lead Technical Architect Technical Support Engineer Testing / Quality Assurance Virus Researcher Web Developer (None) Algorithm Android Application / UI Design Arrays Arrays Assembly Automata Behavioral Bit Manipulation Brain Teasers C C C++ Cache Coding Compiler Computer Architecture &amp; Low Level Data Mining Data Structures Database Debugging Distributed Computing Dynamic Programming Experience Front End Web Development General Questions and Comments Graphics Hash Table Ideas Java Java JavaScript Knowledge Based Large Scale Computing Linked Lists Linux Kernel Math &amp; Computation Matrix Networking / Web / Internet Object Oriented Design OODesign Operating System Operators Perl PHP Probability Problem Solving Python Questions YOU should ask!
Sales Security Sets Sorting SQL Stacks String Manipulation System Administration System Design Terminology &amp; Trivia test Testing Testing Threads Trees and Graphs Unix vmware interview questions XML Sort By: Date | Number of Comments | Most Recent Comment | Votes * 1 of 1 vote 7 Answers What is the difference between a computers heap and it's stack?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- brighama on March 29, 2013 in United States Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 1 of 1 vote 2 Answers During boot, after the BIOS performs a successful power-on-self-test, describe everything that occurs until the console is presented to the user.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- longbelly on March 21, 2013 in United States Edit | Report Duplicate | Flag Google Site Reliability Engineer Computer Architecture &amp; Low Level * 1 of 1 vote 1 Answer Sequence of steps that happen in CPU, cache, TLB, VM, HDD leading to execution of “x = 7&quot; which isn’t present in cache or sysmem nor translation in TLB.
Also specify if any intrs, exceptions or faults are generated.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- ANKSCIRCLE on October 20, 2012 in United States Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer Design a system for the customer to review a product.
It should be able to incorporate web-services.
Describe the entire flow from the client to the database.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- naveen.mandadi on August 30, 2012 in India Edit | Report Duplicate | Flag Amazon Applications Developer Computer Architecture &amp; Low Level Data Structures Application / UI Design * 0 of 0 votes 0 Answers In your application, why database (story history) is used at client side and not on server side ?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Sachin on July 24, 2012 in India Edit | Report Duplicate | Flag Igate Technical Architect Computer Architecture &amp; Low Level Distributed Computing Application / UI Design * 0 of 0 votes 2 Answers At the Kernel level, if you want to write a memory leak analyzer, how will you implement it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- snehaldesh1 on June 26, 2012 in United States Edit | Report Duplicate | Flag Apple Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers What is a process.
What is a stack.
How many stacks can a process have.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is a thread.
How many threads can a process have.
Do the threads have their own stacks, or share the process stack(s), or both?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Terry on April 21, 2012 in United States Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 10 Answers what is the range of int data type? what is the maximum number (decimal number) that can be stored using any datatype ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- ashish on March 25, 2012 in India for bing Edit | Report Duplicate | Flag Microsoft Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers What is a process and what is a thread?
What are their differences and similarities?
Can you have processes in processes?
How do you prevent deadlocks?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>NB:: The questions weren't this direct!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- llmorex on February 05, 2012 in England Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 0 Answers Asked few times over phone and in-person.
Asking to get my facts correct and consolidate the info for me and for everyone here.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How's synchornization differs in multi-core vs multiprocessor arch?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Little internals about them.
How the code design and implementation changes for these two arch?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>pour in your suggestions and any nice read if u know any.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Varun on December 06, 2011 in India Edit | Report Duplicate | Flag Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers Compiler optimization for memory based code.
How do you make sure your code works fine with such a code?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- einstein.goli on October 25, 2011 in United States Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers On some architecture stack grows upwards and on some architecture stack grows downwards.How will you find out whether the stack is growing upwards or downwards?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- McAfee on July 11, 2011 Edit | Report Duplicate | Flag McAfee Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 13 Answers You have a 64bit interger counter set to 0.
How long it will take to overflow the counter given that you are incrementing it at 4Ghz speed - anonymous on July 08, 2011 Edit | Report Duplicate | Flag Google Computer Architecture &amp; Low Level * 0 of 0 votes 6 Answers How would you design transfer of data packets from NY to Tokio?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>First I thought of traveling salesman problem where weight of connections between nodes is throughput of network.
This problem is NP which lead just to interviewers reply that I should care about design of system, recovery of data and acknowledge whether data has been transferred.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- gbabun on April 26, 2011 Edit | Report Duplicate | Flag Google Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 2 Answers he drew a diagram on the white board, asked me this synchronization problem abt 2 processes trying to communicate with the hardware. there was 1 bit register on the hardware u can use as extra memory if u want. there were several approaches i tried, some which wouldnt work, the rest im not sure if they were right. in the end he said now give me a solution if it were a multi processor system. i didnt really say much after that. was pretty stuck.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Abhi on April 15, 2011 Edit | Report Duplicate | Flag NVIDIA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer How does malloc work ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Bandiccot on March 12, 2011 Edit | Report Duplicate | Flag Riverbed Software Engineer / Developer Computer Architecture &amp; Low Level Linux Kernel Operating System * 0 of 0 votes 4 Answers What is virtual memory ?
What is the pre-requisite in hardware for supporting virtual memory ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Bandiccot on March 12, 2011 Edit | Report Duplicate | Flag Riverbed Software Engineer / Developer Computer Architecture &amp; Low Level Linux Kernel Operating System * 0 of 0 votes 3 Answers 4) Difference between Flip-FLOP ?
Where we use flip flop ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- siva.sai.2020 on February 16, 2011 Edit | Report Duplicate | Flag MAGMA Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers 3) Littele Endian vs Big Endian ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1) which one decides endianess , Processor(CPU) or Operating System ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2) There any standard ways to convert little endian data to big endian and vice versa .
My answer: Linux is little endian and Solaris is big endian.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>After that I said Processor(CPU) decides endianness of the machine.
Intel processor supports little endian and SPARCV( Solaris) processor supports big endian.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>He asked what about Solaris operating system with Intel processor ?.
I said it is little endian.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- siva.sai.2020 on February 13, 2011 Edit | Report Duplicate | Flag Gluster Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 2 Answers What is a futex?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- blueskin.neo on November 18, 2010 Edit | Report Duplicate | Flag Morgan Stanley Computer Architecture &amp; Low Level * 0 of 0 votes 7 Answers What is a singleton class?
Explain the code?
How do you handle singleton object in multithreaded programs?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- blueskin.neo on November 18, 2010 Edit | Report Duplicate | Flag Morgan Stanley Computer Architecture &amp; Low Level * 0 of 0 votes 0 Answers give an example of symbol table, semantic stack and parse table in an compiler implementation - bob on October 20, 2010 Edit | Report Duplicate | Flag Laserfiche Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer 1) You have a test application that is issuing asynchronous un-buffered sequential writes to a 15k RPM disk connected through a 3Gb/s SAS interface.
The test application is able to get 150 IOPS for an IO size of 8KB.
What is the throughput for the writes being issued by this test application?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- manu on September 09, 2010 Edit | Report Duplicate | Flag Cisco Systems Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers How to find how much memory your program will need?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Jig on August 10, 2010 Edit | Report Duplicate | Flag Goldman Sachs Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 3 Answers what is Amdhal's law?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Vishal on August 03, 2010 Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 5 Answers I want to create a LRU [least recently used cache] such that push, pop and find min [without deletion] are done in constant time how to do this?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- someone on June 28, 2010 Edit | Report Duplicate | Flag Amazon Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 36 Answers There is very long array of ints, and you are given pointer to base addr of this array.. each int is 16bit representation... you need to return the pointer to tht &quot;bit&quot; inside array where longest sequence of &quot;1&quot;s start - gradStudent on June 16, 2010Edit | Report Duplicate | Flag Amazon Software Engineer / Developer Algorithm Arrays Bit Manipulation Computer Architecture &amp; Low Level * 0 of 0 votes 1 Answer Explain the difference between Memory mapped I/O and DMA - raady on April 25, 2010 Edit | Report Duplicate | Flag Riverbed Software Engineer / Developer Computer Architecture &amp; Low Level * 0 of 0 votes 4 Answers Why don't we use malloc in embedded systems ?
How is memory allocated in Embedded systems ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Bandicoot on April 02, 2010 Edit | Report Duplicate | Flag Qualcomm Software Engineer / Developer Computer Architecture &amp; Low Level Operating System System Design * 0 of 0 votes 1 Answer What does the wmb instruction do?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- - on February 22, 2010 Edit | Report Duplicate | Flag NetApp Software Engineer / Developer Computer Architecture &amp; Low Level Page: 1 2 3 4 Filter: (None) A9 aabccd Abs india pvt. ltd.
Accenture Achieve Internet Adap.tv Adobe ADP Advisory Board Company Agilent Technologies Akamai Alcatel Lucent Altair Engineering Altera Amazon Amazon AMD Amdocs American Airlines Apache Design Apple AppNexus Argus Aricent Arista Networks Aristocrat Gaming Ask.com Aspire Systems ASU Athena Health Automated Traders Desk Autonomy Zantaz Axiom Sources Baidu Bank of America Barclays Capital Bazaarvoice Big Fish Binecs Bloomberg LP Blue Jeans Bocada Boeing Booking.com Brainware BT Cadence Inc Capgemini CapitalIQ Caritor Cavium Networks CCN CDAC-ACTS CGI-AMS Chegg.com Chelsio Communications Chicago Mercantile Exchange Chronus Cisco Systems Cisco Systems Citigroup Citrix Online Citrix System Inc Cloudera Cloudmere, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CMC LTD Cognzant Technology Solutions Collective Computer Associates Continental Credit Suisse Crompton Greeves CSC CSR Cubic Transportation Systems Limited Daptiv Defense Research and Development Organization of India Deloitte Consulting LLP Delve Networks Denmin Group Deshaw Inc Did-it.com Directi Dover Organization Ebay EFI Egenera Electronic Arts EMC Epic Systems Epsilon Ericsson Eterno Infotech Pvt Ltd Expedia EZ Prints F5 Networks Fabrix Facebook FactSet Research Systems, Inc Fair Issac Fiorano FlexTrade Flipkart Fortinet Future Advisor Future Group, Mumbai Fynanz Gartner Gayatri Vidya Parishad GE (General Electric) Georgia Pacific Global Scholar Globaltech Research Gluster GoDaddy Gold-Tier Goldman Sachs Google Green Bricks Groupon GrubHub Guruji Harman Kadron HCL HCL America Headrun Technologies Pvt Ltd Hewlett Packard Hi5 Highbridge Capital Home Depot Honeywell Huawei Hunan Asset Ibibo IBM Iconologic Igate IIT-D iLabs Imagination Technologies IMG Infibeam Infinium Informatica Infosys Initto InMobi Intel Interactive Brokers Interactive Design Internet Question InterraIT Intuit ION idea ION Trading iPowerFour Iron Mountain Ittiam Systems Ivycomptech Izon Jane Street JDA JP Morgan Juniper Networks Kalido Kaseya Kerkestavni Computecha Corporatci Kingfisher Kingfisher Airlines Kiwox Knewton Knoa Software Knowledge Systems KnowledgeBase Komli Media Kpro Solutions Lab126 Labs247 Laserfiche LexisNexis Lime Labs Linkedin LiteratureBay.com Live Nation LiveRamp Lockheed Martin London Investment Bank Loyom LSI Lunatic Server Solutions MAGMA Manhattan associates MAQ MarketRX Marvell Mathworks McAfee Medio Systems Megasoft Mentor Graphics Micron Microsoft Microsoft Microsoft MicroStrategy MIH Mindtree Wireless India Model N Monitor Group Morgan Stanley Motorola MounzIT Moyer Group mSpot Myntra Myntra.com National Informatics Centre National Instruments Ness NetApp Netflix Nexabion Nextag Nisum Technologies Nivio Technologies Nomura Novell NVIDIA One97 OnMobile Oracle Overstock.com Palantir Technology PayPal Pega Persistent Systems Philips Pinterest PJ Pvt Ltd Pocketgems Polaris PRDS Progress QNX QSI HealthCare Qualcomm Rapleaf Raytheon Real Networks Rebellion Research RelQ Software Company Limited Research In Motion Ricoh RightC Riverbed Roamware RoviCorp Roxar RSA Sabre Holdings Safenet Sage Software Salesforce Samsung Sap Labs Sapient Corporation SAS Research Schneider Electric Search Media Sears Holding Shutterfly Siemens SIG (Susquehanna International Group) SignPost Sileria Inc.
Singapore Technologies Socialcam Softchoice Sonoa Systems Sophos Spotify SRMicro Info Systems Starent Networks StartUp SunGard SWAPTON SOLUTIONS Symantec Symphony Services SynCfusion Synopsys R&amp;D Take Two Interactive Tally Solutions TATA Consultancy Services Tech India Line Techlogix Tejas Networks Tellabs Texas Instruments The Digital Group The Royal Bank of Scotland Chennai thePlatform Thirdware Technologies Thomson Reuters ThoughtWorks TP TRG Tribal Fusion Trilogy Turing Software Twitter Two Sigma United HealthGroup Urban Touch USAA USInternetworking VANS Vanu Vdopia Video Gaming Technologies Vizury VMWare Inc Walmart Labs Watchguard Wichorus Wipro Technologies Wireless Generation WorksApp X Xurmo Yahoo Yatra.com Yelp Zillow Zoosk ZS Associates Zycus Zynga (None) Accountant Analyst Android test engineer Applications Developer Area Sales Manager Associate Computer Scientist Consultant Developer Program Engineer Developer Program Engineer Development Support Engineer Field Sales Financial Application Engineer Financial Software Developer Firmware Engineer Front-end Software Engineer Graphics Programmer Intern iOS Developer Java Developer Member Technical Staff MTS Network Engineer Personnel Principal Software Engineer Product Security Engineer Production Engineer Program Manager Quality Assurance Engineer Research Scientist Reverse Engineering and System Developer Scientific Officer SDE-2 SDE1 SDE1 SDE1 Security Analyst Senior Software Development Engineer Site Reliability Engineer Software Analyst Software Architect Software Development Manager Software Engineer / Developer Software Engineer in Test Software Engineer in Test Software Engineer Intern Software Trainee Solutions Architect student System Administrator Systems Design Engineer Tech Lead Technical Architect Technical Support Engineer Testing / Quality Assurance Virus Researcher Web Developer (None) Algorithm Android Application / UI Design Arrays Arrays Assembly Automata Behavioral Bit Manipulation Brain Teasers C C C++ Cache Coding Compiler Computer Architecture &amp; Low Level Data Mining Data Structures Database Debugging Distributed Computing Dynamic Programming Experience Front End Web Development General Questions and Comments Graphics Hash Table Ideas Java Java JavaScript Knowledge Based Large Scale Computing Linked Lists Linux Kernel Math &amp; Computation Matrix Networking / Web / Internet Object Oriented Design OODesign Operating System Operators Perl PHP Probability Problem Solving Python Questions YOU should ask!
Sales Security Sets Sorting SQL Stacks String Manipulation System Administration System Design Terminology &amp; Trivia test Testing Testing Threads Trees and Graphs Unix vmware interview questions XML Sort By: Date | Number of Comments | Most Recent Comment | Votes Add Question CareerCup is the world's biggest and best source for software engineering interview preparation.See all our resources .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How Can You Help CareerCup?
Find Out When Gayle / CareerCup / Cracking the Coding Interview is in Your City Top Companies * Amazon (3014) * Amazon (3014) * Microsoft (1676)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Google (669) * Bloomberg LP (587)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Adobe (343) * Facebook (230)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Yahoo (215) * More Companies » Top Jobs * Software Engineer / Developer (7008)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Software Engineer in Test (725)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Software Engineer in Test (725)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Developer Program Engineer (343)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Developer Program Engineer (343)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Financial Software Developer (280)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Testing / Quality Assurance (105)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Program Manager (83)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Applications Developer (83)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Analyst (79) * More Jobs » Top Topics * Algorithm (3495)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Coding (754) * Data Structures (540)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* C (504) * C++ (457)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Java (455) * Java (455) * Terminology &amp; Trivia (294)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Brain Teasers (288)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Arrays (277) * More Topics » What's Going On Report a Bug or Issue Books is a comprehensive book walking you through every aspect of getting a job at a top tech company, while focuses on software engineering interviews.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Videos CareerCup's interview videos give you a real-life look at technical interviews.
In these unscripted videos, watch how other candidates handle tough questions and how the interviewer thinks about their performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Resume Review Most engineers make critical mistakes on their resumes -- we can fix your resume with our custom resume review service.
And, we use fellow engineers as our resume reviewers, so you can be sure that we &quot;get&quot; what you're saying.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Mock Interviews Our Mock Interviews will be conducted &quot;in character&quot; just like a real interview, and can focus on whatever topics you want.
All our interviewers have worked for Microsoft, Google or Amazon, you know you'll get a true-to-life experience.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn More Information * Team, Contact &amp; About * Salaries * RSS * Behavioral Preparation Grid * Sample Resumes Products * * * CtCI iPhone App * Videos Services * Mock Interviews * Resume Review * Wiser Profile (LinkedIn Review) Social * CareerCup on Facebook * CtCI on Facebook * Gayle McDowell on Facebook * CareerCup on Twitter * Gayle on Twitter * CareerCup Blog CareerCup.com © 2012 20 computer architecture and design interview questions and answers - freshers, experienced 20 computer architecture and design interview questions and answers            * Interview Q&amp;A * Videos * Placement papers * HR interview * CV * Cover letter * GD * Aptitude * Online practice tests * Java tutorial * .NET tutorial * Log In * Student Login * College Login * User Login For Video Computer Architecture and Design interview questions and answers 1.
Different types of interrupts in a microprocessor system - Computer architecture and design 2.Common rules of assembly language - Computer architecture and design 3.What do you understand vertical micro code?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- Computer architecture and design 4.Explain the two hardware methods to establish priority - Computer architecture and design 5.Explain the requirement of page-table and the different ways in which the table can be organized 6.Flip Flops - Computer architecture and design 7.Partitioning in reference to operating systems - Computer architecture and design 8.What do you understand by virtualization.
Mention the pros and cons.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>9.Differences between high level and assembly language. - Computer architecture and design 10.Differences of horizontal and vertical micro code - Computer architecture and design 11.Different types of mappings used in cache memory - Computer architecture and design 12.What are the different ways in which writing into the cache be done?
- Computer architecture and design 13.Different types of micro-operations - Computer architecture and design 14.What are the different types of fields that are part of an instruction?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>15.What are the major difficulties of pipeline conflicts in processors supporting pipe lining?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>16.Characteristics of the RISC architecture - Computer Architecture and Design 17.Steps involved in an instruction cycle - Computer Architecture and Design 18.Components of the Ven Neumann architecture - Computer Architecture and Design 19.Different types of addressing modes of an instruction - Computer Architecture and Design 20.Pros and cons of emulation - Computer Architecture and Design 1.
Define computer architecture and design.
2. What is computer organization?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. What are the different classes of computers?
4. State and explain Amdahl's Law.
5. Define what is a data path?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>6. What is the principle of locality?
7. What are the various categories of Computer architecture?
8. What are instruction sets?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>9. Define the layout for instruction sets?
10. What do you understand by ISA?
11. What steps are performed during the ISA process?
12. How can instruction sets be classified.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>13. State the difference between memory interpretation and memory alignment?
14. What is DLX architecture?
15. What is an instruction fetch cycle?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>16. What is the effective address cycle?
17. What does system design process include?
18. Define implementation in terms of computer architecture and design?
19. What is logic implementation?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>20. What is circuit implementation?
21. What is physical implementation?
22. What is design validation?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>23. What are the important types of computer architecture?
24. State the differences between a scalar and a vector processor?
25. State the differences between register machine and stack machine?
26. What is macro architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>27. What do you understand by assembly ISA?
28. Define the programmer visible macro architecture?
29. Define UISA in reference to computer architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>30. What is the purpose of defining a pin architecture?
31. What are the performance issues of pipe lining?
32. What is the importance of pipe lining in computer architecture?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>33. What are the various pipeline hazards?
34. What are structural hazards in reference to pipelines?
35. What are data hazards in reference to pipelines?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>36. How can data hazards be classified?
37. What are stalls in reference to pipeline hazards?
38. How can hazards be controlled?
39. What are branch prediction schemes?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>40. What are Exceptions?
41. What are the different types of exceptions?
42. What are user maskable exceptions?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>43. What is parallelism in reference to computer architecture?
44. What are the two different levels of parallelism?
45. What is instruction level parallelism?
46. What is dynamic scheduling?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>47. What are crosscutting issues faced in ILP?
48. What are the limits of instruction level parallelism?
49. What do you understand by thread level parallelism?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>50. What are the common issues faced in parallelism with multiple processors?
51. What is the significance of storage system's in reference to computer architecture?
52. What is a fault in computer architecture terms?
53. How is I/O performance measured?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Write your comment - Share Knowledge and Experience Interview questions * ASP.NET * ADO.NET * AJAX * C#.NET * VB.NET * NET Remoting * NET interview *   * C * C++ * Java * Oops * Data structure * Operating system *   * Database concepts * Oracle * Sql server * Biztalk * Sharepoint * Notification services * Reporting services * Service-oriented architecture * Data warehousing *   * PHP * MySQL * Project management * Linux * Testing * Networking * Software engineering * Microsoft solution framework * UML * XML * HTML * SOAP * CSS * Web services * VBScript * JavaScript *   * Job interviews * Working from home * Articles - Nishant Kumar   Home | Want a Job?
Submit Key Skills | Employer login | My key skills | About us | Sitemap | Contact us Copyright © 2008 - 2010 CareerRide.com.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All rights reserved.
Terms of use  |  Follow us on Facebook!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>               Placement practice test: Java | SAP | .NET | Oracle | Sql Server | QA | Aptitude | Networking | All Skills koolkampusmail : Message: COMPUTER ARCHITECTURE INTERVIEW QUESTIONS Skip to search.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* New User?
Register * Sign In * Help Make Y!
My Homepage *   Notifications Help * Mail * My Y! * Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Groups Search Search Web Breaking News Visit Yahoo!
News for the latest.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>×Close this window koolkampusmail · KoolKampus Newsletter Mail * Home * Messages * Attachments * Members Only * Post * Files * Photos * Links * Database * Polls * Members * Calendar The Yahoo!
Groups Product Blog Check it out!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Info Settings Group Information * Members: 2891 * Category: Education * Founded: Jun 11, 2005 * Language: English Already a member?
Sign in to Yahoo!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Groups Tips Did you know...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Real people.
Real stories.
See how Yahoo!
Groups impacts members worldwide.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Messages Message # Search: Advanced Messages Help Topic List   &lt; Prev Topic  |  Next Topic &gt; COMPUTER ARCHITECTURE INTERVIEW QUESTIONS &lt; Prev  Next &gt; Posted By: * aloksha2006 * aloksha2006 * Send Email Tue Jan 2, 2007 11:08 am  | * Options * View Source * Use Fixed Width Font * Unwrap Lines COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!   Get NEW INTERVIEW QUESTIONS DAILY Join http://groups.yahoo.com/group/kkmail   www.kyapoocha.com   CLICK THE QUESTION TO VIEW THE ANSWER                  What is cache memory?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is hard disk and what is its purpose?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Where�s MBR located on the disk?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What�s the speed and device maximum specs for Firewire?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What�s the difference between L1 and L2 cache?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Name the processor lines of two major manufacturers?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Where does CPU Enhanced mode originate from?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer Where does the Real mode on the CPU come from?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer How do you clear CMOS password?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What are the basic expansion card types?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is a compiler?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is NV-RAM?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is called Scratch pad of computer?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is the difference between primary &amp; secondary storage device?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer What is meant by LATCH?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View the Answer   VIEW OTHER CATEGORIES :   * AJAX Interview Questions * Microprocessors Interview Questions * ASP.Net Interview Questions * Networking Interview Questions * BlueTooth Interview Questions * Object Oriented Interview Questions * C# Interview Questions * Operating System Interview Questions * C/C++ Interview Questions * Oracle Interview Questions * Computer Architecture Interview Questions * PHP Interview Questions * Computer Networks Interview Questions * Puzzles * CSS Interview Questions * Questions to Ask during an HR Interview * Data Structure Interview Questions * SAP-ABAP Interview Questions * Data WareHousing Interview Questions * Siebel Interview Questions * Database Interview Questions * Software Testing * EJB Interview Questions * SQL Interview Questions * HR Interview Questions * Struts Interview Questions * HTML * System Integration Interview Questions * J2EE Interview Questions * UNIX Interview Questions * Java Interview Questions * VB.NET Interview Questions * JavaScript * VBScript Interview Questions * JMS Interview Questions * Visual Basic Interview Questions * JSP Interview Questions * XML Interview Questions * Linux Interview Questions * Microprocessors Interview Questions  Student Resources...
HR Interview Questions C Technical Questions MBA Information C++ &amp; OOPS Questions GATE Preparation Java - Interview Questions GRE Preparation Data Structures Technical Semester Files &amp; Reports Unix/Linux Based Questions Paper Presentations Operating Systems Concepts GD Preparation Database Mgmt.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Systems Visa Information Computer Networks TOEFL Overview ASP.NET Questions MBA Interview Prep J2EE Interview Questions   __________________________________________________ Do You Yahoo!?
Tired of spam?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Yahoo!
Mail has the best spam protection around http://mail.yahoo.com &lt; Prev  Next &gt; Expand Messages Author Sort by Date COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Oct 25, 2006 12:45 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Oct 25, 2006 12:52 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Oct 25, 2006 12:52 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Nov 30, 2006 9:45 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Nov 30, 2006 9:45 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Dec 24, 2006 6:52 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Dec 24, 2006 6:54 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Dec 24, 2006 6:55 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!
Get NEW INTERVIEW...
Alok Sharma aloksha2006 Dec 28, 2006 9:28 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Dec 28, 2006 9:28 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Dec 28, 2006 9:29 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Jan 2, 2007 11:55 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly !!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Jan 2, 2007 12:17 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Alok Sharma aloksha2006 Jan 15, 2007 9:30 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Jan 15, 2007 9:31 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Jan 15, 2007 9:35 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu13 Feb 26, 2007 9:28 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Feb 26, 2007 9:29 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Feb 26, 2007 11:55 am COMPUTER ARCHITECTURE INTERVIEW QUESTIONS ICC CRICKET WORLD CUP 2007� LIVE SCORES AND UPDATES.
MATCH SCHEDULE ONLY AT KOOLKAMPUS.COM COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Gyan Chand gyanu13 Mar 21, 2007 12:07 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS ICC CRICKET WORLD CUP 2007� LIVE SCORES AND UPDATES.
MATCH SCHEDULE ONLY AT KOOLKAMPUS.COM COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most... ankur jain ankurjain1212 Mar 21, 2007 12:07 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS ICC CRICKET WORLD CUP 2007� LIVE SCORES AND UPDATES.
MATCH SCHEDULE ONLY AT KOOLKAMPUS.COM COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Alok Sharma aloksha2006 Mar 21, 2007 12:08 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Alok Sharma aloksha2006 Mar 30, 2007 12:18 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS... ankur jain ankurjain1212 Mar 30, 2007 12:20 pm COMPUTER ARCHITECTURE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE INTERVIEW QUESTIONS KYAPOOCHA.com Most Recent Interview Questions with best answers !!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Updated Regularly!!!
Get NEW INTERVIEW QUESTIONS...
Gyan Chand gyanu14 Mar 30, 2007 12:20 pm &lt; Prev Topic  |  Next Topic &gt; SPONSOR RESULTS Home Loan EMI Calculator www.ApnaPaisa.com/emicalculator - How much EMI will you have to pay?�Just enter amount, tenure &amp; rate.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Southgate Computers www.SouthgateComputers.com - New and Used desktops - laptops Super fast gaming computers Your Daily Dose of Fun http://www.india.com/ - With Bollywood Gossip, Pics, Cars, Gadgets &amp; More - On India.com!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Copyright � 2010 Yahoo!
Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All rights reserved.
Privacy Policy - Terms of Service - Guidelines NEW - Help   Computer Architecture and Design Interview Questions and Answers - Computer Architecture and Design Interview FAQs &amp; Computer Architecture and Design Books Sponsored Links Interview Questions Home Data Warehousing Database Microsoft J2EE Languages Networking Operating Systems Oracle PeopleSoft SAP Siebel General Hardware Mainframe Audit Oracle Apps WebSite Related Testing Multimedia Accounts Computers Protocols Data Structure Arts Commerce Police Officer Interview Questions Call Center Interview Questions Aerospace Science MBBS Certifications Inventory Planning Business Intelligence Algorithm Marketing Web Sphere Portal Servers Civil Engineering Mechanical Engineering Electrical &amp; Electronics Engineering(EEE) Electronics and Communication (EC) Engineering Chemical Engineering Data Mining Computer Graphics JAVA STANDARD EDITION Our Services Get 9,000 Interview Questions &amp; Answers in an eBook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 9500+ Pages * 9000 Question &amp; Answers * All Tech.
Categories * 14 MB Content Get it now !!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>SEARCH INTERVIEW QUESTIONS: Advertisements Computer Architecture and Design Interview Questions COOLINTERVIEW.COM HARDWARE INTERVIEW QUESTIONS COMPUTER ARCHITECTURE AND DESIGN INTERVIEW QUESTIONS QUESTIONS LISTING Computer Architecture and Design Interview Questions &amp; Answers Below we have listed all the Computer Architecture and Design Interview Questions and answers.
Feel free to comment on anyComputer Architecture and Design Interview Questions or answer by the comment feature available on the page.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To buy an eBook containing 9000 Interview Questions, with Answers, Click Here .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 2 3 Next Sort By :   Latest First   |  Oldest First   |  By Rating Question Rating View Answer What are the basic components in a Microprocessor?
View Answer What are the five stages in a DLX pipeline?
View Answer For a pipeline with ?n? stages, what?s the ideal throughput?
What prevents us from achieving this ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer What?s the difference between Write-Through and Write-Back Caches?
Explain advantages and disadvantages of each.
View Answer What are the different hazards?
How do you avoid them?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer What is ACBF(Hex) divided by 16?
View Answer What are the different hazards?
How do you avoid them?
View Answer Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer Convert 65(Hex) to Binary.
View Answer How many types of memory in computer architecture?
View Answer what is the difference between interrupt service routine and subroutine ?
View Answer What is a Snooping cache?
View Answer What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Answer Convert 65(Hex) to Binary?
View Answer can u send me some questions on general computer concepts because i am preparing for keane software there they are asking questions on computers View Answer What is Cache Coherency?
View Answer How do you handle precise exceptions or interrupts?
View Answer For a pipeline with &quot;n&quot; stages, whats the ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What prevents us from achieving this ideal throughput?
View Answer What is pipelining?
View Answer Can virtual memory be greater then main memory?
View Answer 1 2 3 Next A D V E R T I S E M E N T User Options * Home * Ask Questions * About Us * Feedback * Contact Us * Sponsored Links Latest 10 Questions  What is the lifecycle of an applet?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is the difference between applications and applets?
What is multithreading and what are the methods for inter-thread communication and what is the class in which these methods are defined?
What is the difference between exception and error?
What is the difference between abstract class and interface?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is interface and its use?
What is difference between overloading and overriding?
What is final, finalize() and finally?
How many ways can an argument be passed to a subroutine and explain them?
What are methods and how are they defined?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Copyright ©2003-2013 CoolInterview.com, All Rights Reserved.
Privacy Policy | Terms and Conditions Download Yahoo Messenger | Placement Papers | FREE SMS | ASP .Net Tutorial | Web Hosting | Dedicated Servers | C Interview Questions &amp; Answers Testing Articles | Testing Books | Testing Certifications | Testing FAQs | Testing Downloads | Testing Interview Questions | Testing Jobs | Testing Training Institutes 0.03 Cache = 0 SecondsComputer Architecture and Design Interview Questions and Answers Bookmark Forum | Directory | Blog | Computer Architecture and Design Interview Questions and Answers » Computer Mobile Networking and Wireless Hardware Devices » Computer Architecture and Design Computer Architecture and Design questions updated at19 Jun 09 in Category Computer Hardware and visited52212 Times Select Question To View Answers   Download Computer Architecture Interview Questions And Answers PDF Computer Architecture Questions and Answers:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 1 :: What are the basic components in a Microprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1)address lines to refer to the address of a block 2)data lines for data transfer 3)IC chips 4 processing data Is This Answer Correct?    4 Yes 1 No 2 :: What is MESI?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The MESI protocol is also known as Illinois protocol due to its development at the University of Illinois at Urbana-Champaign and MESI is a widely used cache coherency and memory coherence protocol.
MESI is the most common protocol which supports write-back cache.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Its use in personal computers became widespread with the introduction of Intel's Pentium processor to &quot;support the more efficient write-back cache in addition to the write-through cache previously used by the Intel 486 processor&quot; Is This Answer Correct?    0 Yes 0 No 3 :: What are the different hazards?
How do you avoid them?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There are situations, called hazards, that prevent the next instruction in the instruction stream from executing during its designated clock cycle.
Hazards reduce the performance from the ideal speedup gained by pipelining.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There are three classes of Hazards: 1.
Structural Hazards: It arise from resource conflicts when the hardware cannot support all possible combinations of instructions simultaniously in ovelapped execution.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>2. Data Hazards: It arise when an instruction depends on the results of previous instruction in a way that is exposed by the ovelapping of instructions in the pipeline.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. Control Hazards: It arise from the pipelining of branches and other instructions that change the PC.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How to Avoid Hazards: 1.
Structural Hazard: This arise when some functional unit is not fully pipelined.
Then the sequence of instructions using that unpipelined unit cannot proceed at the rate of one one per clock cycle.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Another common way that it may appear is when some resources are not duplicated enough to allow all combination of instructional the pipeline to execute.
So by fully pipe lining the stages and duplicating resources will avoid structural pipeline.
Is This Answer Correct?    1 Yes 0 No 4 :: What is the pipelining?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A technique used in advanced microprocessors where the microprocessor begins executing a second instruction before the first has been completed.
That is, several instructions are in the pipeline simultaneously, each at a different processing stage.
Is This Answer Correct?    2 Yes 1 No 5 :: Cache Size is 64KB, Block size is 32B and the cache is Two-Way Set Associative.
For a 32-bit physical address, give the division between Block Offset, Index and Tag.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>64k/32 = 2000 blocks 2 way set assoc- 2000/2 = 1000 lines-&gt; 10 bits for index 32B block-&gt; 5 bits for block offset 32-10-5= 17 bits for tag Is This Answer Correct?    2 Yes 0 No « previous12 3 4 5 6 next » Select appropriate Question to view its more answers in this category of Computer Architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Do you find any Answer incorrect or incomplete?
Please e-mail us or place your comment and mention the number of question or if you have correct answer then open the appropriate question by clicking on question and then place your answer in comment regarding particular question in this category&quot;Computer Architecture and Design Interview Questions and Answers&quot; To ensure quality, each change is checked by our team, before it enters the main website database.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If you desire so, the changes will be credited to your name.
Subscribe your email to receive free updates:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Enter your email address and get free web tutorials, job hunting tips, career advices, job vacancies and interview questions updates directly delivered to your email inbox Hot Computer Architecture Frequently Asked Questions * ►Cache Size is 64KB, Block size is 32B and the cache is Two-Way Set Associative.
For a 32-bit physical address, give the division between Block Offset, Index and Tag.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>►What are the basic components in a Microprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>►What is MESI? ► What are the different hazards?
How do you avoid them?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>►What is the pipelining?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Hot Interview Categories in Computer Hardware * ►Basic Computer Frequently Asked Interview Questions and Answers ►A + (Plus) Hardware Frequently Asked Interview Questions and Answers ►Microprocessor Frequently Asked Interview Questions and Answers ►Electronics Frequently Asked Interview Questions and Answers ►Computer Architecture Frequently Asked Interview Questions and Answers Comments (On Computer Architecture and Design Interview Questions and Answers)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Your email is required but won't be published any where else.
Personal information will be kept confidential; we do not sell or release private information.
Webmaster Said:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Apr 16 2013 Your comments will be instantly published after webmaster review .
All visitors can submit their comments on Computer Architecture and Design Interview Questions and Answersno registration is required to post your comments.
You are welcome to share your ideas, experiences, suggestions questions and answers, butplease be respectful of others when commenting.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Insulting, self-promotional, website promotion, marketing, SEO Techniques, SMS-style and off-topic commentswill not be published.
Share your comments regarding Computer Architecture and Design Interview Questions and Answers Thank you.
Rate this Interview Question and Answer page by placing your comments here please...
Feel Free To Leave Your Comment Enter Your Name: [Required]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Email Address: [Required] (will not be published)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Enter Image Verification Code: [Must Required]
Entering this code helps stop the bad guys.     Comments: [Required]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Limit: HTML Tags are allowed Subscribe for newsletter/Feeds?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In order to link this page as Reference, click on below text area and pres (CTRL-C) to copy the code in clipboard or pres right click then copy the following lines after that past into your website or Blog.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Reference Link To This Page: (copy below code by (CTRL-C) and paste into your website or Blog) HTML Rendering of above code: [ Free Web Directory ] [ Global Web Forum ] [ Contact ] [ Links ] [ Site Map ] [ Statistics ] [ Services ] [ Privacy ]
Learn [ HTML ] [ XML ] [ JavaScript ] [ CSS ] [ SQL ]  Home                     Subscribe for email: Delivered by Feed Burner Copyright © 2005 -  2013 www.globalguideline.com All rights reserved.
(Best viewed in IE 9.0+ or Firefox 2.0+ at 1024 * 768 or higher) 1750 visitors are online now Please Like our Facebook Page!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Please give us a +1 !
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>iTunes - Books - Computer Architecture Interview Questions You'll Most Likely Be Asked by Vibrant Publishers * Apple * Store * Mac * iPod * iPhone * iPad * iTunes * Support Search * What’s New * What is iTunes * iTunes Charts Opening the iTunes Store.If iTunes doesn't open, click the iTunes application icon in your Dock or on your Windows desktop.Progress Indicator iTunes iTunes is the world's easiest way to organize and add to your digital media collection.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We are unable to find iTunes on your computer.
To download from the iTunes Store, get iTunes now.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Already have iTunes?
Click I Have iTunes to open it now.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>iTunes for Mac + PC Computer Architecture Interview Questions You'll Most Likely Be Asked by Vibrant Publishers View More By This Author This book is available for download on your iPhone, iPad, or iPod touch with iBooks and on your computer with iTunes.
Books must be read on an iOS device.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Description Computer Architecture Interview Questions You'll Most Likely Be Asked is a perfect companion to stand ahead above the rest in today’s competitive job market.
Rather than going through comprehensive, textbook-sized reference guides, this book includes only the information required immediately for job search to build an IT career.
This book puts the interviewee in the driver's seat and helps them steer their way to impress the interviewer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>a) 200 Computer Architecture Interview Questions, Answers and Proven Strategies for getting hired as an IT professional b) Dozens of examples to respond to interview questions c) 51 HR Questions with Answers and Proven strategies to give specific, impressive, answers that help nail the interviews d) 2 Aptitude Tests download available on www.vibrantpublishers.com View In iTunes * $9.99 * Available on iPhone, iPad, or iPod touch. * Category: Operating Systems * Published:Sep 06, 2011 * Publisher: Vibrant Publishers * Seller: Smashwords * Print Length: 62 Pages * Language: English * Requirements: This book requires iBooks 1.3.1 or later and iOS 4.3.3 or later.
Books can only be viewed using iBooks on an iPad, iPhone (3G or later), or iPod touch (2nd generation or later).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Customer Ratings We have not received enough ratings to display an average for this book.
More by Vibrant Publishers * * Cost Accounting &amp; Management Essentials You Always Wanted To Know * * Financial Accounting Essentials You Always Wanted To Know * * Data Structures &amp; Algorithms Interview Questions You'll Most Likely Be Asked * * jQuery Interview Questions You'll Most Likely Be Asked * * Core JAVA Interview Questions You'll Most Likely Be Asked Computer Architecture Interview Questions You'll Most Likely Be Asked is available for download from the iBookstore iBooks is an amazing way to download and read books on iPhone, iPad, or iPod touch.
You can download iBooks from the App Store.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get iBooks Learn More About iBooks Computer Architecture Interview Questions You'll Most Likely Be Asked is available for download from the iBookstore iBooks is an amazing way to download and read books on iPhone, iPad, or iPod touch.
You can download iBooks from the App Store.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get iBooks Learn More About iBooks Become a fan of the iTunes and App Store pages on Facebook for exclusive offers, the inside scoop on new apps and more.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Home * iTunes iTunes * Download iTunes * What’s New?
* What is iTunes?
* iTunes Charts More iTunes * Digital Music Basics * iTunes Gifts * iTunes U * iPod + iTunes Support * AirPlay * Accessibility Working with iTunes * Sell Your Content * Content Providers * Market with iTunes * Join the Affiliate Program * Link to iTunes iTunes Store * Browse iTunes Store * Browse App Store * Buy Music Now * Buy iTunes Gift Cards * Redeem iTunes Gift Cards * iTunes Corporate Sales * Free Single of the Week * Inside iTunes Shop the Apple Online Store (1-800-MY-APPLE), visit an Apple Retail Store , or find a reseller .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Apple Info * Site Map * Hot News * RSS Feeds * Contact Us * Copyright © 2013 Apple Inc.
All rights reserved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Terms of Use * Privacy Policy Hardware Interview Questions and Jobs * search jobs * search resumes * tech interviews * job seekers * employers Hardware Interview Questions x86 interview questions These interview questions test the knowledge of x86 Intel architecture and 8086 microprocessor specifically.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is a Microprocessor? - Microprocessor is a program-controlled device, which fetches the instructions from memory, decodes and executes the instructions.
Most Micro Processor are single- chip devices. * Give examples for 8 / 16 / 32 bit Microprocessor? - 8-bit Processor - 8085 / Z80 / 6800; 16-bit Processor - 8086 / 68000 / Z8000; 32-bit Processor - 80386 / 80486. * Why 8085 processor is called an 8 bit processor? - Because 8085 processor has 8 bit ALU (Arithmetic Logic Review).
Similarly 8086 processor has 16 bit ALU. * What is 1st / 2nd / 3rd / 4th generation processor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- The processor made of PMOS / NMOS / HMOS / HCMOS technology is called 1st / 2nd / 3rd / 4th generation processor, and it is made up of 4 / 8 / 16 / 32 bits. * Define HCMOS?
- High-density n- type Complimentary Metal Oxide Silicon field effect transistor. * What does microprocessor speed depend on?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- The processing speed depends on DATA BUS WIDTH. * Is the address bus unidirectional?
- The address bus is unidirectional because the address information is always given by the Micro Processor to address a memory location of an input / output devices. * Is the data bus is Bi-directional?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- The data bus is Bi-directional because the same bus is used for transfer of data between Micro Processor and memory or input / output devices in both the direction. * What is the disadvantage of microprocessor?
- It has limitations on the size of data.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Most Microprocessor does not support floating-point operations. * What is the difference between microprocessor and microcontroller? - In Microprocessor more op-codes, few bit handling instructions.
But in Microcontroller: fewer op-codes, more bit handling Instructions, and also it is defined as a device that includes micro processor, memory, &amp; input / output signal lines on a single chip. * What is meant by LATCH? - Latch is a D- type flip-flop used as a temporary storage device controlled by a timing signal, which can store 0 or 1.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The primary function of a Latch is data storage.
It is used in output devices such as LED, to hold the data for display. * Why does microprocessor contain ROM chips? - Microprocessor contain ROM chip because it contain instructions to execute data. * What is the difference between primary &amp; secondary storage device? - In primary storage device the storage capacity is limited.
It has a volatile memory.
In secondary storage device the storage capacity is larger.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It is a nonvolatile memory.
Primary devices are: RAM / ROM.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Secondary devices are: Floppy disc / Hard disk. * Difference between static and dynamic RAM? - Static RAM: No refreshing, 6 to 8 MOS transistors are required to form one memory cell, Information stored as voltage level in a flip flop.
Dynamic RAM: Refreshed periodically, 3 to 4 transistors are required to form one memory cell, Information is stored as a charge in the gate to substrate capacitance. * What is interrupt? - Interrupt is a signal send by external device to the processor so as to request the processor to perform a particular work. * What is cache memory? - Cache memory is a small high-speed memory.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It is used for temporary storage of data &amp; information between the main memory and the CPU (center processing unit).
The cache memory is only in RAM. * What is called .Scratch pad of computer.? - Cache Memory is scratch pad of computer. * Which transistor is used in each cell of EPROM? - Floating .gate Avalanche Injection MOS (FAMOS) transistor is used in each cell of EPROM. * Differentiate between RAM and ROM? - RAM: Read / Write memory, High Speed, Volatile Memory.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>ROM: Read only memory, Low Speed, Non Voliate Memory. * What is a compiler? - Compiler is used to translate the high-level language program into machine code at a time.
It doesn.t require special instruction to store in a memory, it stores automatically.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Execution time is less compared to Interpreter. * Which processor structure is pipelined?
- All x86 processors have pipelined structure. * What is flag?
- Flag is a flip-flop used to store the information about the status of a processor and the status of the instruction executed most recently * What is stack?
- Stack is a portion of RAM used for saving the content of Program Counter and general purpose registers. * Can ROM be used as stack?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>- ROM cannot be used as stack because it is not possible to write to ROM. * What is NV-RAM?
- Nonvolatile Read Write Memory, also called Flash memory.
It is also know as shadow RAM. &lt;s&gt;Back to Top Intel interview questions The following questions are used for screening the candidates during the first interview.
The questions apply mostly to fresh college grads pursuing an engineering career at Intel.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Have you studied buses?
What types? * Have you studied pipelining?
List the 5 stages of a 5 stage pipeline.
Assuming 1 clock per stage, what is the latency of an instruction in a 5 stage machine?
What is the throughput of this machine ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* How many bit combinations are there in a byte?
* For a single computer processor computer system, what is the purpose of a processor cache and describe its operation?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Explain the operation considering a two processor computer system with a cache for each processor. * What are the main issues associated with multiprocessor caches and how might you solve them?
* Explain the difference between write through and write back cache. * Are you familiar with the term MESI?
* Are you familiar with the term snooping?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Describe a finite state machine that will detect three consecutive coin tosses (of one coin) that results in heads. * In what cases do you need to double clock a signal before presenting it to a synchronous state machine?
* You have a driver that drives a long signal &amp; connects to an input device.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>At the input device there is either overshoot, undershoot or signal threshold violations, what can be done to correct this problem? * What are the total number of lines written by you in C/C++?
What is the most complicated/valuable program written in C/C++? * What compiler was used? * What is the difference between = and == in C? * Are you familiar with VHDL and/or Verilog? * What types of CMOS memories have you designed?
What were their size?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Speed? * What work have you done on full chip Clock and Power distribution?
What process technology and budgets were used? * What types of I/O have you designed?
What were their size?
Speed?
Configuration?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Voltage requirements? * Process technology?
What package was used and how did you model the package/system?
What parasitic effects were considered? * What types of high speed CMOS circuits have you designed? * What transistor level design tools are you proficient with?
What types of designs were they used on? * What products have you designed which have entered high volume production? * What was your role in the silicon evaluation/product ramp?
What tools did you use?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* If not into production, how far did you follow the design and why did not you see it into production?
&lt;s&gt;Back to Top Read more at TechInterviews.com Embedded systems interview questions * Can structures be passed to the functions by value?
* Why cannot arrays be passed by values to functions?
* Advantages and disadvantages of using macro and inline functions?
* What happens when recursion functions are declared inline?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Scope of static variables?
* Difference between object oriented and object based languages?
* Multiple inheritance - objects contain howmany multiply inherited ancestor?
* What are the 4 different types of inheritance relationship?
* How would you find out the no of instance of a class?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Is java a pure object oriented language?
Why? * Order of constructor and destructor call in case of multiple inheritance? * Can u have inline virtual functions in a class? * When you inherit a class using private keyword which members of base class are visible to the derived class? * What is the output of printf(&quot;\nab\bcd\ref&quot;); -&gt; ef * #define cat(x,y) x##y concatenates x to y.
But cat(cat(1,2),3) does not expand but gives preprocessor warning.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Why? * Can you have constant volatile variable?
Yes, you can have a volatile pointer?
* ++*ip increments what?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>it increments what ip points to * Operations involving unsigned and signed — unsigned will be converted to signed * a+++b -&gt; (a++)+b * malloc(sizeof(0)) will return — valid pointer * main() {fork();fork();fork();printf(&quot;hello world&quot;); } — will print 8 times. * Array of pts to functions — void (*fptr[10])() * Which way of writing infinite loops is more efficient than others?
there are 3ways. * # error — what it does?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* How is function itoa() written?
* Who to know wether systemuses big endian or little endian format and how to convert among them?
* What is interrupt latency?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is forward reference w.r.t. pointers in c?
* How is generic list manipulation function written which accepts elements of any kind?
* What is the difference between hard real-time and soft real-time OS?
* What is interrupt latency?
How can you recuce it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What is the differnce between embedded systems and the system in which rtos is running?
* How can you define a structure with bit field members?
* What are the features different in pSOS and vxWorks?
* How do you write a function which takes 2 arguments - a byte and a field in the byte and returns the value of the field in that byte?
* What are the different storage classes in C?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What are the different qualifiers in C?
* What are the different BSD and SVR4 communication mechanisms &lt;s&gt;Back to Top Computer architecture and design interview questions * What is pipelining?
* What are the five stages in a DLX pipeline?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* For a pipeline with ‘n’ stages, what’s the ideal throughput?
What prevents us from achieving this ideal throughput? * What are the different hazards?
How do you avoid them? * Instead of just 5-8 pipe stages why not have, say, a pipeline with 50 pipe stages? * What are Branch Prediction and Branch Target Buffers? * How do you handle precise exceptions or interrupts? * What is a cache? * What’s the difference between Write-Through and Write-Back Caches?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Explain advantages and disadvantages of each. * Cache Size is 64KB, Block size is 32B and the cache is Two-Way Set Associative.
For a 32-bit physical address, give the division between Block Offset, Index and Tag. * What is Virtual Memory?
* What is Cache Coherency?
* What is MESI?
* What is a Snooping cache?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* What are the components in a Microprocessor?
* What is ACBF(Hex) divided by 16?
* Convert 65(Hex) to Binary * Convert a number to its two’s compliment and back * The CPU is busy but you want to stop and do some other task.
How do you do it?
Hardware design interview questions * Give two ways of converting a two input NAND gate to an inverter * Given a circuit, draw its exact timing response.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(I was given a Pseudo Random Signal Generator; you can expect any sequential ckt) * What are set up time &amp; hold time constraints?
What do they signify?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Which one is critical for estimating maximum clock frequency of a circuit? * Give a circuit to divide frequency of clock cycle by two * Design a divide-by-3 sequential circuit with 50% duty circle.
(Hint: Double the Clock) * Suppose you have a combinational circuit between two registers driven by a clock.
What will you do if the delay of the combinational circuit is greater than your clock signal?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(You can’t resize the combinational circuit transistors) * The answer to the above question is breaking the combinational circuit and pipelining it.
What will be affected if you do this? * What are the different Adder circuits you studied? * Give the truth table for a Half Adder.
Give a gate level implementation of the same. * Draw a Transmission Gate-based D-Latch. * Design a Transmission Gate based XOR.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Now, how do you convert it to XNOR?
(Without inverting the output) * How do you detect if two 8-bit signals are same? * How do you detect a sequence of &quot;1101&quot; arriving serially from a signal line? * Design any FSM in VHDL or Verilog. * Explain RC circuit.s charging and discharging. * Explain the working of a binary counter. * Describe how you would reverse a singly linked list.
Read more at TechInterviews.com Looking for Hardware Technologies jobs?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Browse Hardware jobs » * Browse telecommute Hardware jobs » * Get Hardware jobs by email » ©2003-2012 Dev Bistro · About Us Computer Architecture Interview Questions | Glassdoor * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United States * Australia * Canada * India * United Kingdom Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look at computer architecture interview questions and reviews.
All interview questions posted anonymously by employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer Architecture Interview Questions (Posted anonymously by job candidates)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>0 Interview Questions: Search Suggestions * Try more general keywords ('engineer' rather than 'systems engineer') * Check your spelling * Replace abbreviations with the entire word ('accountant' rather than 'CPA') You might also be interested in: Interview Questions Interviews by Company * Microsoft Interview * Apple Interview * Amazon.com Interview * Accenture Interview * Booz Allen Hamilton Interview Jobs by Title * Software Engineer Jobs * Manager Jobs * Project Manager Jobs * Senior Software Engineer Jobs * Consultant Jobs * Senior Consultant Jobs * Analyst Jobs * Associate Jobs * Director Jobs * Intern Jobs * Engineer Jobs * Business Analyst Jobs * Vice President Jobs * Product Manager Jobs * Program Manager Jobs Sorry, you need an account to use this feature.Sign In with Facebook or Sign Up Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
All Rights Reserved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give other employees and job seekers your view from the inside Simply post an anonymous review for a recent interview experience or current/former employer.
Your post is anonymous – and if you're worried someone will be able to identify your review, you can even post without telling us your job title and location.Learn More .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Review No thanks –I'll just look around Computer Architecture Interview Questions | KyaPoocha.com KyaPoocha.com Huge Collection of Interview Questions Skip to content * Home * About * Contact * Privacy Policy * Subscribe Category Archives:Computer Architecture Interview Questions Computer Architecture Interview Questions ← Older posts Can you explain singleton pattern?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment There are situations in a project where we want only one instance of the object to be created and shared between the clients.
No client can create an instance of the object from outside.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There is only one instance of the class which is shared across the clients.
Below are the steps to make a singleton pattern:- 1) Define the constructor as private.
2) Define the instances and methods as static → Leave a comment Posted in Computer Architecture Interview Questions Can you explain shallow copy and deep copy in prototype patterns?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment There are two types of cloning for prototype patterns.
One is the shallow cloning which you have just read in the first question.
In shallow copy only that object is cloned, any objects containing in that object is not cloned.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For instance consider the figure ‘Deep cloning in action’ we have a customer class and we have an address class aggregated inside the customer class. ‘MemberWiseClone’ will only clone the customer class ‘ClsCustomer’ but not the ‘ClsAddress’ class.
So we added the ‘MemberWiseClone’ function in the address class also.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Now when we call the ‘getClone’ function we call the parent cloning function and also the child cloning function, which leads to cloning of the complete object.
When the parent objects are cloned with their containing objects it’s called as deep cloning and when only the parent is clones its termed as shallow cloning.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions Can you explain prototype pattern?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Prototype pattern falls in the section of creational pattern.
It gives us a way to create new objects from the existing instance of the object.
In one sentence we clone the existing object with its data.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By cloning any changes to the cloned object does not affect the original object value.
If you are thinking by just setting objects we can get a clone then you have mistaken it.
By setting one object to other object we set the reference of object BYREF.
So changing the new object also changed the original object.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions Can you explain builder pattern?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Builder falls under the type of creational pattern category.
Builder pattern helps us to separate the construction of a complex object from its representation so that the same construction process can create different representations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Builder pattern is useful when the construction of the object is very complex.
The main objective is to separate the construction of objects and their representations.
If we are able to separate the construction and representation, we can then get many representations from the same construction.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions Can you explain abstract factory pattern?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Abstract factory expands on the basic factory pattern.
Abstract factory helps us to unite similar factory pattern classes in to one unified interface.
So basically all the common factory patterns now inherit from a common abstract factory class which unifies them in a common class.
All other things related to factory pattern remain same as discussed in the previous question.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions What are design patterns?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Design patterns are documented tried and tested solutions for recurring problems in a given context.
So basically you have a problem context and the proposed solution for the same.
Design patterns existed in some or other form right from the inception stage of software development.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Let’s say if you want to implement a sorting algorithm the first thing comes to mind is bubble sort.
So the problem is sorting and solution is bubble sort.
Same holds true for design patterns → Leave a comment Posted in Computer Architecture Interview Questions For a pipeline with ?n? stages, what?s the ideal throughput?
What prevents us from achieving this ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment With “n&quot; stage pipeline the throughput should be “n&quot; instructions.
As the pipe stages can’t be perfectly balanced ( time to perform task in a pipeline stage), furthermore pipeline does involve some overheads.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions Cache Size is 64KB, Block size is 32B and the cache is Two-Way Set Associative.
For a 32-bit physical address, give the division between Block Offset, Index and Tag.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment 64k/32 = 2000 blocks 2 way set assoc- 2000/2 = 1000 lines-&gt; 10 bits for index 32B block-&gt; 5 bits for block offset 32-10-5= 17 bits for tag → Leave a comment Posted in Computer Architecture Interview Questions How do you handle precise exceptions or interrupts?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Like java have a feature for handling exception handling “prime catch&quot;.the exception like divide by zero,out of bound.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions The CPU is busy but you want to stop and do some other task.
How do you do it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Arise a non maskable interrupt.
Then give jump instruction to required subroutine.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions what is the difference between interrupt service routine and subroutine ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Subroutine are the part of executing processes(like any process can call a subroutine for achieve task),while the interrupt subroutine never be the part.interrupt subroutine are subroutine that are external to a process.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions For a pipeline with ?n? stages, what?s the ideal throughput?
What prevents us from achieving this ideal throughput?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment With “n&quot; stage pipeline the throughput should be “n&quot; instructions.
As the pipe stages can’t be perfectly balanced ( time to perform task in a pipeline stage), furthermore pipeline does involve some overheads.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions What is a Snooping cache?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment Snooping Cache is the CACHE CONTROLLER hardware which is used to overcome the problem of “CACHE COHERENCY&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>→ Leave a comment Posted in Computer Architecture Interview Questions What are the components in a Microprocessor?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Posted on November 26, 2008 by vivek | Leave a comment its a general purpose register. its components are one processor along with external ROM, RAM, etc → Leave a comment Posted in Computer Architecture Interview Questions Convert a number to its two?
s compliment and back Posted on November 26, 2008 by vivek | Leave a comment say for example 5 is a decimal no converts it into binary format is 0101 base 2 invert this binary value 1010 add 1 with this ans we will get 2′s complement of this given no is 1011 → Leave a comment Posted in Computer Architecture Interview Questions ← Older posts * Interview Questions * Accounts Payable Interview Questions (25) * ACLS BLS Certification (5) * Administrative Interview Questions (35) * Airline Interview Questions (21) * AJAX Interview Questions (202) * ASP.Net Interview Questions (322) * Baby Sitter Interview Questions (12) * Bank Interview Questions (50) * Basic Interview Questions (26) * BlueTooth Interview Questions (177) * Bookkeeper Interview Questions (42) * C# Interview Questions (155) * C/C++ Interview Questions (210) * Call Center Interview Questions (68) * Citizenship Interview Questions (23) * Cobol Interview Questions (167) * Computer Architecture Interview Questions (151) * Computer Networks Interview Questions (160) * Consulting Interview Questions (33) * CSS Interview Questions (171) * Customer Service Interview Questions (28) * Data Structure Interview Questions (151) * Data WareHousing Interview Questions (152) * Database Interview Questions (421) * EJB Interview Questions (200) * Financial Interview Questions (130) * Google &amp; Microsoft Interview Questions (190) * Hospitality Interview Questions (16) * HR Interview Questions (173) * HTML (155) * Interview Questions for Employers (11) * Interview Tips (169) * Investment Banking Interview Questions (11) * J2EE Interview Questions (249) * J2ME Interview Questions (171) * Java Interview Questions (485) * JavaScript (167) * JMS Interview Questions (154) * JSP Interview Questions (155) * Linux Interview Questions (176) * MCSE Interview Questions (13) * Medical Interview Questions (16) * Microprocessors Interview Questions (162) * Nanny Interview Questions (14) * Networking Interview Questions (204) * Nursing Interview Questions (35) * Object Oriented Interview Questions (169) * Operating System Interview Questions (154) * Oracle Interview Questions (187) * Other Interview Questions (169) * Payroll Interview Questions (10) * PeopleSoft Interview Questions (164) * Pharmaceutical Interview Questions (10) * PHP Interview Questions (158) * Police Interview Questions (10) * Police Officer Interview Questions (10) * Private Equity Interview Questions (12) * Puzzles (152) * Questions to Ask during an HR Interview (161) * Retail Interview Questions (12) * Sales Interview Questions (10) * SAP-ABAP Interview Questions (227) * Secretary Interview Questions (11) * Siebel Interview Questions (172) * Software Testing (177) * SQL Interview Questions (314) * Struts Interview Questions (248) * System Integration Interview Questions (173) * Teacher Interview Questions (10) * Teaching Assistant Interview Questions (11) * Team Leader Interview Questions (13) * Telephone Interview Questions (24) * TIBCO Interview Questions (14) * University Interview Questions (12) * UNIX Interview Questions (184) * VB.NET Interview Questions (154) * VBScript Interview Questions (162) * Visual Basic Interview Questions (144) * XML Interview Questions (188) Theme: Coraline by Automattic .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Proudly powered by WordPress.
AMD - Mostly technical questions related to computer architecture, vlsi, and digital design. nothing very unexpected but need to know the basics very well. | Glassdoor.com.au * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * Australia * Canada * India * United Kingdom * United States Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look atAMD interview questions and advice.
All interview reviews are posted anonymously byAMD employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.0 831 AMD 3.0 831 reviews www.amd.com Sunnyvale, CA 5000+ Employees Work in HR?
Claim Profile Share an Interview Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections 65 interview experiences Back to all AMD Interview Questions &amp; Reviews Interview Question for Co-op at AMD: Apr 04, 2013 0 of 0 people found this helpful Mostly technical questions related to computer architecture, vlsi, and digital design. nothing very unexpected but need to know the basics very well.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Tags:   See more ,   See less 8 Add Tags [?]
See more for this AMD Co-op Interview Helpful Question?   Yes | No Inappropriate?
Answers &amp; Comments (0)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To comment on this question, Sign In with Facebook or Sign Up You might also be interested in: Interview Questions , Co-op Interview Questions ,AMD Interview Interviews by Company * Monash Interview * Coles Group Interview * Cotton On Interview * University of Sydney Interview * Subway Interview * Commonwealth Bank of Australia Interview * ThoughtWorks Interview * Macquarie Group Interview * BP Interview * Optus Interview * CBA Interview * Goldman Sachs Interview * AECOM Interview * Bunnings Warehouse Interview * Madison Tyler Holdings Interview Salaries by Company * ACT Public Service Salaries * ACT Auditor-General's Office Salaries * ACT Public Service Health Directorate Salaries * ACT Public Service Justice and Community Safety Directorate Salaries * ACT Public Service Treasury Directorate Salaries * Cultural Facilities Corp.
Salaries * Spinecare Chiropractic Castle Plaza Salaries * Yamatji Marlpa Aboriginal Salaries * RTW Steel Fabrication &amp; Construction Salaries * Schindler Lifts Australia Salaries * Vital Services Group Salaries * Thai Airways Salaries * Southgate Electrics Salaries * Total Security Concepts Salaries * Westcoast Electrics Salaries Tags are like keywords, helping to categorise interview questions that have something in common.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, you need an account to use this feature.
Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team, and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Out of Here * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>::::IT-Interview Questions::::
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>know the personalities hold your mouse,move left and right * Home * University Symposiums * College Symposiums * Engineering College Symposiums * Medical College Symposiums * Management College Symposiums * Arts and Science College Symposiums * Other College Symposiums * IIT Symposiums * IIT-MADRAS * IIT-DELHI * IIT-BOMBAY * IIT-KANPUR * IIT-GUWAHATI * IIT-ROORKEE * IIT-KHARAGPUR * IISC-BANGALORE * IIM Symposiums * IIM-AHMEDABAD * IIM-BANGALORE * IIM-KOZHIKODE * IIM-CALCUTTA * IIM-INDORE * IIM-LUCKNOW * IIM-SHILLONG * IIIT Symposiums * IIIT-PUNE * IIIT-BANGALORE * IIIT-HYDERABAD * IIIT-DELHI * IIITM-GWALIOR * IIIT-ALLAHABAD * IIITM-KERALA * IIITM-BHUBANESWAR * NIT Symposiums * Gallery * Photo gallery * Video gallery Free Downloading of IT Interview Questions Training Info Admissions Info Courses Info Scholarships Info GATE Info UPSC Info Job Info Materials Info INTERVIEW QUESTIONS Name Of Study Material Free down load SSC COMBINED GRADUATE LEVEL TIER-1 FIRST SHIFT SOLVED PAPER Get Material SSC COMBINED GRADUATE LEVEL TIER-1 SECOND SHIFT SOLVED PAPER Get Material R.S.AGARWAL QUANTITATIVE APTITUDE &amp; DATA INTERPRETATION PART-1 Get Material R.S.AGARWAL QUANTITATIVE APTITUDE &amp; DATA INTERPRETATION PART-2 Get Material NUMERICAL APTITUDE BOOK Get Material RS AGGARWAL VERBAL REASONING BOOK Get Material LOGICAL REASONING BOOK Get Material GK Get Material BANK PO PREVIOUS EXAM PAPERS Get Material SBI &amp; SBI RURAL BUSINESS PO EXAM Get Material SBI ASSOCIATE BANKS PO EXAM 2010 Get Material PUNJAB NATIONAL BANK CLERKS EXAM Get Material SSC TAX ASSISTANTS EXAM 2010 Get Material ALLAHABAD BANK CLERKS EXAM 2010 Get Material BANK OF INDIA OFFICERS EXAM 2010 Get Material BANK OF INDIA CLERKS EXAM 2009 Get Material INDIAN BANK PO EXAM 2010 Get Material UNION BANK OF INDIA CLERKS EXAM 2010 Get Material RRB PARA MEDICAL EXAM QUESTIONS Get Material RRB TRAFFIC APPRENTICE EXAM 2009 Get Material RRB COMMERCIAL APPRENTICE EXAM PREVIOUS PAPER Get Material RRB ALLAHABAD SIGNAL/ESM EXAM PREVIOUS PAPER Get Material RRB ELECTRICAL SIGNAL MAINTAINER EXAM 2009 PAPER Get Material SSC GENERAL AWARENESS QUESTIONS Get Material SSC GENERAL INTELLIGENCE QUESTIONS Get Material SSC ARITHMETICS QUESTIONS Get Material JUNIOR TELECOM OFFICERS MODEL PAPER Get Material CTS Placement Papers Get Material HCL Placement Papers Get Material HONEYWELL Placement Papers Get Material IGATE Placement Papers Get Material INFOSYS Placement Papers Get Material KEANE Placement Papers Get Material L&amp;T Placement Papers Get Material POLARIS Placement Papers Get Material TCS Placement Papers Get Material TECH-MAHINDRA Placement Papers Get Material Satyam Placement Papers Get Material L&amp;T infotech Placement Papers Get Material IBM Placement Papers Get Material Infosys Placement Papers Get Material SQL course materials Get Material Aptitude course materials Get Material SQL-PART-I Course Materials Get Material SQL-PART-II Get Material ASP.NET MATERIALS Get Material .NET Interview Questions Get Material SQL-PART III Get Material SQL SERVER QUESTION Get Material C# INTERVIEW QUESTIONS Get Material Mobile Computing PPTs Get Material Digital Systems- Principles and Design PPTs Get Material Electronic Devices PPTs Get Material Embedded Systems PPTs Get Material Microcontroller PPTs Get Material Computer Architecture PPTs Get Material Programming With C Notes Get Material C Programming-Notes Part II Get Material Programming With C-Notes Part III Get Material C++ Notes Get Material C++ Notes-Part I Get Material C Example Programming Get Material Example Programming C++ Get Material Marketing Notes Get Material Aptitude Questions-Free Download Get Material Numeric Aptitude Questions-Free Download Get Material EPSON Aptitiude Question Paper Get Material Verbal Reasoning Questions Get Material Verbal aptitute questions Get Material Numeric Aptitute Questions Get Material Computer Aptitute Questions Get Material C Programming Aptitute Questions Get Material C Aptitute Questions-Part II Get Material C++ Aptitute Questions Get Material &lt;http://www.technicalsymposium.com/C++ Aptitute Questions.html&gt; C++ Aptitute Questions-Part II Get Material C++ Guide Get Material Data structure-Notes and Questions Get Material DBMS Interview Questions Get Material Java Aptitute Questions Get Material Microprocessor Aptitute Questions Get Material Numeric Aptitute Questions-Part III Get Material Verbal Reasoning Questions-Part II Get Material C Plus Plus Important question.
Get Material OOPS Concepts Get Material COMPUTER ARCHITECTURE- TWO MARK QUESTIONS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Web Mining Notes Get Material Database Management Systems-Two Mark Questions.
Get Material Microprocessors Short Answers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Microprocessor Notes.
Get Material Microprocessor 80386 Lecture Notes.
Get Material Microprocessor Interfacing With Memories- Lecture Notes Get Material The Architecture Of Pentium Microprocessor- Lecture Notes Get Material MICROPROCESSOR-8086 ARCHITECTURE LECTURE NOTES.
Get Material MICROPROCESSOR 8086 PINS and SIGNALS.
Get Material MICROPROCESSOR-8086 PROGRAMMED INPUT OUTPUT NOTES Get Material MICROPROCESSOR-MINIMUM MODE CONFIGURATION.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material MICROPROCESSOR SYSTEM BUS TIMING LECTURE NOTES Get Material MICROPROCESSOR-80186 NOTES.
Get Material MICROPROCESSOR-80286 NOTES.
Get Material MICROPROCESSOR 80486 NOTES.
Get Material MICROPROCESSOR Instruction Set of Intel 8085 NOTES.
Get Material Cascading Style Sheets-Notes Get Material Enterprise Applications Notes Get Material JavaScript Notes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Java RMI Notes.
Get Material JDBC NOTES Get Material Multicasting in Java Get Material Internet Addressing Notes.
Get Material RMI Outline Notes.
Get Material TCP-IP Notes.
Get Material Computer Networks Question Bank.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Network Two Mark Answers.
Get Material NETWORK PROGRAMMING IN JAVA-NOTES.
Get Material OBJECT ORIENTED ANALYSIS AND DESIGN-TWO MARKS.
Get Material OBJECT ORIENTED ANALYSIS AND DESIGN-FULL NOTES.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material OBJECT ORIENTED ANALYSIS-OBJECT NOTES.
Get Material CLIENT SERVER COMPUTING-NOTES.
Get Material FOUNDATION CLASS LIBRARY REQIREMENTS-NOTES.
Get Material OBJECT ORIENTED DATA BASES-NOTES.
Get Material OPERATING SYSTEM TWO MARKS - QUESTION AND ANSWERS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Historical data analysis techniques-Notes.
Get Material SYSTEM ANALYSIS AND DESIGN-Notes.
Get Material SYSTEM ANALYSIS AND DESIGN-Full Notes.
Get Material SYSTEM ANALYSIS AND DESIGN-Tools Of Analysis.
Get Material SOFTWARE ENGINEERING-TWO MARKS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material System Software-Two Marks.
Get Material System Software Big Questions.
Get Material SYSTEM SOFTWARE FULL NOTES.
Get Material UNIX-NOTES Get Material VISUAL C -Two Marks Get Material C PLUS PLUS TWO MARKS-PART I. Get Material C_PLUS_PLUS_TWO_MARKS_PART_I Get Material OPERATING SYSTEM-TWO MARKS PART I. Get Material DATABASE MANAGEMENT NOTES-PART I. Get Material DATABASE MANAGEMENT NOTES-PART II.
Get Material DATABASE MANAGEMENT NOTES-PART III.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Middleware Technologies-Notes.
Get Material A NOTES ON CLIENT IN MIDDLEWARE.
Get Material Middleware Technologies-Two Marks Question and Answers.
Get Material DATA BASE MANAGEMENT-LAB Notes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Internet Programming Lab Notes.
Get Material UNIX-FILE INPUT OUTPUT NOTES.
Get Material Relational Database management system-Questions.
Get Material Semaphore in UNIX Notes.
Get Material Middleware Technologies Questions-Part I. Get Material EJB ARCHITECTURE NOTES.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material UNIX NETWORK PROGRAMMING-TWO MARKS.
Get Material UNIX COMMANDS.
Get Material Aptitude Ablity-Notes-Part-I Get Material Aptitude Ablity-Notes-Part-II.
Get Material Aptitude Ablity-Notes-Part III.
Get Material Aptitude Ablity-Notes-Part IV.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material C Tech Questions.
Get Material All subjects aptitude Notes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material HCL Interview Question Papers Get Material TNPSC GROUP II Question Papers Get Material TNPSC GROUP IV Question Papers Get Material TCS Interview Question Papers Get Material CTS Interview Question Papers Get Material accenture Question paper Get Material HUAWEI Question papers Get Material Dell Interview Questions Get Material Vocabulary Questions Get Material AptitudeTest Questions Get Material Caritor Interview Questions Get Material Solved Paper General Intelligence (RRB) Get Material Numerical Aptitude Questions Get Material HCL Interview Questions Get Material SCJP Questions Get Material Aptitute Questions-Free Download Get Material Numeric Aptitute Questions-Free Download Get Material EPSON Aptitiute Question Paper Get Material Verbal Reasoning Questions Get Material Verbal aptitute questions Get Material Numeric Aptitute Questions Get Material Computer Aptitute Questions Get Material C Programming Aptitute Questions Get Material C Aptitute Questions-Part II Get Material C++ Aptitute Questions Get Material &lt;http://www.technicalsymposium.com/C++ Aptitute Questions.html&gt; C++ Aptitute Questions-Part II Get Material C++ Guide Get Material Data structure-Notes and Questions Get Material DBMS Interview Questions Get Material Java Aptitute Questions Get Material Microprocessor Aptitute Questions Get Material Numeric Aptitute Questions-Part III Get Material Verbal Reasoning Questions-Part II Get Material Important Core Java Interview Questions Get Material Java Interview Questions Get Material C Plus Plus Important question.
Get Material OOPS Concepts Get Material Database Management Systems-Questions.
Get Material JavaScript Hints Notes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Computer Networks Question Bank.
Get Material OPERATING SYSTEM-QUESTION AND ANSWERS.
Get Material SOFTWARE ENGINEERING-Questions.
Get Material UNIX-Hints Get Material C PLUS PLUS-Hints Get Material UNIX COMMANDS.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Aptitude Ablity-Notes-Part-I Get Material Aptitude Ablity-Notes-Part-II.
Get Material Aptitude Ablity-Notes-Part III.
Get Material Aptitude Ablity-Notes-Part IV.
Get Material C Tech Questions.
Get Material All subjects aptitude Notes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get Material Technicalsymposium.com - Stop Searching Here-Get All Our Contents Just in One Click Job Announcements Chennai Software Companies-HR Email id Bangalore Software Companies Details-Part-I Bangalore Software Companies Details-Part-I View all Government and Software Jobs Scholarships Details Intern Required at Intel Engineering Internship at Intel Engineering Internship at Intel View all Scholarships and internships Premier Institutions Admission Procedures IIT Admission Procedures NIT Admission Procedures IIM,IIIT,IISC Admission Procedures View all Premier Institutions Admission Procedures All Departments Lecture Notes BE(CSE) Lecture Notes BE(ECE) Lecture Notes BE(Mech) Lecture Notes View all Departments Lecture Notes Automobile Engineering-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Bio-Medical-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Biotechnology-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Civil Engineering-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Computer Science Engineering-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes ECE-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes EEE-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Information technology-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes MBA-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes MCA-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Mech Engineering-Lecture Notes III Sem Lecture Notes V Sem Lecture Notes VII Sem Lecture Notes View all Departments Lecture Notes Indian Economic Service-Question Papers 2010 Questions 2010 Questions 2010 Questions View all Economic Service-Question Papers GATE-Question Papers 2011 GATE-Question Papers 2010 GATE-Question Papers 2009 GATE-Question Papers View all GATE-Question Papers IES-Question Papers 2010 IES-Question Papers 2010 IES-Question Papers 2010 IES-Question Papers View all IES-Question Papers JAM-Question Papers 2011-Question Papers 2010-Question Papers 2009-Question Papers View all JAM-Question Papers UPSC-Main Question Papers 2010 UPSC-Main Question Papers 2009 UPSC-Main Question Papers 2008 UPSC-Main Question Papers View all UPSC-Main Question Papers UPSC-Prelims Question Papers 2010 UPSC-Prelims Question Papers 2009 UPSC-Prelims Question Papers 2008 UPSC-Prelims Question Papers View all UPSC-Main Question Papers Free Computer Lab Codings C Program For ARRAY REVERSE.
C Program For ASCII VALUE.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>C Program For BINARY SEARCH.
View all Free Computer Lab Codings Free Semester study Materials COMPUTER ARCHITECTURE- TWO MARKS Computer Networks Question Bank.
C Plus Plus Important question.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View all study Materials &amp; Lecture Notes Anna University Syllabus-I-IV Semester Common Syllabus- SEMESTER I Common Syllabus- SEMESTER II B.E CIVIL ENGINEERING View all Branches Syllabus in Anna University Anna University Syllabus-V-VIII Semester B.E. CIVIL B.E. CSE B.E. ECE View all Branches Syllabus in Anna University Anna University Syllabus-ME,MCA All Semester M.E. CAD / CAM M.C.A.
M.E.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>APPLIED ELECTRONICS View all Branches Syllabus in Anna University Entrance Exam Syllabus Gate Syllabus-Aerospace Engineering Gate Syllabus-Agricultural Engineering Gate Syllabus-Architecture and Planning View all Entrance Exam Syllabus Competitive Exam Syllabus Indian Economic Service Syllabus IES-Civil Engineering Syllabus IES-ECE Syllabus View all Competitive Exam Syllabus IT interview questions Aptitude Ablity-Part I.
Aptitude Ablity-Part II.
Aptitude Ablity-Part III View all interview questions Competitive Exam Papers UPSC-AGRICULTURE Question Paper UPSC-Animal Husbandry Question Paper UPSC-BOTANY Question Paper View all Competitive Exam Papers Entrance Exam Questions JAM-Botony Question JAM-botony 2006 Question JAM-botony 2007 Question View all Entrance Exam Questions University Question Papers Alagappa University Question Papers Anna University- Questions Annamalai University-Questions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View all University Question Papers Education loan Details Andhra Bank-Loan Procedure State Bank of India-Loan Procedure Bank of Baroda -Loan Procedure View all Education loan Details All Certification Details Microsoft-Certification Citrix-Certification Cisco Systems-Certification View all Certification Details Famous Bio-graphy Details Aaamir Khan Biography A.P.J.Abdul Kalam Biography Bill Gates Biography View all Bio-graphy Details About-Us     Contact-Us    Site-map �copyright All rights are reserved to technicalsymposium.com Cavium Networks Interview Questions | Glassdoor * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United States * Australia * Canada * India * United Kingdom Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look at Cavium Networks interview questions and advice.
All 23 interview reviews posted anonymously by Cavium Networks employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.3333333 12 Cavium Networks 3.3 12 reviews www.cavium.com Mountain View, CA 500 to 999 Employees Work in HR?
Claim Profile Share an Interview &lt;http://www.glassdoor.com/survey/start_execute.htm?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>showSurvey=INTERVIEWS&amp;interviewEmployerId=20425&amp;interviewEmployerName=Cavium Networks&gt; Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections Cavium Networks Interview Questions Getting the Interview  23 Interviews Applied Online 54% Campus Recruiting 23% Other 7% Recruiter 7% Employee Referral 4% Staffing Agency 3% More Interview Experience  22 Ratings Positive 45% Neutral 40% Negative 13% 23 interview experiences Updated Mar 24, 2013 Worldwide US – All Cities – San Jose, CA Area (includes HQ) – Boston, MA Area – Ithaca, NY Area India – All Cities – Bangalore Area – Hyderabad Area Search Interviews Sort:  Relevance Newest Easiest Hardest Interview Outcome:   All No Offer Received Offer Software Engineer at Cavium Networks No Offer – Interviewed in Bangalore (India) Jan 2013 – Reviewed Feb 8, 2013 Interview Details – There were 2 technical round and an HR round.
It was C, Linux, Data Structures Interview Question – In HR round I was asked a question &quot;What if you are left in a barren island alone how will you go back to main land again.
There are no trees or any other resources&quot;   Answer Question More Less Other Details - The process took 3 days.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview More Cavium Networks Software Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
Software Engineer atCavium Networks Accepted Offer – Interviewed in Hyderābād (India) Dec 2009 – Reviewed Jun 9, 2012 Interview Details – First a 1 hour written exam testing your fundamentals in programming, Data Structures, OS internals, Networking, and Microprocessor architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If passed, you'll have 1:1 interview with a senior technical engineer, who'll make sure your answers in the exam aren't wild guesses and examine your approach on the incorrect answers.
Your area of expertise will be thoroughly tested.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – How would you implement a queue using 2 stacks?   View Answer More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview More Cavium Networks Software Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
Digital Circuit Design Engineer II at Cavium Networks No Offer – Reviewed Mar 24, 2013 Interview Details – Phone interview followed by a onsite with 5 rounds. questions on digital design, circuit design, architecture, device physics etc Interview Question – Sizing issues in CMOS   Answer Question Helpful Interview?   Yes | No Problem with this interview?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Verification Engineer at Cavium Networks No Offer – Interviewed in Boston, MA Oct 2012 – Reviewed Jan 7, 2013 Interview Details – Initial interview on phone with HR then on phone with team's Director.
Second one was technical and touched mostly aspects on programming like data structures and C pointers.
Computer Architecture was also touched slightly.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Difference between pointer and reference?
Implementing Hash Table using Linked list   Answer Question More Less Other Details - I applied through a recruiter and the process took 2 weeks.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Negative Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Senior Engineer at Cavium Networks Accepted Offer – Reviewed Dec 18, 2012 Interview Details – Initial 2 phone interviews, followed by 5 1:1 interviews and a lunch interview.
Very professional in interview process.
I was looking for a digital design position, which fit the bill exactly.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Know your resume and basics of digital design and state machines.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Design FIFO logic and interesting problems that are practical.   Answer Question Negotiation Details – Depends...there is little room to negotiate.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied online and the process took 4+ weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Temp Verification Engineering Intern at Cavium Networks No Offer – Interviewed in Ithaca, NY Oct 2012 – Reviewed Dec 4, 2012 Interview Details – I handed my resume through on campus recruiting event and got a phone interview one week after that.
The interview was supposed to be half an hour but it took one hour.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There were two groups of questions being asked: software and hardware.
Software questions were mainly typical data structure questions.
And hardware questions were about pipeline design.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Questions * Please describe what are linked list, binary tree and hash table.
What are the differences?
What's the average number of nodes I should search before I reach my target (Big O)?   Answer Question * What is a &quot;protected&quot; variable?   Answer Question * what's a &quot;private&quot; method?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How does that different from a &quot;public&quot; method?   Answer Question * What is a pipeline?
Why we use it?
Is there any problem with it?   Answer Question More Less Other Details - I applied through campus recruiting and the process took 1+ week.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Phone Interview * Tests Skills Test * Other Background Check * Overall Negative Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Software Engineer at Cavium Networks Accepted Offer – Interviewed in Oct 2012 – Reviewed Nov 4, 2012 Interview Details – Campus placement.
First round technical aptitude mostly C.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Two technical round.
1 HR.
Asked questions from OS, Compiler, Architecture, bit manipulation, data structure (tree), Asked to write code for two problems like find depth of a tree etc.
And wrote some network (socket) programs also....
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – part (function) of kernel which produces seg fault signal   Answer Question More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview More Cavium Networks Software Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
RTL Design Engineer at Cavium Networks No Offer – Interviewed in Boxborough, MA Sep 2012 – Reviewed Oct 15, 2012 Interview Details – Applied through company site.
Got an interview call 1 week later.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Priority arbiter in verilog Divide by 3 counter with 50%   Answer Question More Less Other Details - I applied online * Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Software Developer at Cavium Networks Accepted Offer – Interviewed in Dec 2010 – Reviewed Jun 25, 2012 Interview Details – Purely technical subjective written test followed by two 1:1 interviews.
Basic topics : C coding Network Programming Process and OS concepts Written test consisted of 20 programming and general technical questions based on OS, nettworks and computer architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interviews were of 1 hour duration each - again technical questions related to above topics.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Description of some unique Computer science problem you have solved or have worked on   View Answer More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Senior Verification Engineer at Cavium Networks No Offer – Interviewed in May 2012 – Reviewed Jun 23, 2012 Interview Details – Phone interview followed by onsite Interview Question – How do the number of lookups change in a binary tree datastructure by making appropriate changes in the tree?   Answer Question More Less Other Details - I applied online and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Neutral Experience * Difficult Interview More Cavium Networks Senior Verification Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
1–10 of 23 Interviews RSS Feed Embed * « * 1 * 2 * 3 * » Interviews for Top Jobs atCavium Networks Verification Engineer Verification Engineer Software Engineer Software Engineer Senior Verification Engineer Senior Verification Engineer Engineering Worked forCavium Networks?
Contribute to the Community!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Add Review Add Salary Add Interview Review Add Photos Interviews by Company * Microsoft Interview * Apple Interview * Amazon.com Interview * Accenture Interview * Booz Allen Hamilton Interview Salaries by Company * Xilinx Salaries * Broadcom Salaries * Marvell Technology Salaries * Analog Devices Salaries * QUALCOMM CDMA Salaries * Samsung Semiconductor Salaries * Cypress Semiconductor Salaries * Samsung Electronics Salaries * Samsung Electronics America Salaries Sorry, you need an account to use this feature.Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We're sorry but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Outta Here The difficulty rating is the average interview difficulty rating across all interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The interview experience is the percentage of all interview candidates that said their interview experience was positive, neutral, or negative.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your response will be removed from the review – this cannot be undone.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Delete Response Cancel * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give other employees and job seekers your view from the inside Simply post an anonymous review for a recent interview experience or current/former employer.
Your post is anonymous – and if you're worried someone will be able to identify your review, you can even post without telling us your job title and location.Learn More .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Review No thanks –I'll just look around Electronics hardware interview questions at Intel   HITEQUEST technical interview Q &amp; A for high-tech professionals     Interview Questions Electronics Hardware Computer Software Intel screening questions Quick Thinking Tests General questions Phone screening questions Submit your Q or A Resources Technical articles Technical discussion Engineers share info Resume and interview How to get a job in Silicon Valley How much are you worth on market?
Why you may need an agent Break point Written Exam Logic Tests Professional Test Tomato company Cup of coffee How stock market works Engineering jokes About Hitequest About Hitequest Home page               =Intel Screening Questions=           COMPUTER ARCHITECTURE QUESTIONS: 1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For a single computer processor computer system, what is the purpose of a processor cache and describe its operation?
2. Explain the operation considering a two processor computer system with a cache for each processor.
What are the main issues associated with multiprocessor caches and how might you solve it?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. Explain the difference between write through and write back cache.
4. Are you familiar with the term MESI?
5. Are you familiar with the term snooping?   STATE MACHINE QUESTIONS: 1.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Describe a finite state machine that will detect three consecutive coin tosses (of one coin) that results in heads.
2. In what cases do you need to double clock a signal before presenting it to a synchronous state machine?   SIGNAL LINE QUESTIONS: 1.
You have a driver that drives a long signal &amp; connects to an input device.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>At the input device there is either overshoot, undershoot or signal threshold violations, what can be done to correct this problem?   VALIDATION QUESTIONS: What are the total number of lines written in C/C++?
What is the most complicated/valuable program written in C/C++?
What compiler was used?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Have you studied busses?
What types?
Have you studied pipelining?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>List the 5 stages of a 5 stage pipeline.
Assuming 1 clock per stage, what is the latency of an instruction in a 5 stage machine?
What is the throughput of this machine ?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How many bit combinations are there in a byte?
What is the difference between = and == in C?
Are you familiar with VHDL and/or Verilog?   MEMORY, I/O, CLOCK AND POWER QUESTIONS: 1.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What types of CMOS memories have you designed?
What were their size?
Speed?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Configuration Process technology?
2. What work have you done on full chip Clock and Power distribution?
What process technology and budgets were used?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3. What types of I/O have you designed?
What were their size?
Speed?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Configuration?
Voltage requirements?
Process technology?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What package was used and how did you model the package/system?
What parasitic effects were considered?
4. What types of high speed CMOS circuits have you designed?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>5. What transistor level design tools are you proficient with?
What types of designs were they used on?
6. What products have you designed which have entered high volume production?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What was your role in the silicon evaluation/product ramp?
What tools did you use?
7. If not into production, how far did you follow the design and why did not you see it into production?           iTurnItOn - new app for DIY enthusiasts!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Use your smart phone as remote control for power outlets, lights, garage door.
Free app + $67 relay board                   LSI Interview Questions | Glassdoor * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United States * Australia * Canada * India * United Kingdom Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look at LSI interview questions and advice.
All 66 interview reviews posted anonymously by LSI employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.2380953 210 LSI 3.2 210 reviews www.lsi.com Milpitas, CA 5000+ Employees Work in HR?
Claim Profile Share an Interview Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections LSI Interview Questions Getting the Interview  68 Interviews Applied Online 56% Employee Referral 23% Campus Recruiting 14% Staffing Agency 2% Recruiter 2% More Interview Experience  65 Ratings Positive 67% Neutral 24% Negative 7% 66 interview experiences Updated Apr 15, 2013 Worldwide US – All Cities – San Jose, CA Area (includes HQ) – Allentown, PA Area – Atlanta, GA Area – Austin, TX Area – Boulder, CO Area – Colorado Springs, CO Area – Minneapolis-St.
Paul, MN Area – Pittsburgh, PA Area – Rochester, MN Area – Wichita, KS Area India – All Cities – Bangalore Area – Pune Area Search Interviews Sort:  Relevance Newest Easiest Hardest Interview Outcome:   All No Offer Received Offer Networking Intern at LSI No Offer – Reviewed Apr 4, 2013 New Interview Details – initially had telephonic interview.after getting selected der,i was called to their office.even that interview went on ok.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – relating to virtualization   Answer Question More Less Other Details - I applied through campus recruiting Helpful Interview?   Yes | No Problem with this interview?
Design Implementation at LSI No Offer – Reviewed Mar 5, 2013 Interview Details – Its a college campus placement.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There was a written test along with CGPA cutoff and resume shortlisting.
Written test includes digital electronics, basic cmos implementations.
Then there was an Interview round mostly about timing analysis, digital electronics and any other related projects mentioned in the resume.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Emphasis is laid on timing analysis questions (basic).. but in complete detail.   Answer Question More Less Other Details - I applied through campus recruiting and the process took 2 days.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Staff Engineer at LSI No Offer – Interviewed in Bangalore (India) Jan 2013 – Reviewed Jan 31, 2013 Interview Details – First there was a tech+apti written round. it was ok.
2-3 rounds of tech interveiw with ques on digital design and programming ques on projects were asked HR was ok.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – ques which were answered wrongly in written round   Answer Question More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Systems Engineer at LSI Accepted Offer – Interviewed in Pune (India) Oct 2011 – Reviewed Aug 22, 2012 Interview Details – 1 Telephonic round, technical 1 Interview round at workplace Interview Question – Do you want to work as Systems Engineer and spend most of your time in Lab instead of cubicle ?  
View Answer Negotiation Details – Good More Less Other Details - I applied online and the process took 1 week.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Phone Interview 1:1 Interview * Tests Skills Test * Other Background Check * Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Software Engineer at LSI Accepted Offer – Interviewed in Pune (India) Jul 2011 – Reviewed Jun 30, 2012 Interview Details – Hiring and Interview process is pretty simple and uncomplicated.
HR is straight forward and to the point every time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Basic C and Data Structures problems faced in daily programming using Big and Little Endian machine's.   Answer Question More Less Other Details - I applied online and the process took 4+ weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview More LSI Software Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
Engineer at LSI No Offer – Interviewed in Bangalore (India) Jun 2011 – Reviewed Jul 28, 2011 Interview Details – 4 rounds of technical.
Basic digital logic question - pattern detection, metastability, freq of operation of a circuit; Verification - Write a testbench; Programming - reverse a string using linked list, detect a loop in a linked list; Interview Question – Linked list questions   Answer Question More Less Other Details - I applied through an employee referral and the process took 1+ week.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Neutral Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
ASIC Design Engineer at LSI Accepted Offer – Interviewed in Bangalore (India) Nov 2010 – Reviewed Dec 1, 2010 Interview Details – I applied online and got an email from the HR for a written test.
Once I was through with the written round, I had 3 Face to Face Interviews.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>First was a skill test which I had to complete in 12 min which had 5 questions. second one was a technical round where I was asked questions on DFT (ATPG, BIsT) and basic vlsi concept (cmos eqv. of nand, and, nor, or) and also about scripting language (Perl, TCL/TK).
Third was also technical.
Here only couple of question were asked....
One on MBIsT and other a f/f circuit was given with propagation delay and was asked whether the circuit will work or not and give reason for your answer...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>HR contacted me couple of days after the interview and mentioned they would like to offer me the position.....
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – DFT, Basic vlsi   Answer Question Negotiation Details – No Negotiation......
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied online and the process took 1+ week.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Very Easy Interview More LSI ASIC Design Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
Manager at LSI Accepted Offer – Interviewed in Pune (India) Feb 2009 – Reviewed Mar 25, 2010 Interview Details – It was very cordial and fun.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Why you are seeking for a job change?   View Answer More Less Other Details - I applied through an employee referral and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Marketing Manager at LSI Accepted Offer – Interviewed in Feb 2012 – Reviewed Apr 15, 2013 New Interview Details – Phone screen interview, then interview with about 4 members of the marketing team.
It helps if you know someone there.
They are very unorganized and unfocused, not knowing exactly what they need in their team.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Do you know how to create PPT slides?
I thought that was odd - of course I do.
Well, you better know how because there is a TON of reporting - all done through PPT.   Answer Question Negotiation Details – They don't negotiate.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied through an employee referral and the process took 2 weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Neutral Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Firmware Engineer at LSI No Offer – Interviewed in Jan 2013 – Reviewed Mar 27, 2013 Interview Details – Two rounds of phone screenings, followed by on-site interviews.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The on-site interview process consisted of a an intro by the HR, followed by technical interviews by engineers and managers.
You are expected to be an expert C programmer (you should know difference between static and non-static objects, stack and heap allocation, things like &quot;volatile&quot;), and an expert in firmware and device drivers.
Storage experience (SCSI, RAID) helps.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – A question about cache coherence protocols.   View Answer More Less Other Details - I applied through an employee referral and the process took 4+ weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Phone Interview 1:1 Interview * Tests Drug Test * Other Background Check * Overall Positive Experience * Easy Interview More LSI Firmware Engineer Interviews Helpful Interview?   Yes | No Problem with this interview?
1–10 of 66 Interviews RSS Feed Embed * « * 1 * 2 * 3 * 4 * 5 * … * » Interviews for Top Jobs atLSI Firmware Engineer Software Engineer ASIC Design Engineer Firmware Engineer Systems Engineer Software Engineer Engineer Engineer Staff Engineer Engineering Verification Engineer See more Firmware Engineer Software Engineer ASIC Design Engineer Firmware Engineer Systems Engineer Software Engineer Engineer Engineer Staff Engineer Engineering Verification Engineer Verification Engineer Customer Service Representative Applications Engineer Applications Engineer MARKETING Manager MARKETING Manager Senior Software Engineer Senior Software Engineer Analog Design Engineer Worked forLSI?
Contribute to the Community!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Add Review Add Salary Add Interview Review Add Photos LSI Videos Loading...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 of 1 Videos Prev | Next More LSI Videos » LSI – Why Work for Us?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>LSI designs semiconductors and software that accelerate storage and networking in datacenters and mobile networks.
Our technology is the intelligence critical to improved application performance.
And it's applied in… —Full Overview * About LSI * Culture and Values * Employee Benefits * Student Opportunities Provided by employer [?]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This is the employer's chance to tell you why you should work for them.
The information provided is from their perspective.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interviews by Company * Microsoft Interview * Apple Interview * Amazon.com Interview * Accenture Interview * Booz Allen Hamilton Interview Salaries by Company * AMD Salaries * Broadcom Salaries * Altera Salaries * Cypress Semiconductor Salaries * Conexant Systems Salaries * Integrated Device Technology Salaries * NextWave Wireless Salaries Sorry, you need an account to use this feature.Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We're sorry but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Outta Here The difficulty rating is the average interview difficulty rating across all interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The interview experience is the percentage of all interview candidates that said their interview experience was positive, neutral, or negative.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your response will be removed from the review – this cannot be undone.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Delete Response Cancel * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give other employees and job seekers your view from the inside Simply post an anonymous review for a recent interview experience or current/former employer.
Your post is anonymous – and if you're worried someone will be able to identify your review, you can even post without telling us your job title and location.Learn More .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Review No thanks –I'll just look around Broadcom - The questions were on my projects, digital design, computer architecture, verilog coding on a problem give (state machine) and problem solving | Glassdoor.co.uk * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United Kingdom * Australia * Canada * India * United States Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look atBroadcom interview questions and advice.
All interview reviews are posted anonymously byBroadcom employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.3873086 457 Broadcom 3.4 457 reviews www.broadcom.com Irvine, CA 5000+ Employees Work in HR?
Claim Profile Share an Interview Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections 21 interview experiences Back to all Broadcom Interview Questions &amp; Reviews Interview Question for ASIC Applications Engineering Intern at Broadcom: Jan 04, 2013 0 of 0 people found this helpful The questions were on my projects, digital design, computer architecture, verilog coding on a problem give (state machine) and problem solving Tags:   See more ,   See less 8 Add Tags [?]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>See more for this Broadcom ASIC Applications Engineering Intern Interview Helpful Question?   Yes | No Inappropriate?
Answers &amp; Comments (0)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To comment on this question, Sign In with Facebook or Sign Up You might also be interested in: Interview Questions , ASIC Applications Engineering Intern Interview Questions ,Broadcom Interview Broadcom – Why Work for Us?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Broadcom Corporation (NASDAQ: BRCM), a FORTUNE 500(r) company, is a global leader and innovator in semiconductor solutions for wired and wireless communications.
Broadcom(r) products seamlessly deliver voice, video… — Full Overview * About Broadcom * Working at Broadcom * Community * Recruiting Contacts Provided by employer [?]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This is the employer's chance to tell you why you should work for them.
The information provided is from their perspective.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interviews by Company * Oxford Interview * NHS Interview * Sky Interview * Three Interview * Barclays Capital Interview * BT Interview * Skype Interview * Credit Suisse Interview * HSBC Holdings Interview * Amazon.com Interview * Deutsche Bank Interview * Rolls-Royce Interview * Capgemini Interview * Citi Interview * Imperial College Interview Salaries by Company * Capita Salaries * Royal Air Force Salaries * Royal Navy Salaries * BT Salaries * Royal Mail Salaries * Argos Salaries * Barclaycard Salaries * Citi Salaries * John Lewis Salaries * BlackRock Salaries * Home Office Salaries * Carphone Warehouse Salaries * PA Consulting Salaries * BAA Salaries * Citibank Salaries Tags are like keywords, helping to categorise interview questions that have something in common.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, you need an account to use this feature.
Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team, and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Out of Here * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Intel Corporation Graduate Technical Intern Interview Questions | Glassdoor * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United States * Australia * Canada * India * United Kingdom Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look at Intel Corporation Graduate Technical Intern interview questions and advice.
All 17 interview reviews posted anonymously by Intel Corporation employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.7358155 2256 Intel Corporation 3.7 2,256 reviews intel.com Santa Clara, CA 5000+ Employees Work in HR?
Claim Profile Share an Interview &lt;http://www.glassdoor.com/survey/start_execute.htm?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>showSurvey=INTERVIEWS&amp;interviewEmployerId=1519&amp;interviewEmployerName=Intel Corporation&gt; Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections Intel Corporation Graduate Technical Intern Interview Questions Getting the Interview  17 Interviews Applied Online 51% Recruiter 15% Campus Recruiting 5% Employee Referral 2% More Interview Experience  16 Ratings Positive 93% Neutral 6% Negative 0% 17 interview experiences Back to all interview questions UpdatedMar 17, 2013 Worldwide US – All Cities – San Jose, CA Area (includes HQ) – Albuquerque, NM Area – Allentown, PA Area – Ann Arbor, MI Area – Austin, TX Area – Boston, MA Area – Champaign, IL Area – Columbia, SC Area – Fort Collins, CO Area – Houston, TX Area – Las Vegas, NV Area – Los Angeles, CA Area – New York City, NY Area – Olympia, WA Area – Phoenix, AZ Area – Pittsburgh, PA Area – Portland, OR Area – Provo, UT Area – Sacramento, CA Area – San Diego, CA Area – San Francisco, CA Area – Seattle, WA Area – South Bend, IN Area – Toledo, OH Area – Tucson, AZ Area Angola – All Cities – Israel Argentina – All Cities – Cordoba Area Canada – All Cities – Vancouver, BC Area China – All Cities – Chengdu Area – Dalian, Liaoning – Shanghai Area Finland – All Cities – Helsinki Area France – All Cities – Paris Area Germany – All Cities – Munich Area India – All Cities – Bangalore Area – Cochin Area Ireland – All Cities – Dublin Area Israel – All Cities – Beersheba Area – Haifa Area – Tel Aviv-Yafo Area Malaysia – All Cities – Ipoh Area Mexico – All Cities – Guadalajara Area Nigeria – All Cities – Lagos Philippines – All Cities – Cavite, Dapitan – Manila Area Taiwan – All Cities – Tainan Area Turkey – All Cities – Ankara Area UK – All Cities – Swindon Area Vietnam – All Cities – Ho Chi Minh Area Search Interviews Sort:  Relevance Newest Easiest Hardest Interview Outcome:   All No Offer Received Offer Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Folsom, CA May 2012 – Reviewed Mar 17, 2013 Interview Details – One phone screen of about 30 minutes Interview Question – Very basic questions on cache, unix commands and technical academic projects.  
Answer Question Negotiation Details – Extended internship beyond the actual dates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied through campus recruiting and the process took 4 days.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Phone Interview * Tests Skills Test Personality Test * Other Background Check * Overall Positive Experience * Very Easy Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Reviewed Feb 18, 2013 Interview Details – I had one interview after chatting at a engineering conference career booth.
The interview was laid back and asked about my former work experience and some other basic questions about my interests and goals.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It was more a conversation than a stiff interview.
Received my internship offer directly after the interview.
Great company, and great experience.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Once again, it was a conversation more than an interview so there really were no tough questions.   Answer Question More Less Other Details - I applied through a recruiter and the process took 2 days.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Easy Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Folsom, CA Jan 2012 – Reviewed Feb 15, 2013 Interview Details – One telephonic interview- Started by asking about details on my resume my previous work experience, projects and my coursework.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Then 15-20min technical questions about Computer Architecture,Digital VLSI, Verilog.
Then he briefed me about the team and told my role and what I would be working on a day-day basis.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Given a design block in Verilog how would you go about verifying the design.   Answer Question More Less Other Details - I applied online and the process took 4+ weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Intern Technical at Intel Corporation Accepted Offer – Reviewed Feb 13, 2013 Interview Details – Normally will ask more about the technical side, especially on your final year project.
Co-curiculum is not very important and normally will not be asked Interview Question – none   Answer Question Helpful Interview?   Yes | No Problem with this interview?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Graduate Intern Technical at Intel Corporation Accepted Offer – Interviewed in Jul 2012 – Reviewed Aug 2, 2012 Interview Details – got 2 phone interviews, both during the time I was out of US.
First the relevant manager asked about my Resume, strengths and areas of interest , then went in depth on my Resume and then asked some technical questions related to the position.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>20 min altogether.
Questions: my projects in depth that I mentioned in Resume, trigate Transistor, RTL, test bench, how many test benches are requited to test a software, was asked to develop a piece of algo to count the number of 1s and 0s in a string, whats an SoC and does it consume more or less power than a single chip transistor &amp; where is it used, Transistor voltagess of Drain &amp; source Interview Question – Trigate transistor, SoC   Answer Question More Less Other Details - I applied online and the process took 2 weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Phone Interview * Tests Skills Test * Other Background Check * Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Santa Clara, CA Dec 2011 – Reviewed Jun 25, 2012 Interview Details – Questions from previous work experience, digital design and computer architecture What is pipelining?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>What is paging?
Difference between sequential circuits and combinational circuits?
State machine questions Virtual memory Cache coherency Cache types and techniques to improve cache performance Interview Question – describing an old project that I had worked on   View Answer Negotiation Details – no negotiation More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Hillsboro, OR Apr 2012 – Reviewed Jun 3, 2012 Interview Details – Easy communications right from the start.
They setup an hour long interview via email.
The interview just focused on my research work with a couple of questions on C.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied online and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Easy Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Nov 2011 – Reviewed Apr 21, 2012 Interview Details – Two phone interviews, and basic technical questions about vmware, programming languages etc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – How is a virtual machine handled at the process level.   Answer Question More Less Other Details - I applied online and the process took 1 week.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Hillsboro, OR Mar 2011 – Reviewed Mar 25, 2012 Interview Details – I had applied for internship position at Intel.
Got a mail from one of the employees at Intel and they scheduled a phone interview with me.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview was pretty simple.
They asked me on some basic questions in VLSI Design, Computer Architecture and Logic Design.
Completed my internship and got a full time offer :) Proud to be a part of Intel team .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Some of the questions were 1) Questions on my project.
What difficulties did u have?
How did you share the workload?
2) Transistor operation (different regions) 3) Which is better to implement NAND or NOR?
Why?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4) How do you route the metal layers?
5) Some questions on layout.
6) Pipeling and cache memory operation.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Advantages of cache memory.
7) Sequence detector design.   Answer Question Negotiation Details – Did not negotiate.
Feels great to work for Intel.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied through an employee referral and the process took 1 week.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Graduate Technical Intern at Intel Corporation Accepted Offer – Interviewed in Hillsboro, OR Nov 2011 – Reviewed Mar 2, 2012 Interview Details – Interview started with basic information regarding education and past experience.It was technical interview for interns so it was not in depth.But quality of questions were good.Couple of problem solving questions were asked related to vlsi.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – A question on inverter sizing to minimize rise and fall time.   Answer Question More Less * Overall Neutral Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
You might also be interested in: Interview Questions , Graduate Technical Intern  Interview Questions ,Intel Corporation Interview 1–10 of 17 Interviews RSS Feed Embed * « * 1 * 2 * » Interviews for Top Jobs atIntel Corporation Process Engineer Software Engineer Process Engineer Process Engineer Component Design Engineer Software Engineer Engineering Software Engineer Intern Financial Analyst Component Design Engineer See more Process Engineer Software Engineer Process Engineer Process Engineer Component Design Engineer Software Engineer Engineering Software Engineer Intern Financial Analyst Component Design Engineer Senior Process Engineer Engineer Hardware Engineer Financial Analyst Engineering Design Engineer Senior Financial Analyst Engineering Engineer Worked forIntel Corporation?
Contribute to the Community!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Add Review Add Salary Add Interview Review Add Photos Intel Corporation Videos Loading...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 of 1 Videos Prev | Next More Intel Corporation Videos » Intel Corporation – Why Work for Us?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There's more inside Intel than you ever imagined.
At Intel, we see more inside the every day.
We see potential, opportunity and a chance to connect and enrich the lives of every person on earth.
Step inside our world… — Full Overview * Overview * Careers * Student Center * Life at Intel Provided by employer [?]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This is the employer's chance to tell you why you should work for them.
The information provided is from their perspective.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interviews by Company * Microsoft Interview * Apple Interview * Amazon.com Interview * Accenture Interview * Booz Allen Hamilton Interview Salaries by Company * Xilinx Salaries * Broadcom Salaries * Marvell Technology Salaries * Analog Devices Salaries * QUALCOMM CDMA Salaries * Samsung Semiconductor Salaries * Cypress Semiconductor Salaries * Samsung Electronics Salaries * Samsung Electronics America Salaries Sorry, you need an account to use this feature.Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We're sorry but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Outta Here The difficulty rating is the average interview difficulty rating across all interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The interview experience is the percentage of all interview candidates that said their interview experience was positive, neutral, or negative.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your response will be removed from the review – this cannot be undone.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Delete Response Cancel * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give other employees and job seekers your view from the inside Simply post an anonymous review for a recent interview experience or current/former employer.
Your post is anonymous – and if you're worried someone will be able to identify your review, you can even post without telling us your job title and location.Learn More .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Review No thanks –I'll just look around NVIDIA Hardware Engineer Interview Questions | Glassdoor * Home * Jobs * Companies * Salaries * Interviews Sign Up Sign In Write a Review United States * United States * Australia * Canada * India * United Kingdom Jobs Companies Salaries Interviews Search Advanced Glassdoor is your free inside look at NVIDIA Hardware Engineer interview questions and advice.
All 21 interview reviews posted anonymously by NVIDIA employees and interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>3.361556 437 NVIDIA 3.4 437 reviews www.nvidia.com Santa Clara, CA 1000 to 5000 Employees Work in HR?
Claim Profile Share an Interview Follow * Overview * Salaries * Reviews * Interviews * Jobs * More * Photos * Inside Connections NVIDIA Hardware Engineer Interview Questions Getting the Interview  21 Interviews Campus Recruiting 33% Employee Referral 6% Applied Online 5% Staffing Agency 2% In-Person 2% More Interview Experience  19 Ratings Positive 57% Neutral 42% Negative 0% 21 interview experiences Back to all interview questions UpdatedFeb 14, 2013 Worldwide US – All Cities – San Jose, CA Area (includes HQ) – Austin, TX Area – Charlotte, NC Area – Los Angeles, CA Area – Madison, WI Area – Pittsburgh, PA Area – Portland, OR Area – Raleigh-Durham, NC Area – Sacramento, CA Area – San Francisco, CA Area – Washington, DC Area China – All Cities – Shanghai Area Egypt – All Cities – Cairo Area Germany – All Cities – Dusseldorf Area – Munich Area India – All Cities – Bangalore Area – Hyderabad Area – Kharagpur, West Bengal – New Delhi Area – Pune Area Japan – All Cities – Tokyo Area UK – All Cities – Gloucester Area Vietnam – All Cities – Ca La Search Interviews Sort:  Relevance Newest Easiest Hardest Interview Outcome:   All No Offer Received Offer Hardware Engineer at NVIDIA Accepted Offer – Interviewed in Bangalore (India) Aug 2010 – Reviewed Aug 19, 2010 Interview Details – Written Test : Subjective type.
(Tech)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Tech interview basically and will ask more from their desired profile Interview Question – Which is more of your field , analog or digital .
I can see you have done projects in both and have taken courses in both domains.   View Answer More Less Other Details - I applied through campus recruiting and the process took 2 days.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA No Offer – Interviewed in California, MD Nov 2012 – Reviewed Feb 14, 2013 Interview Details – Phone interview, the officer called me at 4pm east time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It lasted for about 1hour with nothing but technical questions.
First one is building the memory circuit using only the combinational logic.Second is state machine question, finding the first 1101 from a continuous 0&amp;1 inputs.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – the combinational logic question   View Answer More Less Other Details - I applied through campus recruiting and the process took 2 weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Neutral Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA No Offer – Reviewed Jan 24, 2013 Interview Details – looking for a internship position.
I got 2 phone interviews after attending univerisity career fair.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The process is very slow.
Some question about MOSFETs, gaussian distribution, C coding, verilog and OpAmp in the 1st interview.
Timing analysis of digital circuits and operation mode of MOSFETs are focused on the 2nd interview.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Some question on gaussian distribution   Answer Question Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer atNVIDIA Accepted Offer – Interviewed in Austin, TX Nov 2011 – Reviewed Nov 29, 2012 Interview Details – Totally driven by the technical manager.
Minimal HR interaction.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>However, they just pick 5 people to interview you.
The people dont interact with each other.
Every one submits their own feedback.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Otherwise the process is intense.
3 out of the 5 interviews involved technical stuff.
They even ask you to write code.
2 were more managerial.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Dont remember now   Answer Question Negotiation Details – No negotiation.
Joined as a fresh graduate.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied through campus recruiting and the process took 4+ weeks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Phone Interview 1:1 Interview * Tests Skills Test Personality Test * Other Background Check * Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA Accepted Offer – Interviewed in Aug 2012 – Reviewed Nov 9, 2012 Interview Details – First Round: Techinal Test (Subjective) - 1 hour Second round : Techinal Interview + HR Interview (30 min)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Nothing Unexpected.
Focus on core digital electronics and computer architecture concepts   Answer Question Negotiation Details – No Negotiation More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews Group/Panel Interview * Tests Personality Test * Other Presentation Other * Overall Positive Experience * Easy Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA No Offer – Reviewed Oct 11, 2012 Interview Details – On the last year's career fair of my university.
I answered some questions provided by NVIDIA.
And finally I got a phone interview.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – calculate all 1s in a 7 bit binary number.   Answer Question Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer atNVIDIA Accepted Offer – Interviewed in Jan 2012 – Reviewed Jul 5, 2012 Interview Details – Had a written technical test.
Most of the questions were from digital electronics and a few questions from c programming.
Application of basic knowledge was tested.Selection was based on the performance of this test for the technical interview.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There was a panel of 4-5 members.
Everybody asked a couple of questions.
Questions were again mainly from digital electronics.
This was followed by an HR interview Interview Question – Draw XOR gate using NOR gates   View Answer More Less Other Details - I applied through campus recruiting and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA Accepted Offer – Interviewed in San Francisco, CA Jun 2012 – Reviewed Jun 15, 2012 Interview Details – What is an ARM?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Explain briefly ASIC design?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Questions * what is ARM?   View Answer * Explain briefly ASIC design   View Answer More Less Other Details - I applied online and the process took a day.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Neutral Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA Accepted Offer – Interviewed in Jan 2010 – Reviewed May 8, 2012 Interview Details – pretty smooth.
One phone interview.
Onsite was 9am to 4pm including a lunch interview.
5 people plus 1 hr interviewed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – Questions related to pmos/nmos transistors.
Discussion on holes/electon migration.   View Answer Negotiation Details – not really More Less Other Details - I applied in-person and the process took a day.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interviews 1:1 Interview Phone Interview * Tests Skills Test * Other Background Check * Overall Positive Experience * Difficult Interview Helpful Interview?   Yes | No Problem with this interview?
Hardware Engineer at NVIDIA Accepted Offer – Interviewed in Santa Clara, CA Feb 2012 – Reviewed Mar 18, 2012 Interview Details – I found nvidia in my universities career fair, talked to them about summer internships and they gave a quiz for the hardware engineering position.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Two weeks later I received an email for a phone interview, I had to do three of those.
Overall the interviewers were all nice, relaxed and they all seem smart, it sounds like and awesome place to work.
The questions were straightforward like timing analysis, designing with logic gates and multiplexers, state machines, low level coding.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interview Question – State machine to detect a signal   Answer Question Negotiation Details – I took the offer, it is my first engineering job so it is a pretty good pay.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>More Less Other Details - I applied through campus recruiting and the process took 2 months.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overall Positive Experience * Average Interview Helpful Interview?   Yes | No Problem with this interview?
You might also be interested in: Interview Questions , Hardware Engineer Interview Questions ,NVIDIA Interview 1–10 of 21 Interviews RSS Feed Embed * « * 1 * 2 * 3 * » Interviews for Top Jobs atNVIDIA Software Engineer ASIC Design Engineer Software Engineer ASIC Design Engineer Hardware Engineer Systems Software Engineer Intern Hardware Engineer Software Engineer Senior Software Engineer Intern See more Software Engineer ASIC Design Engineer Software Engineer ASIC Design Engineer Hardware Engineer Systems Software Engineer Intern Hardware Engineer Software Engineer Senior Software Engineer Intern Systems Software Engineer Engineering ASIC Design Engineer Hardware Engineer Systems Software Engineer Intern Physical Design Engineer Physical Design Engineer Architect Worked forNVIDIA?
Contribute to the Community!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Add Review Add Salary Add Interview Review Add Photos NVIDIA Videos Loading...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 of 1 Videos Prev | Next More NVIDIA Videos » NVIDIA – Why Work for Us?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>As a world leader in visual computing technology NVIDIA's objective remains solid: to be the most important 3D company in the world.
We invest in our people and our technologies, support and fund industry research… — Full Overview * Overview * Culture * Benefits * Diversity Provided by employer [?]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This is the employer's chance to tell you why you should work for them.
The information provided is from their perspective.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Interviews by Company * Microsoft Interview * Apple Interview * Amazon.com Interview * Accenture Interview * Booz Allen Hamilton Interview Salaries by Company * Intel Corporation Salaries * AMD Salaries * Freescale Semiconductor Salaries * Broadcom Salaries * Conexant Systems Salaries * Infineon Technologies Salaries Sorry, you need an account to use this feature.Sign In with Facebook or Sign Up Flag this {0} as inappropriate Would you like us to review something?
Please describe the problem with this {0} and we will look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Flag this Item Cancel Thank you!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your feedback has been sent to the team and we'll look into it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We're sorry but your feedback didn't make it to the team.
Your input is valuable to us – would you mind trying again?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I'll Try Again Get Me Outta Here The difficulty rating is the average interview difficulty rating across all interview candidates.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The interview experience is the percentage of all interview candidates that said their interview experience was positive, neutral, or negative.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Your response will be removed from the review – this cannot be undone.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Delete Response Cancel * Create Account * Sign In Email Password Verify Password   Sign Up Email Password   Remember Me Please enter your email address and we will send you an email with instructions for resetting your password.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Sign In Forgot your password?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reset « Back to Sign In Sign In with Facebook (Recommended) — Why? * Instant access to all salaries &amp; reviews * See who your friends know at any company What you view and contribute on Glassdoor is private – it will not appear on Facebook.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By signing up you are accepting our Terms of Use .
Loading… * About Us * Employers * Careers * Feedback * Help * * * * Browse: * Salaries by Job * Salaries by Company * Salaries by City * Reviews by Company * Interview Questions by Job * Interviews by Company * Jobs by Title * Jobs by Company * Jobs by City Copyright © 2008–2013, Glassdoor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All Rights Reserved.
Your use of this service is subject to ourTerms of Use and Privacy &amp; Cookies Policy .
Glassdoor ® is a registered trademark of Glassdoor, Inc.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give other employees and job seekers your view from the inside Simply post an anonymous review for a recent interview experience or current/former employer.
Your post is anonymous – and if you're worried someone will be able to identify your review, you can even post without telling us your job title and location.Learn More .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Post a Review No thanks –I'll just look around difference between computer architecture and computer organization?   Menu    Search  FAQs Operating System First Prev Next Last * Question: 106 of 132 * difference between computer architecture and computer organization?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Asked by: Interview Candidate Asked on: Nov 1st, 2006 * Showing 1 - 4 of 4 Ans * reddy Answered On : Feb 1st, 2007 * computer organization is an organization in which we organize all hardwares into a systemwhere as architecture is explain abt the functions of hardware devices * * anandad0007 Answered On : Jan 2nd, 2008 * A computer's architecture is its abstract model and is the programmer's view in terms of instructions, addressing modes and registers.
A computer's organization expresses the realization of the architecture.
Architecture describeswhat the computer does and organization describes how it does it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Architecture and organization are independent; you can change the organization of a computer without changing its architecture.
For example, a 64-bit architecture can be internally organized as a true 64-bit machine or as a 16-bit machine that uses four cycles to handle 64-bit values.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The difference between architecture and organization is best illustrated by a non-computer example.
Is the gear lever in a car part of its architecture or organization?
The architecture of a car is simple; it transports you from A to B.
The gear lever belongs to the car's organization because it implements the function of a car but is not part of that function (a car does not intrinsically need a gear lever).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* * harpinder mahal Answered On : Oct 22nd, 2011 * 1.The architecture indicates its hardware whereas the organization reveals its performance.
2.for designing a computer, its architecture is fixed first and then its organization is decided.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* * ali Answered On : Apr 6th, 2013 * THE distinction b/w computer organization and computer architecture * * Answer Question * Click here to Login / Register your free account Name: Email: Answer: Image Verification : Send Reset * Related Answered Questions * What is the difference between agile and scrum?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Structural engineering * What is the difference between software testing and quality assurance (qa)?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* If two systems are synchronized by having their voltage magnitudes, frequencies and phase synchronized, how does current flow as it can flow only in case of potential difference?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Diff between primary index and primary key * Related Open Questions * User stories and use case * Agile and scrum * Deflection v/s deformation * What does online channel means in testing * Java command line arguments Copyright © 2013 GeekInterview.com | All Rights Reserved   Menu    Search  * User Account * Login * Register * Lost Password * Get Activation Code * GeekInterview Pages * Ask Interview Question * Have Career Question?
Ask Chandra * Interview Questions * Interview Coaching * Tech FAQs * Engineering * Online Quiz * Geek Forums * GeekInterview Info * About Us * Privacy Policy * Terms and Conditions * DMCA * Contact Us Copyright © 2013 GeekInterview.com | All Rights Reserved   Menu    Search  Copyright © 2013 GeekInterview.com | All Rights Reserved
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
            </sectionList>
        </query>
        <query>
            <text>computer architecture solved examples</text>
            <linkList>
                <link>http://www.cs.iastate.edu/~prabhu/Tutorial/title.html</link>
                <link>http://www.chegg.com/homework-help/textbook-solutions/computer-science-computer-architecture-s109</link>
                <link>http://www.slideshare.net/mahinthjoe/ch123pr-ketut</link>
                <link>http://comjnl.oxfordjournals.org/content/28/2/105.abstract</link>
                <link>http://en.wikipedia.org/wiki/Hazard_(computer_architecture)</link>
                <link>http://en.wikipedia.org/wiki/Indirection</link>
                <link>http://www.utdallas.edu/~cantrell/ee4304/info.html</link>
                <link>https://computing.llnl.gov/tutorials/parallel_comp/</link>
                <link>http://www.es.ele.tue.nl/~heco/courses/EmbeddedComputerArchitecture/</link>
                <link>http://www.amazon.com/Schaums-Outline-Computer-Architecture/dp/007136207X</link>
                <link>http://en.wikipedia.org/wiki/Computer</link>
                <link>http://www.csd.uoc.gr/~hy590-25/Chapter04-Pipelining2.ppt</link>
            </linkList>
            <sectionList>
                <section>
                    <text>Computer Architecture Tutorial COMPUTER ARCHITECTURE TUTORIAL By Gurpur M. Prabhu Read Prabhu's book Anita's Legacy This tutorial is intended as a supplementary learning tool for students of Com S 321, an undergraduate course on computer architecture taught at Iowa State University.
The text book for the course is &quot;Computer Organization and Design: The Hardware/Software Interface&quot; by Hennessy and Patterson.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The concepts explained include some aspects of computer performance, cache design, and pipelining.  Examples, interactive applets, and some problems with solutions are used to illustrate basic ideas.
Most of the material has been developed from the text book as well as from &quot;Computer Architecture: A Quantitative Approach&quot; by the same authors.
The problems that have been solved have been taken from a number of sources, but the solutions are unique in the sense that emphasis has been placed not only on the answers but also on the reasoning processes that will help students solve similar problems.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To be able to see and interact with java applets in this tutorial, please enable Java in your browser.
If you work with Netscape browser, go to Edit/Preferences/Advanced and check the box &quot;Enable Java&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Feedback consisting of comments and errors are welcome, and can be e-mailed to Gurpur Prabhu at prabhu@cs.iastate.edu.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Topics Computer Performance  Amdahl's Law Computer Performance - I Computer Performance - II Memory Hierarchy Design Principles and Levels Make the Common Case Fast Amdahl's Law Principle of Locality Smaller is Faster Common Questions Block Placement Placement Methods Examples Block Identification Address Structure Examples Block Replacement Policies Interactive applet to check different policies Example (a problem) Interaction with Memory On Read On Write Interactive Diagram Example (a problem)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>  Pipelining Classification of Instruction Sets Addressing Modes Memory Interpretation Memory Alignment DLX architecture Instruction Set Instruction Layout Examples of Instructions An Implementation of DLX The Basic Pipeline for DLX Performance Issues in Pipelining Pipeline Hazards Performance in Pipeline with Stalls Structural Hazards Data Hazards Forwarding Data Hazard Classification When Stalls are Required Pipeline Scheduling Control Hazards Branch Prediction Schemes Predict Not Taken &lt;http://www.cs.iastate.edu/~prabhu/Tutorial/PIPELINE/branchPred.html#Predict Not Taken&gt; Delayed Branch Cancelling Branch &lt;http://www.cs.iastate.edu/~prabhu/Tutorial/PIPELINE/branchPred.html#Cancelling Branch&gt; Problem on Branch Prediction Schemes Problem on Pipeline Hazards Dealing with Exceptions Types of Exceptions Exceptions in DLX Pipeline with Multicycle Operations Instruction Level Parallelism Loop Unrolling Dynamic Scheduling Techniques Computer Architecture textbook solutions and answers | Chegg.com * My Account * Sign Out Chegg.com * Login * Sign Up * Help * Cart   *   home / homework help / textbook solutions / computer science / computer architecture Get textbook solutions and answers for Computer Architecture Search or Ask a new question With a Homework Help Membership you get:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Textbook Solutions Unlimited access to over 2.5 million step-by-step Chegg textbook solutions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Expert Answers Ask questions around the clock, get fast answers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer Architecture Textbooks with Solutions(21) * Computer Architecture: A Quantitative Approach 3rd Edition Author: ISBN: 9781558605961 Edition: 3rd View 197 solutions » * Computer Architecture: A Quantitative Approach 4th Edition Author: ISBN: 9780123704900 Edition: 4th View 109 solutions » * Computer Forensics Principles and Practices 1st Edition Author: ISBN: 9780131547278 Edition: 1st View 195 solutions » * Computer Networks A Systems Approach 5th Edition Author: Bruce S Davie , Larry L Peterson ISBN: 9780123850591 Edition: 5th View 152 solutions » * Computer Organization 5th Edition Author: Safwat G.
Zaky , Zvonko Vranesic , Zvonko G.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Vranesic , V.
Carl Hamacher , Carl Hamacher , Safwat Zaky ISBN: 9780072320862 Edition: 5th View 712 solutions » * Computer Organization and Design 3rd Edition Author: David Patterson , John L.
Hennessy ISBN: 9781558606043 Edition: 3rd View 418 solutions » * Computer Organization and Design The Hardware Software Interface 4th Edition Author: David A Patterson , John L.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Hennessy ISBN: 9780123747501 Edition: 4th View 319 solutions » * Computer Organization and Design The Hardware Software Interface 4th Edition Author: John L.
Hennessy , David Patterson ISBN: 9780123744937 Edition: 4th View 732 solutions » * Computer Systems Organization and Architecture 1st Edition Author: John D.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Carpinelli ISBN: 9780201612530 Edition: 1st View 316 solutions » * Introduction to Cryptography and Network Security 0th Edition Author: Behrouz A.
Forouzan ISBN: 9780072870220 Edition: 0th View 634 solutions » * Learning Processing A Beginner s Guide to Programming Images Animation and Interaction 1st Edition Author: Daniel Shiffman ISBN: 9780123736024 Edition: 1st View 125 solutions » * Peter Nortons Computing Fundamentals 6th Edition Author: Peter Norton ISBN: 9780072978476 Edition: 6th View 368 solutions » * Peter Nortons Essential Concepts Student Edition 6th Edition Author: Peter Norton ISBN: 9780072978490 Edition: 6th View 316 solutions » * Peter Nortons Intro to Computers 6 e 6th Edition Author: Peter Norton ISBN: 9780072978902 Edition: 6th View 420 solutions » * Principles of Computer Security Security plus and Beyond 1st Edition Author: Roger L.
Davis , Chuck Cothren , Gregory B.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>White , Wm.
Arthur Conklin , Dwayne Williams ISBN: 9780072255096 Edition: 1st View 0 solutions » * Process Systems Analysis and Control 3rd Edition Author: Steven E.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>LeBlanc , Donald Coughanowr , Steven LeBlanc , Donald R.
Coughanowr ISBN: 9780073397894 Edition: 3rd View 189 solutions » * Security in Computing 4th Edition Author: Charles P Pfleeger , Shari Lawrence Pfleeger , Willis H.
Ware ISBN: 9780132390774 Edition: 4th View 262 solutions » * Structured Computer Organization 5th Edition Author: ISBN: 9780131485211 Edition: 5th View 299 solutions » * Systems Architecture 6th Edition Author: ISBN: 9780538475334 Edition: 6th View 598 solutions » * TCP IP Protocol Suite 4th Edition Author: Behrouz A.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Forouzan , Behrouz Forouzan ISBN: 9780073376042 Edition: 4th View 461 solutions » * The Architecture of Computer Hardware Systems Software and Networking An Information Technology Approach 4th Edition Author: ISBN: 9780471715429 Edition: 4th View 486 solutions » Get homework help withany subject * Expert Q&amp;A Homework questions &amp; answers * Textbook Solutions Step-by-Step textbook solutions * Topic Definitions Definitions of key topics &amp; concepts Computer Architecture Textbook Solutions from Chegg Chegg's step-by-step computer architecture textbook solutions will help you learn and understand how to solve computer architecture textbook problems and be better prepared for class.
Stuck on a computer architecture question that's not in your textbook?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Chegg's computer architecture experts can provide answers and solutions to virtually any computer architecture problem, often in as little as 2 hours.
Thousands of computer architecture textbook solutions, and expert computer architecture answers when you need them.
That's the power of Chegg.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>About Chegg * Media Center * Chegg For Good * Privacy Policy * Your CA Privacy Rights * Terms of Use * General Policies * Intellectual Property Rights Resources * Site Map * Mobile * Publishers * Brand Partners * Join Our Affiliate Program Publisher Pages * McGraw-Hill * Cengage * Pearson * Wiley Chegg Services * Return Your Books * eTextbooks * Used Textbooks * Cheap Textbooks * College Textbooks * Sell Textbooks * Homework Help * Chegg Coupon * Solutions Manual Company * Management * Blog * Jobs * Customer Service * Give Us Feedback Chegg Plants Trees © 2003-2013 Chegg Inc.
All rights reserved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Over 5 million trees planted Advanced Computer Architecture Chapter 123 Problems Solution SlideShare * Upload * Browse   * Popular * Downloaded * Liked * Channels * Videos * Featured * Go Pro * Login * Signup * Email * Like * Liked × * Save * Private Content * Embed * Loading embed code… * We have emailed the verification/download link to &quot;&quot;.
Login to your email and click the link to download the file directly.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To request the link at a different email address, update it here.
Close Validation messages.
Success message.
Fail message.
Check your bulk/spam folders if you can't find our mail.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* * Loading * Related * More * Advanced Computer Architecture chapter 5 problem solutions 5346 views Like Liked * Advance computer architecture 38 views Like Liked * solution manuals and test banks 2400 views Like Liked * Consumer Cloud Computing: Challenges Remain Despite Rapid Growth 283 views Like Liked * Dispelling The Vapor Around Cloud Computing –Network Management 620 views Like Liked * Robust Mobile Solutions Architecture for Thick Clients 1037 views Like Liked * Parallel computing chapter 2 152 views Like Liked * Embracing EA and TOGAF Aid Companies in Improving Innovation, Market Response, a… 275 views Like Liked * Psy 315 week 3 Individual assignment chapter 2 practice problems 11 12 13 16 21 … 22 views Like Liked * Analytics in the Cloud 880 views Like Liked * IBM’s Smarter Computing—Helping Organizations Align IT and Business Decision… 156 views Like Liked * Oracle Cloud Reference Architecture 1158 views Like Liked * Cluster Computing 1364 views Like Liked * Reality checking agile's architectural inner workings 1211 views Like Liked * Psy 315 week 3 individual assignment chapter 2 practice problems 11 12 13 16 21 … Like Liked * Parallel computing chapter 3 12 views Like Liked * Acc 557 problems chapter 1 14 - guaranteed a grade 42 views Like Liked * Going For a Global Solution: Kennametal Case Study 646 views Like Liked * Architectural Patterns and Software Architectures: Client-Server, Multi-Tier, MV… 19147 views Like Liked * Advanced Comuter Architecture Ch6 Problem Solutions 1139 views Like Liked * Enterprise SOA &amp; Cloud Computing planing 1279 views Like Liked * Service-Oriented Modeling Framework (SOMF) 2029 views Like Liked * PHL 458 Week 3 DQ 2 Chapter 11 in our text is about solving problems we enco… 10 views Like Liked * IT Consulting for the Efficient Architecture Workshop 451 views Like Liked * The Open Group Panel Explains How the ArchiMate Modeling Language and The Open G… 84 views Like Liked * Cloud Computing - A Pragmatic Approach to Cloud Adoption 904 views Like Liked * Lecture 1 2152 views Like Liked * Innovations in Grid Computing with Oracle Coherence 655 views Like Liked * MASSIVE sheds new light on complex research 134 views Like Liked * We Can Fix Your Network Problems Fast 102 views Like Liked * NZ Government End User Computing Reference Architecture 154 views Like Liked * Advanced computer architecture 75 views Like Liked * Fix computer problems 759 views Like Liked * Advanced Architecture Analysis | January 2010 365 views Like Liked * Cloud Economics: Optimising for Cost 3389 views Like Liked * Mobile Cloud Computing Architectures 4614 views Like Liked * Architecture solution architecture method 12277 views Like Liked * Green Architecture 84 views Like Liked * Orchestration and provisioning architecture for effective service management 1226 views Like Liked * Live a life_that_matters Like Liked * Live a life_that_matters 1025 views Like Liked * Advanced Comuter Architecture Ch6 Problem Solutions 1139 views Like Liked * Advanced Computer Architecture chapter 5 problem solutions 5346 views Like Liked * Two Choices 617 views Like Liked * IEEE 12207 5952 views Like Liked * Lecture 13 2337 views Like Liked * Lecture 15 1220 views Like Liked * Lecture 12 1643 views Like Liked * Lecture 11 4594 views Like Liked * Lecture 8 9 1379 views Like Liked * Lecture 10 1990 views Like Liked * Lecture 7n 778 views Like Liked * Lecture 6 3002 views Like Liked * Lecture 5 3411 views Like Liked * Lecture 4 3835 views Like Liked * Lecture 14 2472 views Like Liked * Moble Communication 3799 views Like Liked * Ch20 517 views Like Liked * Ch18 632 views Like Liked * Ch19 773 views Like Liked * Ch17 621 views Like Liked * Ch16 773 views Like Liked * Ch15 573 views Like Liked * Ch14 666 views Like Liked * Ch13 416 views Like Liked * Ch12 973 views Like Liked * Ch11 438 views Like Liked * Ch09 496 views Like Liked * Ch10 506 views Like Liked * Ch07 373 views Like Liked * Ch08 644 views Like Liked * Ch06 464 views Like Liked * Ch05 516 views Like Liked * Ch04 898 views Like Liked * Ch03 1000 views Like Liked * Ch02 1212 views Like Liked * Ch01 558 views Like Liked * Introduction &amp; Wireless Transmission 6785 views Like Liked * Union Judiciary 5090 views Like Liked * The High Courts 840 views Like Liked Follow Author * * Tweet * * * Pin It * Wordpress + Follow Advanced Computer Architecture Chapter 123 Problems Solution by Mahinth Christensen on Nov 05, 2010 * 11,178 views Advanced Computer Architecture by Kai Hwang solutions of selected problems in Chapter 1,2,3 More… Advanced Computer Architecture by Kai Hwang solutions of selected problems in Chapter 1,2,3 Less Accessibility * View text version Categories * * Education Upload Details Uploaded via SlideShare as Adobe PDF Usage Rights Flagged as inappropriate Flag as inappropriate Flag as inappropriate Select your reason for flagging this presentation as inappropriate.
If needed, use thefeedback form to let us know more details.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>None Pornographic Defamatory Illegal/Unlawful Spam Other Terms Of Service Violation Cancel File a copyright complaint Statistics Likes 3 Downloads 719 Comments 7 Embed Views 0 Views on SlideShare 11,178 Total Views 11,178 * 7 comments * Notes on Slide 1 1–7 of7 previous next Post a comment * Devashish Vaghela please upload it in english...
1 month ago Reply Are you sure you want to Yes No * milinraijada Hello sir i want complete solution of ch 1 exercise as soon as possible please upload it 2 months ago Reply Are you sure you want to Yes No * praveensen_it Thanks a lot.....
4 months ago Reply Are you sure you want to Yes No * atulshingade thanx a lot.............
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>4 months ago Reply Are you sure you want to Yes No * Siddu Kottur thanku 7 months ago Reply Are you sure you want to Yes No * annulata thanx 9 months ago Reply Are you sure you want to Yes No * shaikhjuberk thankx.............................
1 year ago Reply Are you sure you want to Yes No Subscribe to comments Post Comment Edit your comment Cancel * 3 Likes * manjarikaushik 10 months ago * surenderbairwa 1 year ago * Maulik Shah Tags i sem 1 year ago More… Advanced Computer Architecture Chapter 123 Problems Solution Document Transcript * No transcript available. * Follow us on LinkedIn * Follow us on Twitter * Find us on Facebook * Find us on Google+ * Learn About Us * About * Careers * Our Blog * Press * Contact us * Help &amp; Support * Using SlideShare * SlideShare 101 * Terms of Use * Privacy Policy * Copyright &amp; DMCA * Community Guidelines * SlideShare on mobile * Pro &amp; more * Go PRO New * Business Solutions * Developers &amp; API * Developers Section * Developers Group * Engineering Blog * Blog Widgets © 2013 SlideShare Inc.
All rights reserved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>RSS Feed * × This activity has also been shared with your LinkedIn network  Undo LinkedIn share  Settings * Edit your favorites Cancel Computer Architecture for Solving Consistent Labelling Problems We use cookies to enhance your experience on our website.
By continuing to use our website, you are agreeing to our use of cookies.
You can change your cookie settings at any time.Find out more Skip Navigation Oxford Journals * Contact Us * My Basket * My Account Computer Journal * About This Journal * Contact This Journal * Subscriptions * View Current Issue (Volume 56 Issue 4 April 2013)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Archive * Search * Oxford Journals * Mathematics &amp; Physical Sciences * Computer Journal * Volume 28 Issue 2 * Pp.
105-110.
Computer Architecture for Solving Consistent Labelling Problems * J.
R. Ullmann 1 ,* , * R.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>M. Haralick 2 ,§ and * L.
G. Shapiro 2 ,§ * 1Department of Computer Science, University of Sheffield, Sheffield, UK, 2Department of Computer Science, Virginia Polytechnic Institute and State University, Blacksburg, USA Abstract Consistent labelling problems are a family of NP-complete constraint satisfaction problems such as school timetabling, for which a conventional computer may be too slow.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There are a variety of techniques for reducing the elapsed time to find one or all solutions to a consistent labelling problem.
In this paper we discuss and illustrate solutions consisting of special hardware to accomplish the required constraint propagation and an asynchronous network of intercommunicating computers to accomplish the tree search in parallel.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>« Previous | Next Article » Table of Contents This Article * The Computer Journal (1985) 28 (2): 105-110. doi: 10.1093/comjnl/28.2.105 * » Abstract * Full Text (PDF)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Classifications * * Article Services * Alert me when cited * Alert me if corrected * Find similar articles * Similar articles in Web of Science * Add to my archive * Download citation * Request Permissions Citing Articles * Load citing article information * Citing articles via CrossRef * Citing articles via Scopus * Citing articles via Web of Science * Citing articles via Google Scholar Google Scholar * Articles by Ullmann, J.
R. * Articles by Shapiro, L.
G. * Search for related content Related Content * Load related web page information Share * Email this article * * CiteULike * Delicious * Facebook * Google+ * Mendeley * Twitter What's this?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Search this journal:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Advanced » Current Issue * April 2013 56 (4) * * Alert me to new issues The Journal * About this journal * Rights &amp; Permissions * Dispatch date of the next issue * The Wilkes Award * We are mobile – find out more * Reviewer Guidelines * Guidelines for Editors * Review and Appeals Process Published on behalf of * BCS, The Chartered Institute for IT Impact factor: 0.785 5-Yr impact factor: 0.943 * View full editorial board For Authors * Instructions to authors * Online submission instructions * Submit a manuscript * Self archiving policy Alerting Services * Email table of contents * Email Advance Access * CiteTrack * XML RSS feed Corporate Services * Advertising sales * Reprints * Supplements Most * Most Read * Drawing ellipses, hyperbolas or parabolas with a fixed number of points and maximum inscribed area * An Algorithm for Constructing University Timetables * Interval Routing * A Simplex Method for Function Minimization * Energy-Efficient Cloud Computing » View all Most Read articles * Most Cited * A Simplex Method for Function Minimization * Hierarchical grouping methods and stopping rules: an evaluation * How Many Clusters?
Which Clustering Method?
Answers Via Model-Based Cluster Analysis * A new approach to variable metric algorithms * A General Theory of Classificatory Sorting Strategies: 1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Hierarchical Systems » View all Most Cited articles Disclaimer: Please note that abstracts for content published before 1996 were created through digital scanning and may therefore not exactly replicate the text of the original print issues.
All efforts have been made to ensure accuracy, but the Publisher will not be held responsible for any remaining inaccuracies.
If you require any further clarification, please contact ourCustomer Services Department.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Online ISSN 1460-2067 - Print ISSN 0010-4620 Copyright ©   2013  British Computer Society Oxford Journals Oxford University Press * Site Map * Privacy Policy * Cookie Policy * Legal Notices * Frequently Asked Questions Other Oxford University Press sites: Oxford University Press Oxford Journals China Oxford Journals Japan Academic &amp; Professional books Children's &amp; Schools Books Dictionaries &amp; Reference Dictionary of National Biography Digital Reference English Language Teaching Higher Education Textbooks International Education Unit Law Medicine Music Online Products &amp; Publishing Oxford Bibliographies Online Oxford Dictionaries Online Oxford English Dictionary Oxford Language Dictionaries Online Oxford Scholarship Online Reference Rights and Permissions Resources for Retailers &amp; Wholesalers Resources for the Healthcare Industry Very Short Introductions World's Classics Hazard (computer architecture) - Wikipedia, the free encyclopedia Hazard (computer architecture)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>From Wikipedia, the free encyclopedia Jump to: navigation , search This articleneeds additional citations for verification.
Please help improve this article byadding citations to reliable sources .
Unsourced material may bechallenged and removed .
(March 2012) In CPU design , Hazards are problems with theinstruction pipeline in central processing unit (CPU) microarchitectures when the next instruction cannot execute in the following clock cycle,[1]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>and can potentially lead to incorrect computation results.
There are typically three types of hazards:[2]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* data hazards * structural hazards * control hazards (branching hazards) There are several methods used to deal with hazards, includingpipeline stalls , pipeline bubbling, register forwarding , and in the case ofout-of-order execution , the scoreboarding method and the Tomasulo algorithm .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Contents * 1 Background * 2 Types * 2.1 Data hazards * 2.1.1 Read After Write (RAW)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 2.1.1.1 Example * 2.1.2 Write After Read (WAR)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 2.1.2.1 Example * 2.1.3 Write After Write (WAW)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 2.1.3.1 Example * 2.2 Structural hazards * 2.3 Control hazards (branch hazards)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 3 Eliminating hazards * 3.1 Generic * 3.1.1 Pipeline bubbling * 3.2 Data hazards * 3.2.1 Register forwarding * 3.2.1.1 Example * 3.3 Control hazards (branch hazards)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 4 References * 5 Sources * 6 See also [edit ]
Background Further information: instruction pipeline Instructions in a pipelined processor are performed in several stages, so that at any given time several instructions are being processed in the various stages of the pipeline, such as fetch and execute.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There are many different instruction pipeline microarchitectures , and instructions may beexecuted out-of-order .
A hazard occurs when two or more of these simultaneous (possibly out of order) instructions conflict.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Types [edit ]
Data hazards Data hazards occur when instructions that exhibit data dependence , modify data in different stages of a pipeline.
Ignoring potential data hazards can result inrace conditions (sometimes known as race hazards).
There are three situations in which a data hazard can occur:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* read after write (RAW), a true dependency * write after read (WAR), an anti-dependency * write after write (WAW), an output dependency Consider two instructions i1 andi2, with i1 occurring before i2 in program order.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Read After Write (RAW)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(i2 tries to read a source before i1 writes to it) A read after write (RAW) data hazard refers to a situation where an instruction refers to a result that has not yet been calculated or retrieved.
This can occur because even though an instruction is executed after a previous instruction, the previous instruction has not been completely processed through the pipeline.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Example For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>i1.
R2 &lt;- R1 + R3 i2.
R4 &lt;- R2 + R3 The first instruction is calculating a value to be saved in register R2, and the second is going to use this value to compute a result for registerR4.
However, in apipeline , when we fetch the operands for the 2nd operation, the results from the first will not yet have been saved, and hence we have a data dependency.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>We say that there is a data dependency with instruction i2, as it is dependent on the completion of instructioni1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Write After Read (WAR)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(i2 tries to write a destination before it is read by i1) A write after read (WAR) data hazard represents a problem with concurrent execution.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Example For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>i1.
R4 &lt;- R1 + R3 i2.
R3 &lt;- R1 + R2 If we are in a situation that there is a chance that i2 may be completed beforei1 (i.e. with concurrent execution) we must ensure that we do not store the result of registerR3 before i1 has had a chance to fetch the operands.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Write After Write (WAW)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(i2 tries to write an operand before it is written by i1) A write after write (WAW) data hazard may occur in aconcurrent execution environment.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Example For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>i1.
R2 &lt;- R4 + R7 i2.
R2 &lt;- R1 + R3 We must delay the WB (Write Back) of i2 until the execution of i1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Structural hazards A structural hazard occurs when a part of the processor's hardware is needed by two or more instructions at the same time.
A canonical example is a single memory unit that is accessed both in the fetch stage where an instruction is retrieved from memory, and the memory stage where data is written and/or read from memory.[3]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>They can often be resolved by separating the component intoorthogonal units (such as separate caches) or bubbling the pipeline .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Control hazards (branch hazards)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Further information: branch (computer science) Branching hazards (also known as control hazards) occur withbranches .
On many instruction pipeline microarchitectures, the processor will not know the outcome of the branch when it needs to insert a new instruction into the pipeline (normally the fetch stage).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Eliminating hazards [edit ]
Generic [edit ]
Pipeline bubbling Main article: Bubble (computing) Bubbling the pipeline, also known as apipeline break or a pipeline stall, is a method for preventing data, structural, and branch hazards from occurring.
As instructions are fetched, control logic determines whether a hazard could/will occur.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If this is true, then the control logic insertsNOPs into the pipeline.
Thus, before the next instruction (which would cause the hazard) is executed, the previous one will have had sufficient time to complete and prevent the hazard.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If the number of NOPs is equal to the number of stages in the pipeline, the processor has been cleared of all instructions and can proceed free from hazards.
This is calledflushing the pipeline.
All forms of stalling introduce a delay before the processor can resume execution.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Data hazards There are several main solutions and algorithms used to resolve data hazards:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* insert a pipeline bubble whenever a read after write (RAW) dependency is encountered, guaranteed to increase latency, or * utilize out-of-order execution to potentially prevent the need for pipeline bubbles * utilize register forwarding to use data from later stages in the pipeline In the case ofout-of-order execution , the algorithm used can be:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* scoreboarding , in which case a pipeline bubble will only be needed when there is no functional unit available * the Tomasulo algorithm , which utilizesregister renaming allowing the continual issuing of instructions We can delegate the task of removing data dependencies to the compiler, which can fill in an appropriate number ofNOP instructions between dependent instructions to ensure correct operation, or re-order instructions where possible.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Register forwarding Forwarding involves feeding output data into a previous stage of the pipeline.
Forwarding is implemented by feeding back the output of an instruction into the previous stage(s) of the pipeline as soon as the output of that instruction is available.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Example NOTE: In the following examples, computed values are in bold, while Register numbers are not.
For instance, let's say we want to write the value 3 to register 1, (which already contains a 6), and then add 7 to register 1 and store the result in register 2, i.e.:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Instruction 0: Register 1 = 6 Instruction 1: Register 1 = 3 Instruction 2: Register 2 = Register 1 +7 = 10 Following execution, register 2 should contain the value10.
However, if Instruction 1 (write 3 to register 1) does not completely exit the pipeline before Instruction 2 starts execution, it means that Register 1 does not contain the value3 when Instruction 2 performs its addition.
In such an event, Instruction 2 adds7 to the old value of register 1 ( 6), and so register 2 would contain 13 instead, i.e.:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Instruction 0: Register 1 = 6 Instruction 2: Register 2 = Register 1 + 7 = 13 Instruction 1: Register 1 =3 This error occurs because Instruction 2 reads Register 1 before Instruction 1 has committed/stored the result of its write operation to Register 1.
So when Instruction 2 is reading the contents of Register 1, register 1 still contains6, not 3.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Forwarding (described below) helps correct such errors by depending on the fact that the output of Instruction 1 (which is3) can be used by subsequent instructionsbefore the value 3 is committed to/stored in Register 1.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Forwarding applied to our example means that we do not wait to commit/store the output of Instruction 1 in Register 1 (in this example, the output is3) before making that output available to the subsequent instruction (in this case, Instruction 2).
The effect is that Instruction 2 uses the correct (the more recent) value of Register 1: the commit/store was made immediately and not pipelined.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>With forwarding enabled, the ID/EX or Instruction Decode/Execution stage of the pipeline now has two inputs: the value read from the register specified (in this example, the value6 from Register 1), and the new value of Register 1 (in this example, this value is3) which is sent from the next stage (EX/MEM) or Instruction Execute/Memory Access.
Additional control logic is used to determine which input to use.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
Control hazards (branch hazards)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>To avoid control hazards microarchitectures can:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* insert a pipeline bubble (discussed above), guaranteed to increase latency , or * use branch prediction and essentially make educated guesses about which instructions to insert, in which case apipeline bubble will only be needed in the case of an incorrect prediction In the event that a branch causes a pipeline bubble after incorrect instructions have entered the pipeline, care must be taken to prevent any of the wrongly-loaded instructions from having any effect on the processor state excluding energy wasted processing them before they were discovered to be loaded incorrectly.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
References * &lt;s&gt; Patterson &amp; Hennessy 2009 , p. 335. * &lt;s&gt; Patterson &amp; Hennessy 2009 , pp. 335-343. * &lt;s&gt; Patterson &amp; Hennessy 2009 , p. 336. [edit ]
Sources * Patterson, David ; Hennessy, John (2009).
Computer Organization and Design (4th ed.).
Morgan Kaufmann .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>ISBN   978-0-12-374493-7 .  * Patterson, David ; Hennessy, John (2011).
Computer Architecture: A Quantitative Approach (5th ed.).
Morgan Kaufmann .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>ISBN   978-0-12-383872-8 .  * John P. Shen and Mikko H. Lipasti, Modern Processor Design: Fundamentals of Superscalar Processors, 2004, ISBN: 0070570647 [edit ]
See also * feed-forward * Register renaming * Data dependency * Hazard (logic) * Speculative execution * Branch delay * Branch predication * Branch predictor * v * t * e CPU technologies Architecture * Harvard * Modified Harvard * von Neumann * Dataflow * Comparison Instruction set * CISC * EDGE * EPIC * MISC * OISC * RISC * VLIW * NISC * ZISC Word size * 1-bit * 4-bit * 8-bit * 9-bit * 10-bit * 12-bit * 15-bit * 16-bit * 18-bit * 22-bit * 24-bit * 25-bit * 26-bit * 27-bit * 31-bit * 32-bit * 33-bit * 34-bit * 36-bit * 39-bit * 40-bit * 48-bit * 50-bit * 60-bit * 64-bit * 128-bit * 256-bit * variable Pipeline * Instruction pipelining * In-order &amp; out-of-order execution * Branch predictor * Register renaming * Speculative execution * Hazards * Bubble Parallel level * Bit * Instruction ( Scalar * Superscalar ) * Data (Vector ) * Task Threads * Multithreading * Simultaneous multithreading * Hyper-threading * Super-threading Flynn's taxonomy * SISD * SIMD * MISD * MIMD (SPMD ) Types * Digital signal processor * Microcontroller * System on a chip * Cellular Components * Arithmetic logic unit * Barrel shifter * Floating-point unit * Back-side bus * Multiplexer * Demultiplexer * Registers * Memory management unit * Translation lookaside buffer * Cache * Register file * Microcode * Control unit * Clock rate Power management * APM * ACPI * Dynamic frequency scaling * Dynamic voltage scaling * Clock gating Retrieved from &quot; http://en.wikipedia.org/w/index.php?
title=Hazard_(computer_architecture)&amp;oldid=541156996 &quot; Categories : * Instruction processing Hidden categories: * Articles needing additional references from March 2012 * All articles needing additional references Navigation menu Personal tools * Create account * Log in Namespaces * Article * Talk Variants Views * Read * Edit * View history Actions Search Navigation * Main page * Contents * Featured content * Current events * Random article * Donate to Wikipedia Interaction * Help * About Wikipedia * Community portal * Recent changes * Contact Wikipedia Toolbox * What links here * Related changes * Upload file * Special pages * Permanent link * Page information * Cite this page Print/export * Create a book * Download as PDF * Printable version Languages * Deutsch * Español * Українська * 中文 * Edit links * This page was last modified on 28 February 2013 at 05:54.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Text is available under the Creative Commons Attribution-ShareAlike License ; additional terms may apply.
By using this site, you agree to theTerms of Use and Privacy Policy.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Contact us * Privacy policy * About Wikipedia * Disclaimers * Mobile view * * Indirection - Wikipedia, the free encyclopedia Indirection From Wikipedia, the free encyclopedia Jump to: navigation , search This article needs additional citations for verification.
Please help improve this article by adding citations to reliable sources .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Unsourced material may bechallenged and removed .
(December 2007) In computer programming , indirection is the ability to reference something using a name, reference, or container instead of the value itself.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The most common form of indirection is the act of manipulating a value through itsmemory address .
For example, accessing avariable through the use of a pointer .
A stored pointer that exists to provide a reference to an object by double indirection is called anindirection node.
In some older computer architectures, indirect words supported a variety of more-or-less complicatedaddressing modes .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A famous aphorism of David Wheeler goes: &quot;All problems in computer science can be solved by another level of indirection&quot;;[1] this is often deliberately mis-quoted with &quot;abstraction layer &quot; substituted for &quot;level of indirection&quot;.Kevlin Henney 's corollary to this is, &quot;...except for the problem of too many layers of indirection.&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Humorous Internet memorandum RFC 1925 insists that:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(6) It is easier to move a problem around (for example, by moving the problem to a different part of the overallnetwork architecture ) than it is to solve it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(6a) (corollary).
It is always possible to add another level of indirection.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Object-oriented programming makes use of indirection extensively, a simple example beingdynamic dispatch .
Higher-level examples of indirection are thedesign patterns of the proxy and the proxy server .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Delegation is another classic example of an indirection pattern.
Instrongly typed interpreted languages with dynamic datatypes , most variable references require a level of indirection: first the type of the variable is checked for safety, and then the pointer to the actual value is dereferenced and acted on.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Recursive data types are usually implemented using indirection because otherwise if a value of a datatype can contain the entirety of another value of the same datatype, there is no limit to the size a value of this datatype could need.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>When doing symbolic programming from a formal mathematical specification the use of indirection can be quite helpful.
To start with a simple example the variablesx, y and z in an equation such as can refer to any number.
One could imagine objects for various numbers and thenx, y and z could point to the specific numbers being used for a particular problem.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The simple example has its limitation as there are infinitely many real numbers.
In various other parts of symbolic programming there are only so many symbols.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>So to move on to a more significant example, in logic the formulaα can refer to any formula, so it could beβ, γ, δ, ... or η→π, ς ∨ σ,....
When set-builder notation is employed the statement Δ ={α} means the set of all formulae — so although the reference is to α there are two levels of indirection here, the first to the set of allα and then the second to a specific formula for each occurrence ofα in the set Δ.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>[edit ]
See also * Handle * Delegation pattern * Pointer * Reference * Fundamental theorem of software engineering [edit ]
References * &lt;s&gt; Diomidis Spinellis.
Another level of indirection .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In Andy Oram and Greg Wilson, editors,Beautiful Code: Leading Programmers Explain How They Think, chapter 17, pages 279–291.
O'Reilly and Associates, Sebastopol, CA, 2007.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Retrieved from &quot; http://en.wikipedia.org/w/index.php?
title=Indirection&amp;oldid=542478598 &quot; Categories : * Data types * Programming constructs * Computing terminology Hidden categories: * Articles needing additional references from December 2007 * All articles needing additional references Navigation menu Personal tools * Create account * Log in Namespaces * Article * Talk Variants Views * Read * Edit * View history Actions Search Navigation * Main page * Contents * Featured content * Current events * Random article * Donate to Wikipedia Interaction * Help * About Wikipedia * Community portal * Recent changes * Contact Wikipedia Toolbox * What links here * Related changes * Upload file * Special pages * Permanent link * Page information * Cite this page Print/export * Create a book * Download as PDF * Printable version Languages * Español * Italiano * 日本語 * Edit links * This page was last modified on 7 March 2013 at 00:43.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Text is available under the Creative Commons Attribution-ShareAlike License ; additional terms may apply.
By using this site, you agree to theTerms of Use and Privacy Policy.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization. * Privacy policy * About Wikipedia * Disclaimers * Contact Wikipedia * Mobile view * * CE/EE 4304 - Computer Architecture - Course Information Fall 2012 Professor C.
D.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Cantrell , UT-Dallas Course Information Teaching Personnel Grading Homework Web Site Required Textbooks Examinations Academic dishonesty TEACHING PERSONNEL Professor Cantrell * Office hours: Saturday afternoons 1:30-3; other times by appointment. * Prof.
Cantrell's office is located in EC 2.302.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Send email to Prof. Cantrell ( cantrell@utdallas.edu) * Telephone numbers: * Voice: (972) 883-2868 Carissa Roper * Office Hours: MW 2:30-3:45 in ECSN 3.610. * Send email to Carissa Roper ( cjr073000@utdallas.edu) WEB SITE The URL of the CE/EE 4304 Web site is http://www.utdallas.edu/~cantrell/ee4304/ .
All course notes and other vital information will be available primarily through the course Web site.
Some information may also be available via eLearning.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>REQUIRED and RECOMMENDED TEXTBOOKS Computer Organization and Design: The Hardware-Software Interface, Fourth Edition, Revised Printing , by Professors David Patterson and John Hennessy.
(Required) GRADING Course % grade = .20 (homework %) + .40 (exam 1 %) + .40 (exam 2 %)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>HOMEWORK Grading: Homework will receive 70% of full credit if you make a serious attempt at solving all problems.
The remaining 30% of the homework credit will be given if the answers are correct.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Homework Policy: * NO LATE HOMEWORK!
Homework will be considered late at 10:00 AM the day after it is due, and will not be graded without a valid excuse. * ALL HAND-WRITTEN ANSWERS TO HOMEWORK PROBLEMS MUST BE ON ENGINEERING PAPER TO RECEIVE CREDIT.
NO EXCEPTIONS!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(Pads of engineering paper are available in the UTD Bookstore and in many office-supply stores.) * Pencil is preferred.
Also, please use only one side of the paper. * Organize your answer as shown in Example 1 or Example 2 .
State clearly the assumptions made in solving the problem, the theory or formula(s) to be used, and show all of the steps of the solution.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Organizing your work in this way will help you follow the directions given for each problem. * Some measures to ensure that your homework includes all required steps include (but are not limited to): * Label equations taken from the text. * List all given data and what you are looking for. * List formulas to be combined or used before you start algebraic manipulations. * Make numerical substitutions only at the end, if required. * Define all variables you use. * Explain what you are doing. * Document your computer programs. * Units are required thoughout your solution, wherever applicable.
Common units used in computer design include clock periods (cycles), seconds, Hz (hertz, cycles per second), and MHz (megahertz, millions of cycles per second). * Box your final answer so that it can be found quickly. * Number each problem.
The assigned order is preferred. * Number your pages using the notation m/n in the upper right corners of your engineering sheets, wherem is the number of the current page and n is the total number of pages in the current assignment.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>SeeExample 1 or Example 2 . * Staple your homework.
If homework is not stapled, points will be deducted and neither the TA nor the instructor will be responsible if pages get lost. * Full credit cannot be given, even if a solution is numerically correct, unless the TA can follow it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Partial credit will never be given for incomprehensible, poorly organized, or unexplained answers. * Copies of sample or template programs with no additional work on your part, and source programs without output, will receive no credit. * Take the time to do a good job.
This is part of learning to write useful, understandable engineering reports.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Homework Advice: DO NOT COPY HOMEWORK SOLUTIONS!
You will cheat only yourself if you do.
Many of the problems on the midterm and final exams will be very similar to exercises that have been assigned as homework.
If you do not attempt to solve the homework exercises yourself, you will be completely unprepared for the exams, and will be likely to fail the course.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>EXAMINATIONS Please do not bring your own paper to an examination.
Paper will be given to you after you enter the examination room.
Please do bring your student ID to the examination.
We reserve the right to refuse admission to anyone who does not have a valid student ID that shows an UTD ID number that matches the number associated with the person's name in University records.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Please wait outside the examination room until Dr. Cantrell tells you that you may enter.
Seating isassigned randomly.
Please do not sit anywhere except your assigned seat.
Also, please leave all personal belongings (backpacks, etc.) in the front of the room for the entire duration of the examination.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>You will be allowed to bring one 8 1/2 by 11 inch formula sheet into the examination.
Dr. Cantrell must inspect and sign the formula sheet before it can be used.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Unless directed otherwise, please do not write any answers for which you want to receive credit on the exam paper that is handed out.
You must return all exam papers to Dr. Cantrell or Dr. Dodge before leaving the room.
These papers will shredded after the end of the examination.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Exam #1: Monday, October 8, 2012, during regular class hours, in MC 1.304.
The exam will beCLOSED-BOOK, and NO CALCULATORS WILL BE ALLOWED.
All calculations must be done by hand, with all work shown, in order to receive full credit.
The exam will cover the topics assigned as homework through October 4.Final exam: Friday, December 14, 2012, 11:00 AM to 1:45 PM, in ECSS 2.410.
The exam will beCLOSED-BOOK, and NO CALCULATORS WILL BE ALLOWED.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All calculations must be done by hand, with all work shown, in order to receive full credit.
The exam will cover all topics assigned as homework.
ACADEMIC DISHONESTY Use of any materials other than those listed above, or use of a calculator, or consultation with any person (other than Prof. Cantrell or one of the TAs assisting him) at any location during an examination, constitutes cheating.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If cheating is detected, the incident will be dealt with according to established UT-Dallas procedures.
Possible disciplinary actions for academic dishonesty include a failing grade on the examination, a failing grade in this course, or expulsion from the University, depending on the severity of the infraction.
Introduction to Parallel Computing Introduction to Parallel Computing Author: Blaise Barney, Lawrence Livermore National Laboratory UCRL-MI-133316 Table of Contents * Abstract * Overview * What is Parallel Computing?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Why Use Parallel Computing?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Concepts and Terminology * von Neumann Computer Architecture * Flynn's Classical Taxonomy * Some General Parallel Terminology * Parallel Computer Memory Architectures * Shared Memory * Distributed Memory * Hybrid Distributed-Shared Memory * Parallel Programming Models * Overview * Shared Memory Model * Threads Model * Distributed Memory / Message Passing Model * Data Parallel Model * Hybrid Model * SPMD and MPMP * Designing Parallel Programs * Automatic vs.
Manual Parallelization * Understand the Problem and the Program * Partitioning * Communications * Synchronization * Data Dependencies * Load Balancing * Granularity * I/O * Limits and Costs of Parallel Programming * Performance Analysis and Tuning * Parallel Examples * Array Processing * PI Calculation * Simple Heat Equation * 1-D Wave Equation * References and More Information Abstract This tutorial is the first of eight tutorials in the 4+ day &quot;Using LLNL's Supercomputers&quot; workshop.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It is intended to provide only a very quick overview of the extensive and broad topic of Parallel Computing, as a lead-in for the tutorials that follow it.
As such, it covers just the very basics of parallel computing, and is intended for someone who is just becoming acquainted with the subject and who is planning to attend one or more of the other tutorials in this workshop.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It is not intended to cover Parallel Programming in depth, as this would require significantly more time.
The tutorial begins with a discussion on parallel computing - what it is and how it's used, followed by a discussion on concepts and terminology associated with parallel computing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The topics of parallel memory architectures and programming models are then explored.
These topics are followed by a series of practical discussions on a number of the complex issues related to designing and running parallel programs.
The tutorial concludes with several examples of how to parallelize simple serial programs.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Overview What is Parallel Computing?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Traditionally, software has been written for serial computation: * To be run on a single computer having a single Central Processing Unit (CPU); * A problem is broken into a discrete series of instructions. * Instructions are executed one after another. * Only one instruction may execute at any moment in time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In the simplest sense, parallel computing is the simultaneous use of multiple compute resources to solve a computational problem: * To be run using multiple CPUs * A problem is broken into discrete parts that can be solved concurrently * Each part is further broken down to a series of instructions * Instructions from each part execute simultaneously on different CPUs For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The compute resources might be: * A single computer with multiple processors; * An arbitrary number of computers connected by a network; * A combination of both.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The computational problem should be able to: * Be broken apart into discrete pieces of work that can be solved simultaneously; * Execute multiple program instructions at any moment in time; * Be solved in less time with multiple compute resources than with a single compute resource.
The Universe is Parallel:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Parallel computing is an evolution of serial computing that attempts to emulate what has always been the state of affairs in the natural world: many complex, interrelated events happening at the same time, yet within a temporal sequence.
For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Real World is Massively Parallel Uses for Parallel Computing:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Science and Engineering: Historically, parallel computing has been considered to be &quot;the high end of computing&quot;, and has been used to model difficult problems in many areas of science and engineering: * Atmosphere, Earth, Environment * Physics - applied, nuclear, particle, condensed matter, high pressure, fusion, photonics * Bioscience, Biotechnology, Genetics * Chemistry, Molecular Sciences * Geology, Seismology * Mechanical Engineering - from prosthetics to spacecraft * Electrical Engineering, Circuit Design, Microelectronics * Computer Science, Mathematics * Industrial and Commercial: Today, commercial applications provide an equal or greater driving force in the development of faster computers.
These applications require the processing of large amounts of data in sophisticated ways.
For example: * Databases, data mining * Oil exploration * Web search engines, web based business services * Medical imaging and diagnosis * Pharmaceutical design * Financial and economic modeling * Management of national and multi-national corporations * Advanced graphics and virtual reality, particularly in the entertainment industry * Networked video and multi-media technologies * Collaborative work environments Overview Why Use Parallel Computing?
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Save time and/or money: In theory, throwing more resources at a task will shorten its time to completion, with potential cost savings.
Parallel computers can be built from cheap, commodity components. * Solve larger problems: Many problems are so large and/or complex that it is impractical or impossible to solve them on a single computer, especially given limited computer memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For example: * &quot;Grand Challenge&quot; (en.wikipedia.org/wiki/Grand_Challenge ) problems requiring PetaFLOPS and PetaBytes of computing resources. * Web search engines/databases processing millions of transactions per second * Provide concurrency: A single compute resource can only do one thing at a time.
Multiple computing resources can be doing many things simultaneously.
For example, the Access Grid (www.accessgrid.org ) provides a global collaboration network where people from around the world can meet and conduct work &quot;virtually&quot;. * Use of non-local resources: Using compute resources on a wide area network, or even the Internet when local compute resources are scarce.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For example: * SETI@home (setiathome.berkeley.edu ) over 1.3 million users, 3.2 million computers in nearly every country in the world.
Source: www.boincsynergy.com/stats/ (July, 2012). * Folding@home (folding.stanford.edu ) uses over 450,000 cpus globally (July 2011) * Limits to serial computing: Both physical and practical reasons pose significant constraints to simply building ever faster serial computers: * Transmission speeds - the speed of a serial computer is directly dependent upon how fast data can move through hardware.
Absolute limits are the speed of light (30 cm/nanosecond) and the transmission limit of copper wire (9 cm/nanosecond).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Increasing speeds necessitate increasing proximity of processing elements. * Limits to miniaturization - processor technology is allowing an increasing number of transistors to be placed on a chip.
However, even with molecular or atomic-level components, a limit will be reached on how small components can be. * Economic limitations - it is increasingly expensive to make a single processor faster.
Using a larger number of moderately fast commodity processors to achieve the same (or better) performance is less expensive. * Current computer architectures are increasingly relying upon hardware level parallelism to improve performance: * Multiple execution units * Pipelined instructions * Multi-core Who and What?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Top500.org provides statistics on parallel computing - the charts below are just a sampling.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* During the past 20+ years, the trends indicated by ever faster networks, distributed systems, and multi-processor computer architectures (even at the desktop level) clearly show thatparallelism is the future of computing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In this same time period, there has been a greater than 1000x increase in supercomputer performance, with no end currently in sight.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The race is already on for Exascale Computing!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Concepts and Terminology von Neumann Architecture * Named after the Hungarian mathematician John von Neumann who first authored the general requirements for an electronic computer in his 1945 papers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Since then, virtually all computers have followed this basic design, differing from earlier computers which were programmed through &quot;hard wiring&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Comprised of four main components: * Memory * Control Unit * Arithmetic Logic Unit * Input/Output * Read/write, random access memory is used to store both program instructions and data * Program instructions are coded data which tell the computer to do something * Data is simply information to be used by the program * Control unit fetches instructions/data from memory, decodes the instructions and thensequentially coordinates operations to accomplish the programmed task. * Aritmetic Unit performs basic arithmetic operations * Input/Output is the interface to the human operator * So what?
Who cares?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Well, parallel computers still follow this basic design, just multiplied in units.
The basic, fundamental architecture remains the same.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Concepts and Terminology Flynn's Classical Taxonomy * There are different ways to classify parallel computers.
For example: * http://www.gigaflop.demon.co.uk/comp/chapt7.htm/ * http://vedyadhara.ignou.ac.in/wiki/images/8/8e/B1U2mcse-011.pdf * One of the more widely used classifications, in use since 1966, is called Flynn's Taxonomy.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Flynn's taxonomy distinguishes multi-processor computer architectures according to how they can be classified along the two independent dimensions of Instruction and Data.
Each of these dimensions can have only one of two possible states:Single or Multiple.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The matrix below defines the 4 possible classifications according to Flynn:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>S I S D Single Instruction, Single Data S I M D Single Instruction, Multiple Data M I S D Multiple Instruction, Single Data M I M D Multiple Instruction, Multiple Data Single Instruction, Single Data (SISD): * A serial (non-parallel) computer * Single Instruction: Only one instruction stream is being acted on by the CPU during any one clock cycle * Single Data: Only one data stream is being used as input during any one clock cycle * Deterministic execution * This is the oldest and even today, the most common type of computer * Examples: older generation mainframes, minicomputers and workstations; most modern day PCs.
UNIVAC1 IBM 360 CRAY1 CDC 7600 PDP1 Dell Laptop Single Instruction, Multiple Data (SIMD): * A type of parallel computer * Single Instruction: All processing units execute the same instruction at any given clock cycle * Multiple Data: Each processing unit can operate on a different data element * Best suited for specialized problems characterized by a high degree of regularity, such as graphics/image processing. * Synchronous (lockstep) and deterministic execution * Two varieties: Processor Arrays and Vector Pipelines * Examples: * Processor Arrays: Connection Machine CM-2, MasPar MP-1 &amp; MP-2, ILLIAC IV * Vector Pipelines: IBM 9000, Cray X-MP, Y-MP &amp; C90, Fujitsu VP, NEC SX-2, Hitachi S820, ETA10 * Most modern computers, particularly those with graphics processor units (GPUs) employ SIMD instructions and execution units.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>ILLIAC IV MasPar          Cray X-MP Cray Y-MP Thinking Machines CM-2 Cell Processor (GPU)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Multiple Instruction, Single Data (MISD): * A type of parallel computer * Multiple Instruction: Each processing unit operates on the data independently via separate instruction streams. * Single Data: A single data stream is fed into multiple processing units. * Few actual examples of this class of parallel computer have ever existed.
One is the experimental Carnegie-Mellon C.mmp computer (1971). * Some conceivable uses might be: * multiple frequency filters operating on a single signal stream * multiple cryptography algorithms attempting to crack a single coded message.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Multiple Instruction, Multiple Data (MIMD): * A type of parallel computer * Multiple Instruction: Every processor may be executing a different instruction stream * Multiple Data: Every processor may be working with a different data stream * Execution can be synchronous or asynchronous, deterministic or non-deterministic * Currently, the most common type of parallel computer - most modern supercomputers fall into this category. * Examples: most current supercomputers, networked parallel computer clusters and &quot;grids&quot;, multi-processor SMP computers, multi-core PCs. * Note: many MIMD architectures also include SIMD execution sub-components IBM POWER5 HP/Compaq Alphaserver Intel IA32 AMD Opteron Cray XT3 IBM BG/L Concepts and Terminology Some General Parallel Terminology Like everything else, parallel computing has its own &quot;jargon&quot;.
Some of the more commonly used terms associated with parallel computing are listed below.
Most of these will be discussed in more detail later.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Supercomputing / High Performance Computing (HPC) Using the world's fastest and largest computers to solve large problems.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Node A standalone &quot;computer in a box&quot;.
Usually comprised of multiple CPUs/processors/cores.
Nodes are networked together to comprise a supercomputer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CPU / Socket / Processor / Core This varies, depending upon who you talk to.
In the past, a CPU (Central Processing Unit) was a singular execution component for a computer.
Then, multiple CPUs were incorporated into a node.
Then, individual CPUs were subdivided into multiple &quot;cores&quot;, each being a unique execution unit.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CPUs with multiple cores are sometimes called &quot;sockets&quot; - vendor dependent.
The result is a node with multiple CPUs, each containing multiple cores.
The nomenclature is confused at times.
Wonder why?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Task A logically discrete section of computational work.
A task is typically a program or program-like set of instructions that is executed by a processor.
A parallel program consists of multiple tasks running on multiple processors.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Pipelining Breaking a task into steps performed by different processor units, with inputs streaming through, much like an assembly line; a type of parallel computing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Shared Memory From a strictly hardware point of view, describes a computer architecture where all processors have direct (usually bus based) access to common physical memory.
In a programming sense, it describes a model where parallel tasks all have the same &quot;picture&quot; of memory and can directly address and access the same logical memory locations regardless of where the physical memory actually exists.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Symmetric Multi-Processor (SMP) Hardware architecture where multiple processors share a single address space and access to all resources; shared memory computing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Distributed Memory In hardware, refers to network based memory access for physical memory that is not common.
As a programming model, tasks can only logically &quot;see&quot; local machine memory and must use communications to access memory on other machines where other tasks are executing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Communications Parallel tasks typically need to exchange data.
There are several ways this can be accomplished, such as through a shared memory bus or over a network, however the actual event of data exchange is commonly referred to as communications regardless of the method employed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Synchronization The coordination of parallel tasks in real time, very often associated with communications.
Often implemented by establishing a synchronization point within an application where a task may not proceed further until another task(s) reaches the same or logically equivalent point.
Synchronization usually involves waiting by at least one task, and can therefore cause a parallel application's wall clock execution time to increase.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Granularity In parallel computing, granularity is a qualitative measure of the ratio of computation to communication. * Coarse: relatively large amounts of computational work are done between communication events * Fine: relatively small amounts of computational work are done between communication events Observed Speedup Observed speedup of a code which has been parallelized, defined as:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>wall-clock time of serial execution ----------------------------------- wall-clock time of parallel execution One of the simplest and most widely used indicators for a parallel program's performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Overhead The amount of time required to coordinate parallel tasks, as opposed to doing useful work.
Parallel overhead can include factors such as: * Task start-up time * Synchronizations * Data communications * Software overhead imposed by parallel compilers, libraries, tools, operating system, etc. * Task termination time Massively Parallel Refers to the hardware that comprises a given parallel system - having many processors.
The meaning of &quot;many&quot; keeps increasing, but currently, the largest parallel computers can be comprised of processors numbering in the hundreds of thousands.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Embarrassingly Parallel Solving many similar, but independent tasks simultaneously; little to no need for coordination between the tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Scalability Refers to a parallel system's (hardware and/or software) ability to demonstrate a proportionate increase in parallel speedup with the addition of more processors.
Factors that contribute to scalability include: * Hardware - particularly memory-cpu bandwidths and network communications * Application algorithm * Parallel overhead related * Characteristics of your specific application and coding Parallel Computer Memory Architectures Shared Memory General Characteristics:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Shared memory parallel computers vary widely, but generally have in common the ability for all processors to access all memory as global address space.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Multiple processors can operate independently but share the same memory resources.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Changes in a memory location effected by one processor are visible to all other processors.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Shared memory machines can be divided into two main classes based upon memory access times:UMA and NUMA.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Uniform Memory Access (UMA):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Most commonly represented today by Symmetric Multiprocessor (SMP) machines * Identical processors * Equal access and access times to memory * Sometimes called CC-UMA - Cache Coherent UMA.
Cache coherent means if one processor updates a location in shared memory, all the other processors know about the update.
Cache coherency is accomplished at the hardware level.
Non-Uniform Memory Access (NUMA):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Often made by physically linking two or more SMPs * One SMP can directly access memory of another SMP * Not all processors have equal access time to all memories * Memory access across link is slower * If cache coherency is maintained, then may also be called CC-NUMA - Cache Coherent NUMA Shared Memory (UMA)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Shared Memory (NUMA) Advantages: * Global address space provides a user-friendly programming perspective to memory * Data sharing between tasks is both fast and uniform due to the proximity of memory to CPUs Disadvantages:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Primary disadvantage is the lack of scalability between memory and CPUs.
Adding more CPUs can geometrically increases traffic on the shared memory-CPU path, and for cache coherent systems, geometrically increase traffic associated with cache/memory management. * Programmer responsibility for synchronization constructs that ensure &quot;correct&quot; access of global memory. * Expense: it becomes increasingly difficult and expensive to design and produce shared memory machines with ever increasing numbers of processors.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Computer Memory Architectures Distributed Memory General Characteristics:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Like shared memory systems, distributed memory systems vary widely but share a common characteristic.
Distributed memory systems require a communication network to connect inter-processor memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Processors have their own local memory.
Memory addresses in one processor do not map to another processor, so there is no concept of global address space across all processors.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Because each processor has its own local memory, it operates independently.
Changes it makes to its local memory have no effect on the memory of other processors.
Hence, the concept of cache coherency does not apply.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* When a processor needs access to data in another processor, it is usually the task of the programmer to explicitly define how and when data is communicated.
Synchronization between tasks is likewise the programmer's responsibility.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The network &quot;fabric&quot; used for data transfer varies widely, though it can can be as simple as Ethernet.
Advantages:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Memory is scalable with the number of processors.
Increase the number of processors and the size of memory increases proportionately. * Each processor can rapidly access its own memory without interference and without the overhead incurred with trying to maintain cache coherency. * Cost effectiveness: can use commodity, off-the-shelf processors and networking.
Disadvantages:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The programmer is responsible for many of the details associated with data communication between processors. * It may be difficult to map existing data structures, based on global memory, to this memory organization. * Non-uniform memory access (NUMA) times Parallel Computer Memory Architectures Hybrid Distributed-Shared Memory * The largest and fastest computers in the world today employ both shared and distributed memory architectures.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The shared memory component can be a cache coherent SMP machine and/or graphics processing units (GPU).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The distributed memory component is the networking of multiple SMP/GPU machines, which know only about their own memory - not the memory on another machine.
Therefore, network communications are required to move data from one SMP/GPU to another.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Current trends seem to indicate that this type of memory architecture will continue to prevail and increase at the high end of computing for the foreseeable future.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Advantages and Disadvantages: whatever is common to both shared and distributed memory architectures.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Programming Models Overview * There are several parallel programming models in common use: * Shared Memory (without threads) * Threads * Distributed Memory / Message Passing * Data Parallel * Hybrid * Single Program Multiple Data (SPMD) * Multiple Program Multiple Data (MPMD)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Parallel programming models exist as an abstraction above hardware and memory architectures.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Although it might not seem apparent, these models are NOT specific to a particular type of machine or memory architecture.
In fact, any of these models can (theoretically) be implemented on any underlying hardware.
Two examples from the past are discussed below.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* SHARED memory model on a DISTRIBUTED memory machine: Kendall Square Research (KSR) ALLCACHE approach.
Machine memory was physically distributed across networked machines, but appeared to the user as a single shared memory (global address space).
Generically, this approach is referred to as &quot;virtual shared memory&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* DISTRIBUTED memory model on a SHARED memory machine: Message Passing Interface (MPI) on SGI Origin 2000.
The SGI Origin 2000 employed the CC-NUMA type of shared memory architecture, where every task has direct access to global address space spread across all machines.
However, the ability to send and receive messages using MPI, as is commonly done over a network of distributed memory machines, was implemented and commonly used.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Which model to use?
This is often a combination of what is available and personal choice.
There is no &quot;best&quot; model, although there certainly are better implementations of some models over others.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The following sections describe each of the models mentioned above, and also discuss some of their actual implementations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Programming Models Shared Memory Model (without threads)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In this programming model, tasks share a common address space, which they read and write to asynchronously.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Various mechanisms such as locks / semaphores may be used to control access to the shared memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* An advantage of this model from the programmer's point of view is that the notion of data &quot;ownership&quot; is lacking, so there is no need to specify explicitly the communication of data between tasks.
Program development can often be simplified.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* An important disadvantage in terms of performance is that it becomes more difficult to understand and manage data locality. * Keeping data local to the processor that works on it conserves memory accesses, cache refreshes and bus traffic that occurs when multiple processors use the same data. * Unfortunately, controlling data locality is hard to understand and beyond the control of the average user.
Implementations:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Native compilers and/or hardware translate user program variables into actual memory addresses, which are global.
On stand-alone SMP machines, this is straightforward.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* On distributed shared memory machines, such as the SGI Origin, memory is physically distributed across a network of machines, but made global through specialized hardware and software.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Programming Models Threads Model * This programming model is a type of shared memory programming.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In the threads model of parallel programming, a single process can have multiple, concurrent execution paths.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Perhaps the most simple analogy that can be used to describe threads is the concept of a single program that includes a number of subroutines:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The main program a.out is scheduled to run by the native operating system. a.out loads and acquires all of the necessary system and user resources to run.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* a.out performs some serial work, and then creates a number of tasks (threads) that can be scheduled and run by the operating system concurrently.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Each thread has local data, but also, shares the entire resources of a.out.
This saves the overhead associated with replicating a program's resources for each thread.
Each thread also benefits from a global memory view because it shares the memory space ofa.out.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A thread's work may best be described as a subroutine within the main program.
Any thread can execute any subroutine at the same time as other threads.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Threads communicate with each other through global memory (updating address locations).
This requires synchronization constructs to ensure that more than one thread is not updating the same global address at any time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Threads can come and go, but a.out remains present to provide the necessary shared resources until the application has completed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* From a programming perspective, threads implementations commonly comprise: * A library of subroutines that are called from within parallel source code * A set of compiler directives imbedded in either serial or parallel source code In both cases, the programmer is responsible for determining all parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Threaded implementations are not new in computing.
Historically, hardware vendors have implemented their own proprietary versions of threads.
These implementations differed substantially from each other making it difficult for programmers to develop portable threaded applications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Unrelated standardization efforts have resulted in two very different implementations of threads:POSIX Threads and OpenMP.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* POSIX Threads * Library based; requires parallel coding * Specified by the IEEE POSIX 1003.1c standard (1995). * C Language only * Commonly referred to as Pthreads. * Most hardware vendors now offer Pthreads in addition to their proprietary threads implementations. * Very explicit parallelism; requires significant programmer attention to detail.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* OpenMP * Compiler directive based; can use serial code * Jointly defined and endorsed by a group of major computer hardware and software vendors.
The OpenMP Fortran API was released October 28, 1997.
The C/C++ API was released in late 1998. * Portable / multi-platform, including Unix and Windows NT platforms * Available in C/C++ and Fortran implementations * Can be very easy and simple to use - provides for &quot;incremental parallelism&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Microsoft has its own implementation for threads, which is not related to the UNIX POSIX standard or OpenMP.
More Information:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* POSIX Threads tutorial: computing.llnl.gov/tutorials/pthreads * OpenMP tutorial: computing.llnl.gov/tutorials/openMP Parallel Programming Models Distributed Memory / Message Passing Model * This model demonstrates the following characteristics:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A set of tasks that use their own local memory during computation.
Multiple tasks can reside on the same physical machine and/or across an arbitrary number of machines.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Tasks exchange data through communications by sending and receiving messages.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Data transfer usually requires cooperative operations to be performed by each process.
For example, a send operation must have a matching receive operation.
Implementations:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* From a programming perspective, message passing implementations usually comprise a library of subroutines.
Calls to these subroutines are imbedded in source code.
The programmer is responsible for determining all parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Historically, a variety of message passing libraries have been available since the 1980s.
These implementations differed substantially from each other making it difficult for programmers to develop portable applications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In 1992, the MPI Forum was formed with the primary goal of establishing a standard interface for message passing implementations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Part 1 of the Message Passing Interface (MPI) was released in 1994.
Part 2 (MPI-2) was released in 1996.
Both MPI specifications are available on the web athttp://www-unix.mcs.anl.gov/mpi/ .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* MPI is now the &quot;de facto&quot; industry standard for message passing, replacing virtually all other message passing implementations used for production work.
MPI implementations exist for virtually all popular parallel computing platforms.
Not all implementations include everything in both MPI1 and MPI2.
More Information:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* MPI tutorial: computing.llnl.gov/tutorials/mpi Parallel Programming Models Data Parallel Model * The data parallel model demonstrates the following characteristics:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Most of the parallel work focuses on performing operations on a data set.
The data set is typically organized into a common structure, such as an array or cube.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A set of tasks work collectively on the same data structure, however, each task works on a different partition of the same data structure.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Tasks perform the same operation on their partition of work, for example, &quot;add 4 to every array element&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* On shared memory architectures, all tasks may have access to the data structure through global memory.
On distributed memory architectures the data structure is split up and resides as &quot;chunks&quot; in the local memory of each task.
Implementations:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Programming with the data parallel model is usually accomplished by writing a program with data parallel constructs.
The constructs can be calls to a data parallel subroutine library or, compiler directives recognized by a data parallel compiler.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Fortran 90 and 95 (F90, F95): ISO/ANSI standard extensions to Fortran 77. * Contains everything that is in Fortran 77 * New source code format; additions to character set * Additions to program structure and commands * Variable additions - methods and arguments * Pointers and dynamic memory allocation added * Array processing (arrays treated as objects) added * Recursive and new intrinsic functions added * Many other new features Implementations are available for most common parallel platforms.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* High Performance Fortran (HPF): Extensions to Fortran 90 to support data parallel programming. * Contains everything in Fortran 90 * Directives to tell compiler how to distribute data added * Assertions that can improve optimization of generated code added * Data parallel constructs added (now part of Fortran 95) HPF compilers were relatively common in the 1990s, but are no longer commonly implemented.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Compiler Directives: Allow the programmer to specify the distribution and alignment of data.
Fortran implementations are available for most common parallel platforms.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Distributed memory implementations of this model usually require the compiler to produce object code with calls to a message passing library (MPI) for data distribution.
All message passing is done invisibly to the programmer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Programming Models Hybrid Model * A hybrid model combines more than one of the previously described programming models.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Currently, a common example of a hybrid model is the combination of the message passing model (MPI) with the threads model (OpenMP). * Threads perform computationally intensive kernels using local, on-node data * Communications between processes on different nodes occurs over the network using MPI * This hybrid model lends itself well to the increasingly common hardware environment of clustered multi/many-core machines.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Another similar and increasingly popular example of a hybrid model is using MPI with GPU (Graphics Processing Unit) programming. * GPUs perform computationally intensive kernels using local, on-node data * Communications between processes on different nodes occurs over the network using MPI Parallel Programming Models SPMD and MPMD Single Program Multiple Data (SPMD):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* SPMD is actually a &quot;high level&quot; programming model that can be built upon any combination of the previously mentioned parallel programming models.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* SINGLE PROGRAM: All tasks execute their copy of the same program simultaneously.
This program can be threads, message passing, data parallel or hybrid.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* MULTIPLE DATA: All tasks may use different data * SPMD programs usually have the necessary logic programmed into them to allow different tasks to branch or conditionally execute only those parts of the program they are designed to execute.
That is, tasks do not necessarily have to execute the entire program - perhaps only a portion of it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The SPMD model, using message passing or hybrid programming, is probably the most commonly used parallel programming model for multi-node clusters.
Multiple Program Multiple Data (MPMD):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Like SPMD, MPMD is actually a &quot;high level&quot; programming model that can be built upon any combination of the previously mentioned parallel programming models.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* MULTIPLE PROGRAM: Tasks may execute different programs simultaneously.
The programs can be threads, message passing, data parallel or hybrid.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* MULTIPLE DATA: All tasks may use different data * MPMD applications are not as common as SPMD applications, but may be better suited for certain types of problems, particularly those that lend themselves better to functional decomposition than domain decomposition (discussed later under Partioning ).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Automatic vs. Manual Parallelization * Designing and developing parallel programs has characteristically been a very manual process.
The programmer is typically responsible for both identifying and actually implementing parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Very often, manually developing parallel codes is a time consuming, complex, error-prone anditerative process.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* For a number of years now, various tools have been available to assist the programmer with converting serial programs into parallel programs.
The most common type of tool used to automatically parallelize a serial program is a parallelizing compiler or pre-processor.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A parallelizing compiler generally works in two different ways:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Fully Automatic * The compiler analyzes the source code and identifies opportunities for parallelism. * The analysis includes identifying inhibitors to parallelism and possibly a cost weighting on whether or not the parallelism would actually improve performance. * Loops (do, for) loops are the most frequent target for automatic parallelization.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Programmer Directed * Using &quot;compiler directives&quot; or possibly compiler flags, the programmer explicitly tells the compiler how to parallelize the code. * May be able to be used in conjunction with some degree of automatic parallelization also.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* If you are beginning with an existing serial code and have time or budget constraints, then automatic parallelization may be the answer.
However, there are several important caveats that apply to automatic parallelization: * Wrong results may be produced * Performance may actually degrade * Much less flexible than manual parallelization * Limited to a subset (mostly loops) of code * May actually not parallelize code if the analysis suggests there are inhibitors or the code is too complex * The remainder of this section applies to the manual method of developing parallel codes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Understand the Problem and the Program * Undoubtedly, the first step in developing parallel software is to first understand the problem that you wish to solve in parallel.
If you are starting with a serial program, this necessitates understanding the existing code also.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Before spending time in an attempt to develop a parallel solution for a problem, determine whether or not the problem is one that can actually be parallelized.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Example of Parallelizable Problem:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Calculate the potential energy for each of several thousand independent conformations of a molecule.
When done, find the minimum energy conformation.
This problem is able to be solved in parallel.
Each of the molecular conformations is independently determinable.
The calculation of the minimum energy conformation is also a parallelizable problem.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Example of a Non-parallelizable Problem:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Calculation of the Fibonacci series (0,1,1,2,3,5,8,13,21,...) by use of the formula: F(n) = F(n-1) + F(n-2) This is a non-parallelizable problem because the calculation of the Fibonacci sequence as shown would entail dependent calculations rather than independent ones.
The calculation of the F(n) value uses those of both F(n-1) and F(n-2).
These three terms cannot be calculated independently and therefore, not in parallel.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Identify the program's hotspots: * Know where most of the real work is being done.
The majority of scientific and technical programs usually accomplish most of their work in a few places. * Profilers and performance analysis tools can help here * Focus on parallelizing the hotspots and ignore those sections of the program that account for little CPU usage.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Identify bottlenecks in the program * Are there areas that are disproportionately slow, or cause parallelizable work to halt or be deferred?
For example, I/O is usually something that slows a program down. * May be possible to restructure the program or use a different algorithm to reduce or eliminate unnecessary slow areas * Identify inhibitors to parallelism.
One common class of inhibitor is data dependence, as demonstrated by the Fibonacci sequence above.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Investigate other algorithms if possible.
This may be the single most important consideration when designing a parallel application.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Take advantage of optimized third party parallel software and highly optimized math libraries available from leading vendors (IBM's ESSL, Intel's MKL, AMD's AMCL, etc.).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Partitioning * One of the first steps in designing a parallel program is to break the problem into discrete &quot;chunks&quot; of work that can be distributed to multiple tasks.
This is known as decomposition or partitioning.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* There are two basic ways to partition computational work among parallel tasks:domain decomposition and functional decomposition.
Domain Decomposition:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In this type of partitioning, the data associated with a problem is decomposed.
Each parallel task then works on a portion of of the data.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* There are different ways to partition data:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Functional Decomposition:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In this approach, the focus is on the computation that is to be performed rather than on the data manipulated by the computation.
The problem is decomposed according to the work that must be done.
Each task then performs a portion of the overall work.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Functional decomposition lends itself well to problems that can be split into different tasks.
For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ecosystem Modeling Each program calculates the population of a given group, where each group's growth depends on that of its neighbors.
As time progresses, each process calculates its current state, then exchanges information with the neighbor populations.
All tasks then progress to calculate the state at the next time step.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Signal Processing An audio signal data set is passed through four distinct computational filters.
Each filter is a separate process.
The first segment of data must pass through the first filter before progressing to the second.
When it does, the second segment of data passes through the first filter.
By the time the fourth segment of data is in the first filter, all four tasks are busy.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Climate Modeling Each model component can be thought of as a separate task.
Arrows represent exchanges of data between components during computation: the atmosphere model generates wind velocity data that are used by the ocean model, the ocean model generates sea surface temperature data that are used by the atmosphere model, and so on.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Combining these two types of problem decomposition is common and natural.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Communications Who Needs Communications?
The need for communications between tasks depends upon your problem:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* You DON'T need communications * Some types of problems can be decomposed and executed in parallel with virtually no need for tasks to share data.
For example, imagine an image processing operation where every pixel in a black and white image needs to have its color reversed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The image data can easily be distributed to multiple tasks that then act independently of each other to do their portion of the work. * These types of problems are often called embarrassingly parallel because they are so straight-forward.
Very little inter-task communication is required.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* You DO need communications * Most parallel applications are not quite so simple, and do require tasks to share data with each other.
For example, a 3-D heat diffusion problem requires a task to know the temperatures calculated by the tasks that have neighboring data.
Changes to neighboring data has a direct effect on that task's data.
Factors to Consider:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There are a number of important factors to consider when designing your program's inter-task communications:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Cost of communications * Inter-task communication virtually always implies overhead. * Machine cycles and resources that could be used for computation are instead used to package and transmit data. * Communications frequently require some type of synchronization between tasks, which can result in tasks spending time &quot;waiting&quot; instead of doing work. * Competing communication traffic can saturate the available network bandwidth, further aggravating performance problems.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Latency vs. Bandwidth * latency is the time it takes to send a minimal (0 byte) message from point A to point B.
Commonly expressed as microseconds. * bandwidth is the amount of data that can be communicated per unit of time.
Commonly expressed as megabytes/sec or gigabytes/sec. * Sending many small messages can cause latency to dominate communication overheads.
Often it is more efficient to package small messages into a larger message, thus increasing the effective communications bandwidth.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Visibility of communications * With the Message Passing Model, communications are explicit and generally quite visible and under the control of the programmer. * With the Data Parallel Model, communications often occur transparently to the programmer, particularly on distributed memory architectures.
The programmer may not even be able to know exactly how inter-task communications are being accomplished.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Synchronous vs. asynchronous communications * Synchronous communications require some type of &quot;handshaking&quot; between tasks that are sharing data.
This can be explicitly structured in code by the programmer, or it may happen at a lower level unknown to the programmer. * Synchronous communications are often referred to as blocking communications since other work must wait until the communications have completed. * Asynchronous communications allow tasks to transfer data independently from one another.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For example, task 1 can prepare and send a message to task 2, and then immediately begin doing other work.
When task 2 actually receives the data doesn't matter. * Asynchronous communications are often referred to as non-blocking communications since other work can be done while the communications are taking place. * Interleaving computation with communication is the single greatest benefit for using asynchronous communications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Scope of communications * Knowing which tasks must communicate with each other is critical during the design stage of a parallel code.
Both of the two scopings described below can be implemented synchronously or asynchronously. * Point-to-point - involves two tasks with one task acting as the sender/producer of data, and the other acting as the receiver/consumer. * Collective - involves data sharing between more than two tasks, which are often specified as being members in a common group, or collective.
Some common variations (there are more):
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Efficiency of communications * Very often, the programmer will have a choice with regard to factors that can affect communications performance.
Only a few are mentioned here. * Which implementation for a given model should be used?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Using the Message Passing Model as an example, one MPI implementation may be faster on a given hardware platform than another. * What type of communication operations should be used?
As mentioned previously, asynchronous communication operations can improve overall program performance. * Network media - some platforms may offer more than one network for communications.
Which one is best?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overhead and Complexity * Finally, realize that this is only a partial list of things to consider!!!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Synchronization Types of Synchronization:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Barrier * Usually implies that all tasks are involved * Each task performs its work until it reaches the barrier.
It then stops, or &quot;blocks&quot;. * When the last task reaches the barrier, all tasks are synchronized. * What happens from here varies.
Often, a serial section of work must be done.
In other cases, the tasks are automatically released to continue their work.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Lock / semaphore * Can involve any number of tasks * Typically used to serialize (protect) access to global data or a section of code.
Only one task at a time may use (own) the lock / semaphore / flag. * The first task to acquire the lock &quot;sets&quot; it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This task can then safely (serially) access the protected data or code. * Other tasks can attempt to acquire the lock but must wait until the task that owns the lock releases it. * Can be blocking or non-blocking * Synchronous communication operations * Involves only those tasks executing a communication operation * When a task performs a communication operation, some form of coordination is required with the other task(s) participating in the communication.
For example, before a task can perform a send operation, it must first receive an acknowledgment from the receiving task that it is OK to send. * Discussed previously in the Communications section.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Data Dependencies Definition:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A dependence exists between program statements when the order of statement execution affects the results of the program.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A data dependence results from multiple use of the same location(s) in storage by different tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Dependencies are important to parallel programming because they are one of the primary inhibitors to parallelism.
Examples:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Loop carried data dependence DO 500 J = MYSTART,MYEND A(J) = A(J-1) * 2.0 500 CONTINUE The value of A(J-1) must be computed before the value of A(J), therefore A(J) exhibits a data dependency on A(J-1).
Parallelism is inhibited.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If Task 2 has A(J) and task 1 has A(J-1), computing the correct value of A(J) necessitates:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Distributed memory architecture - task 2 must obtain the value of A(J-1) from task 1 after task 1 finishes its computation * Shared memory architecture - task 2 must read A(J-1) after task 1 updates it * Loop independent data dependence task 1 task 2 ------ ------ X = 2 X = 4 . . . .
Y = X**2 Y = X**3 As with the previous example, parallelism is inhibited.
The value of Y is dependent on:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Distributed memory architecture - if or when the value of X is communicated between the tasks. * Shared memory architecture - which task last stores the value of X.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Although all data dependencies are important to identify when designing parallel programs, loop carried dependencies are particularly important since loops are possibly the most common target of parallelization efforts.
How to Handle Data Dependencies:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Distributed memory architectures - communicate required data at synchronization points.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Shared memory architectures -synchronize read/write operations between tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Load Balancing * Load balancing refers to the practice of distributing work among tasks so thatall tasks are kept busy all of the time.
It can be considered a minimization of task idle time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Load balancing is important to parallel programs for performance reasons.
For example, if all tasks are subject to a barrier synchronization point, the slowest task will determine the overall performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>How to Achieve Load Balance:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Equally partition the work each task receives * For array/matrix operations where each task performs similar work, evenly distribute the data set among the tasks. * For loop iterations where the work done in each iteration is similar, evenly distribute the iterations across the tasks. * If a heterogeneous mix of machines with varying performance characteristics are being used, be sure to use some type of performance analysis tool to detect any load imbalances.
Adjust work accordingly.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Use dynamic work assignment * Certain classes of problems result in load imbalances even if data is evenly distributed among tasks: * Sparse arrays - some tasks will have actual data to work on while others have mostly &quot;zeros&quot;. * Adaptive grid methods - some tasks may need to refine their mesh while others don't. * N-body simulations - where some particles may migrate to/from their original task domain to another task's; where the particles owned by some tasks require more work than those owned by other tasks. * When the amount of work each task will perform is intentionally variable, or is unable to be predicted, it may be helpful to use ascheduler - task pool approach.
As each task finishes its work, it queues to get a new piece of work. * It may become necessary to design an algorithm which detects and handles load imbalances as they occur dynamically within the code.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Granularity Computation / Communication Ratio:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In parallel computing, granularity is a qualitative measure of the ratio of computation to communication.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Periods of computation are typically separated from periods of communication by synchronization events.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Fine-grain Parallelism:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Relatively small amounts of computational work are done between communication events * Low computation to communication ratio * Facilitates load balancing * Implies high communication overhead and less opportunity for performance enhancement * If granularity is too fine it is possible that the overhead required for communications and synchronization between tasks takes longer than the computation.
Coarse-grain Parallelism:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Relatively large amounts of computational work are done between communication/synchronization events * High computation to communication ratio * Implies more opportunity for performance increase * Harder to load balance efficiently Which is Best?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The most efficient granularity is dependent on the algorithm and the hardware environment in which it runs.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In most cases the overhead associated with communications and synchronization is high relative to execution speed so it is advantageous to have coarse granularity.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Fine-grain parallelism can help reduce overheads due to load imbalance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs I/O The Bad News:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* I/O operations are generally regarded as inhibitors to parallelism * Parallel I/O systems may be immature or not available for all platforms * In an environment where all tasks see the same file space, write operations can result in file overwriting * Read operations can be affected by the file server's ability to handle multiple read requests at the same time * I/O that must be conducted over the network (NFS, non-local) can cause severe bottlenecks and even crash file servers.
The Good News:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Parallel file systems are available.
For example: * GPFS: General Parallel File System for AIX (IBM) * Lustre: for Linux clusters (Oracle) * PVFS/PVFS2: Parallel Virtual File System for Linux clusters (Clemson/Argonne/Ohio State/others) * PanFS: Panasas ActiveScale File System for Linux clusters (Panasas, Inc.) * HP SFS: HP StorageWorks Scalable File Share.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Lustre based parallel file system (Global File System for Linux) product from HP * The parallel I/O programming interface specification for MPI has been available since 1996 as part of MPI-2.
Vendor and &quot;free&quot; implementations are now commonly available.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Rule #1: Reduce overall I/O as much as possible * If you have access to a parallel file system, investigate using it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Writing large chunks of data rather than small packets is usually significantly more efficient.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Confine I/O to specific serial portions of the job, and then use parallel communications to distribute data to parallel tasks.
For example, Task 1 could read an input file and then communicate required data to other tasks.
Likewise, Task 1 could perform write operation after receiving required data from all other tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Use local, on-node file space for I/O if possible.
For example, each node may have /tmp filespace which can used.
This is usually much more efficient than performing I/O over the network to one's home directory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Limits and Costs of Parallel Programming Amdahl's Law:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Amdahl's Law states that potential program speedup is defined by the fraction of code (P) that can be parallelized:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 speedup = -------- 1 - P * If none of the code can be parallelized, P = 0 and the speedup = 1 (no speedup).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* If all of the code is parallelized, P = 1 and the speedup is infinite (in theory).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* If 50% of the code can be parallelized, maximum speedup = 2, meaning the code will run twice as fast.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Introducing the number of processors performing the parallel fraction of work, the relationship can be modeled by:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1 speedup = ------------ P + S --- N where P = parallel fraction, N = number of processors and S = serial fraction.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* It soon becomes obvious that there are limits to the scalability of parallelism.
For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>speedup -------------------------------- N P = .50 P = .90 P = .99 ----- ------- ------- ------- 10 1.82 5.26 9.17 100 1.98 9.17 50.25 1000 1.99 9.91 90.99 10000 1.99 9.91 99.02 100000 1.99 9.99 99.90 * However, certain problems demonstrate increased performance by increasing the problem size.
For example: 2D Grid Calculations 85 seconds 85% Serial fraction 15 seconds 15% We can increase the problem size by doubling the grid dimensions and halving the time step.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This results in four times the number of grid points and twice the number of time steps.
The timings then look like: 2D Grid Calculations 680 seconds 97.84% Serial fraction 15 seconds 2.16% * Problems that increase the percentage of parallel time with their size are morescalable than problems with a fixed percentage of parallel time.
Complexity:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In general, parallel applications are much more complex than corresponding serial applications, perhaps an order of magnitude.
Not only do you have multiple instruction streams executing at the same time, but you also have data flowing between them.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The costs of complexity are measured in programmer time in virtually every aspect of the software development cycle: * Design * Coding * Debugging * Tuning * Maintenance * Adhering to &quot;good&quot; software development practices is essential when when working with parallel applications - especially if somebody besides you will have to work with the software.
Portability:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Thanks to standardization in several APIs, such as MPI, POSIX threads, HPF and OpenMP, portability issues with parallel programs are not as serious as in years past.
However...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* All of the usual portability issues associated with serial programs apply to parallel programs.
For example, if you use vendor &quot;enhancements&quot; to Fortran, C or C++, portability will be a problem.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Even though standards exist for several APIs, implementations will differ in a number of details, sometimes to the point of requiring code modifications in order to effect portability.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Operating systems can play a key role in code portability issues.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Hardware architectures are characteristically highly variable and can affect portability.
Resource Requirements:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The primary intent of parallel programming is to decrease execution wall clock time, however in order to accomplish this, more CPU time is required.
For example, a parallel code that runs in 1 hour on 8 processors actually uses 8 hours of CPU time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The amount of memory required can be greater for parallel codes than serial codes, due to the need to replicate data and for overheads associated with parallel support libraries and subsystems.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* For short running parallel programs, there can actually be a decrease in performance compared to a similar serial implementation.
The overhead costs associated with setting up the parallel environment, task creation, communications and task termination can comprise a significant portion of the total execution time for short runs.
Scalability:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The ability of a parallel program's performance to scale is a result of a number of interrelated factors.
Simply adding more machines is rarely the answer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The algorithm may have inherent limits to scalability.
At some point, adding more resources causes performance to decrease.
Most parallel solutions demonstrate this characteristic at some point.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Hardware factors play a significant role in scalability.
Examples: * Memory-cpu bus bandwidth on an SMP machine * Communications network bandwidth * Amount of memory available on any given machine or set of machines * Processor clock speed * Parallel support libraries and subsystems software can limit scalability independent of your application.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Designing Parallel Programs Performance Analysis and Tuning * As with debugging, monitoring and analyzing parallel program execution is significantly more of a challenge than for serial programs.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A number of parallel tools for execution monitoring and program analysis are available.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Some are quite useful; some are cross-platform also.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Some starting points: * LC's &quot;Supported Software and Computing Tools&quot; web pages at: computing.llnl.gov/code/content/software_tools.php * A dated, but potentially useful LC whitepaper on the subject of &quot;High Performance Tools and Technologies&quot; describes a large number of tools, and a number of performance related topics applicable to code developers.
Find it at: computing.llnl.gov/tutorials/performance_tools/HighPerformanceToolsTechnologiesLC.pdf . * Performance Analysis Tools Tutorial * Work remains to be done, particularly in the area of scalability.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Examples Array Processing * This example demonstrates calculations on 2-dimensional array elements, with the computation on each array element being independent from other array elements.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The serial program calculates one element at a time in sequential order.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Serial code could be of the form:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>do j = 1,n do i = 1,n a(i,j) = fcn(i,j) end do end do * The calculation of elements is independent of one another - leads to an embarrassingly parallel situation.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The problem should be computationally intensive.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Array Processing Parallel Solution 1 * Arrays elements are distributed so that each processor owns a portion of an array (subarray).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Independent calculation of array elements ensures there is no need for communication between tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Distribution scheme is chosen by other criteria, e.g. unit stride (stride of 1) through the subarrays.
Unit stride maximizes cache/memory usage.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Since it is desirable to have unit stride through the subarrays, the choice of a distribution scheme depends on the programming language.
See theBlock - Cyclic Distributions Diagram for the options.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* After the array is distributed, each task executes the portion of the loop corresponding to the data it owns.
For example, with Fortran block distribution:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>do j = mystart, myend do i = 1,n a(i,j) = fcn(i,j) end do end do * Notice that only the outer loop variables are different from the serial solution.
One Possible Solution:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Implement as a Single Program Multiple Data (SPMD) model.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Master process initializes array, sends info to worker processes and receives results.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Worker process receives info, performs its share of computation and sends results to master.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Using the Fortran storage scheme, perform block distribution of the array.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Pseudo code solution: red highlights changes for parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>find out if I am MASTER or WORKER if I am MASTER initialize the array send each WORKER info on part of array it owns send each WORKER its portion of initial array receive from each WORKER results else if I am WORKER receive from MASTER info on part of array I own receive from MASTER my portion of initial array # calculate my portion of array do j = my first column,my last column do i = 1,n a(i,j) = fcn(i,j) end do end do send MASTER results endif * Example MPI Program in C:   mpi_array.c * Example MPI Program in Fortran:   mpi_array.f Array Processing Parallel Solution 2: Pool of Tasks * The previous array solution demonstrated static load balancing: * Each task has a fixed amount of work to do * May be significant idle time for faster or more lightly loaded processors - slowest tasks determines overall performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Static load balancing is not usually a major concern if all tasks are performing the same amount of work on identical machines.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* If you have a load balance problem (some tasks work faster than others), you may benefit by using a &quot;pool of tasks&quot; scheme.
Pool of Tasks Scheme:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Two processes are employed Master Process:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Holds pool of tasks for worker processes to do * Sends worker a task when requested * Collects results from workers Worker Process: repeatedly does the following * Gets task from master process * Performs computation * Sends results to master * Worker processes do not know before runtime which portion of array they will handle or how many tasks they will perform.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Dynamic load balancing occurs at run time: the faster tasks will get more work to do.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Pseudo code solution: red highlights changes for parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>find out if I am MASTER or WORKER if I am MASTER do until no more jobs if request send to WORKER next job else receive results from WORKER end do else if I am WORKER do until no more jobs request job from MASTER receive from MASTER next job calculate array element: a(i,j) = fcn(i,j) send results to MASTER end do endif Discussion:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* In the above pool of tasks example, each task calculated an individual array element as a job.
The computation to communication ratio is finely granular.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Finely granular solutions incur more communication overhead in order to reduce task idle time.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A more optimal solution might be to distribute more work with each job.
The &quot;right&quot; amount of work is problem dependent.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Parallel Examples PI Calculation * The value of PI can be calculated in a number of ways.
Consider the following method of approximating PI * Inscribe a circle in a square * Randomly generate points in the square * Determine the number of points in the square that are also in the circle * Let r be the number of points in the circle divided by the number of points in the square * PI ~ 4 r * Note that the more points generated, the better the approximation * Serial pseudo code for this procedure:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>npoints = 10000 circle_count = 0 do j = 1,npoints generate 2 random numbers between 0 and 1 xcoordinate = random1 ycoordinate = random2 if (xcoordinate, ycoordinate) inside circle then circle_count = circle_count + 1 end do PI = 4.0*circle_count/npoints * Note that most of the time in running this program would be spent executing the loop * Leads to an embarrassingly parallel solution * Computationally intensive * Minimal communication * Minimal I/O PI Calculation Parallel Solution * Parallel strategy: break the loop into portions that can be executed by the tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* For the task of approximating PI: * Each task executes its portion of the loop a number of times. * Each task can do its work without requiring any information from the other tasks (there are no data dependencies). * Uses the SPMD model.
One task acts as master and collects the results.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Pseudo code solution: red highlights changes for parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>npoints = 10000 circle_count = 0 p = number of tasks num = npoints/p find out if I am MASTER or WORKER do j = 1,num generate 2 random numbers between 0 and 1 xcoordinate = random1 ycoordinate = random2 if (xcoordinate, ycoordinate) inside circle then circle_count = circle_count + 1 end do if I am MASTER receive from WORKERS their circle_counts compute PI (use MASTER and WORKER calculations) else if I am WORKER send to MASTER circle_count endif * Example MPI Program in C:   mpi_pi_reduce.c     dboard.c * Example MPI Program in Fortran:   mpi_pi_reduce.f     dboard.f Parallel Examples Simple Heat Equation * Most problems in parallel computing require communication among the tasks.
A number of common problems require communication with &quot;neighbor&quot; tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The heat equation describes the temperature change over time, given initial temperature distribution and boundary conditions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A finite differencing scheme is employed to solve the heat equation numerically on a square region.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The initial temperature is zero on the boundaries and high in the middle.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The boundary temperature is held at zero.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* For the fully explicit problem, a time stepping algorithm is used.
The elements of a 2-dimensional array represent the temperature at points on the square.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The calculation of an element is dependent upon neighbor element values.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A serial program would contain code like:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>do iy = 2, ny - 1 do ix = 2, nx - 1 u2(ix, iy) = u1(ix, iy) + cx * (u1(ix+1,iy) + u1(ix-1,iy) - 2.*u1(ix,iy)) + cy * (u1(ix,iy+1) + u1(ix,iy-1) - 2.*u1(ix,iy)) end do end do Simple Heat Equation Parallel Solution * Implement as an SPMD model * The entire array is partitioned and distributed as subarrays to all tasks.
Each task owns a portion of the total array.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Determine data dependencies * interior elements belonging to a task are independent of other tasks * border elements are dependent upon a neighbor task's data, necessitating communication.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Master process sends initial info to workers, and then waits to collect results from all workers * Worker process calculates solution within specified number of time steps, communicating as necessary with neighbor processes * Pseudo code solution: red highlights changes for parallelism.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>find out if I am MASTER or WORKER if I am MASTER initialize array send each WORKER starting info and subarray receive results from each WORKER else if I am WORKER receive from MASTER starting info and subarray do t = 1, nsteps update time send neighbors my border info receive from neighbors their border info update my portion of solution array end do send MASTER results endif * Example MPI Program in C:   mpi_heat2D.c * Example MPI Program in Fortran:   mpi_heat2D.f Parallel Examples 1-D Wave Equation * In this example, the amplitude along a uniform, vibrating string is calculated after a specified amount of time has elapsed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The calculation involves: * the amplitude on the y axis * i as the position index along the x axis * node points imposed along the string * update of the amplitude at discrete time steps.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The equation to be solved is the one-dimensional wave equation: A(i,t+1) = (2.0 * A(i,t)) - A(i,t-1) + (c * (A(i-1,t) - (2.0 * A(i,t)) + A(i+1,t))) where c is a constant * Note that amplitude will depend on previous timesteps (t, t-1) and neighboring points (i-1, i+1).
Data dependence will mean that a parallel solution will involve communications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>1-D Wave Equation Parallel Solution * Implement as an SPMD model * The entire amplitude array is partitioned and distributed as subarrays to all tasks.
Each task owns a portion of the total array.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Load balancing: all points require equal work, so the points should be divided equally * A block decomposition would have the work partitioned into the number of tasks as chunks, allowing each task to own mostly contiguous data points.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Communication need only occur on data borders.
The larger the block size the less the communication.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Pseudo code solution:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>find out number of tasks and task identities #Identify left and right neighbors left_neighbor = mytaskid - 1 right_neighbor = mytaskid +1 if mytaskid = first then left_neigbor = last if mytaskid = last then right_neighbor = first find out if I am MASTER or WORKER if I am MASTER initialize array send each WORKER starting info and subarray else if I am WORKER' receive starting info and subarray from MASTER endif #Update values for each point along string #In this example the master participates in calculations do t = 1, nsteps send left endpoint to left neighbor receive left endpoint from right neighbor send right endpoint to right neighbor receive right endpoint from left neighbor #Update points along line do i = 1, npoints newval(i) = (2.0 * values(i)) - oldval(i) + (sqtau * (values(i-1) - (2.0 * values(i)) + values(i+1))) end do end do #Collect results and write to file if I am MASTER receive results from each WORKER write results to file else if I am WORKER send results to MASTER endif * Example MPI Program in C:   mpi_wave.c * Example MPI Program in Fortran:   mpi_wave.f This completes the tutorial.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>      Please complete the online evaluation form.
Where would you like to go now?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Agenda * Back to the top References and More Information * Author: Blaise Barney , Livermore Computing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* A search on the WWW for &quot;parallel programming&quot; or &quot;parallel computing&quot; will yield a wide variety of information.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Recommended reading: * &quot;Designing and Building Parallel Programs&quot;.
Ian Foster. http://www-unix.mcs.anl.gov/dbpp/ * &quot;Introduction to Parallel Computing&quot;.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Ananth Grama, Anshul Gupta, George Karypis, Vipin Kumar. http://www-users.cs.umn.edu/~karypis/parbook/ * &quot;Overview of Recent Supercomputers&quot;.
A.J. van der Steen, Jack Dongarra.
OverviewRecentSupercomputers.2008.pdf * Photos/Graphics have been created by the author, created by other LLNL employees, obtained from non-copyrighted, government or public domain (such as http://commons.wikimedia.org/) sources, or used with the permission of authors from other presentations and web pages.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* History: These materials have evolved from the following sources, which are no longer maintained or available. * Tutorials located in the Maui High Performance Computing Center's &quot;SP Parallel Programming Workshop&quot;. * Tutorials located at the Cornell Theory Center's &quot;Education and Training&quot; web page.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Embedded Computer Architecture 5KK73 Embedded Computer Architecture 2012 - 2013 (1st semester)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Code : 5KK73 Credits: 5 ECTS Lecturers : Prof. dr.
Henk Corporaal, Dr. Bart Mesman Tel. : +31-40-247 5195 / 3653 (secr.)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>5462 (office) Email:  B.Mesman at tue.nl; H.Corporaal at tue.nl Project assistance: Yifan He (Y.He at tue.nl), Dongrui She (D.She at tue.nl), and Akash Kumar (A.Kumar at tue.nl), Shakith Fernando (S.Fernando at tue.nl) News * Jan 17, 2013: all slides are now online.
Success with the preparation and exams!! * Note you have to study also 1 very recent technical in-depth paper (see guidelines below)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* For the second lab assignment: Check the GPU assignment site. * Slides about Neural Architectures are added. * Slides of Silicon Hive tools have been put online.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Interesting article about processor design a 90 minute guide!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Lab1-AES slides are available; Lab1 starts Oct 22.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* September 11, 2012: start lecture Information on the course:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Description and objectives * Book and handouts * Topics * Slides * Hands-on exercises * Examination information * Related and other links Description When looking at future embedded systems and their design, especially (but not exclusively) in the multi-media domain, we observe several problems: * high performace (100 GOPS and far beyond) has to be combined with low power (many systems are mobile); * time-to-market (to get your design done) constantly reduces; * most embedded processing systems have to be extremely low cost; * the applications show more dynamic behavior (resulting in greatly varying quality and performance requirements); * more and more the implementer requires flexible and programmable solutions; * huge latencie gap between processors and memories; and * design productivity does not cope with the increasing design complexity.
In order to solve these problems we foresee the use of programmable multi-processor platforms, having an advanced memory hierarchy, this together with an advanced design trajectory.
These platforms may contain different processors, ranging from general purpose processors, to processors which are highly tuned for a specific application or application domain.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This course treats several processor architectures, shows how to program and generate (compile) code for them, and compares their efficiency in terms of cost, power and performance.
Furthermore the tuning of processor architectures is treated.  Several advanced Multi-Processor Platforms, combining discussed processors, are treated.
A set of lab exercises complements the course.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Purpose: This course aims at getting an understanding of the processor architectures which will be used in future multi-processor platforms, including their memory hierarchy, especially for the embedded domain.
Treated processors range from general purpose to highly optimized ones.
Tradeoffs will be made between performance, flexibility, programmability, energy consumption and cost.
It will be shown how to tune processors in various ways.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Furthermore this course looks into the required design trajectory, concentrating on code generation, scheduling, and on efficient data management (exploiting the advanced memory hierarchy) for high performance and low power.
The student will learn how to apply a methodology for a step-wise (source code) transformation and mapping trajectory, going from an initial specification to an efficient and highly tuned implementation on a particular platform.
The final implementation can be an order of magnitude more efficient in terms of cost, power, and performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In this course we treat different processor architectures: DSP (digital signal processors), VLIWs (very long instruction word, including Transport Triggered Architectures), ASIPs (application specific processors), and highly tuned, weakly programmable processors.
In all cases it is shown how to program these architectures.
Code generation techniques, especially for VLIWs, are treated, including methods to optimize code at source or assembly level.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Furthermore the design of advanced data and instruction memory hierarchies will be detailed.
A methodology is discussed for the efficient use of the data memory hierarchy.
Most of the topics will be supplemented by hands-on exercises.
For a preliminary schedule see: schedule.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Handouts The lecture slides will be made available during the course; see also below.
Papers and other reading material * Learn Chapter 2 on Computer Architecture Trends From &quot;Microprocessor Architectures, from VLIW to TTA&quot; by Henk Corporaal, publisher John Wiley, 1998. * Related to Data Memory Management: * A paper about data reuse.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Formalized methodology for data reuse exploration in hierarchical memory mapping.
J.Ph.Diguet e.a. * Code transformations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Code transformations for data transfer and storage exploration preprocessing multimedia processors.
Francky Catthoor, Nikil D. Dutt, Koen Danckaert and Sven Wuytack IEEE Design and Test of Computers, May-June 2001 * Data storage components.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Random-access data storage components in customized architectures Lode Nachtergaele, Francky Catthoor and Chidamber Kulkarni IEEE Design and Test of Computers, May-June 2001 * Data optimizations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Data memory organization and optimizations in Application Specific systems P.R. Panda e.a.
IEEE Design and Test of Computers, May-June 2001 Slides (per topic; see also the course description)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>** Slides as far as available; will be updated regularly during the course.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overview of this lecture * Topic 1 : RISC processors, MIPS instruction set (ISA) and processor implementation details and alternatives * Topic 2:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>VLIWs: Very Long Instruction Word Architectures * Topic 3 : ASIPs and Energy efficient processors               Lecture by Bart Mesman * Topic 4 : VLIW: compilation / code generation * Topic 5 : Silicon Hive VLIW cores; Introduction to the first lab assignment Guest lecture by Ir.
Menno Lindwer, PDEng * Topic 6:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>SDRAM memory and control &amp; Mixed Time-Criticality                 Guest lecturer: Ir.
Sven Goossens * Topic 7 : Graphic Processing Units (GPUs): what's inside and how to program them efficiently?                 Guest lecturer: MSc.
</text>
                    <manualLabel>1</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Zhenyu Ye * Topic 8 : Architecture Accelerators for Neural Networks                 Guest lecturer: Ir.
Maurice Peemen * Topic 9: DMM: Data Memory Management * Overview * Platform &amp; Layer independent steps * Platform &amp; Layer dependent steps * Data layout for Cache based memory hierarchy * Loop transformations * Topic 10:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* MPSoC and Real-Time systems                 Lecture by Bart Mesman * Multi-Processing * Topic 11: Design of Embedded Signal Processing Systems using MATLAB and Simulink Guest lecture by Giorgia Zucchelli, from MathWorks * Topic 12: NoCs: Network-on-Chips Guest lecturer Prof Kees Goossens Student presentations guidelines As part of this lecture you have to study a hot topic related to this course, and make a short slide presentation about this topic.
The slides have to be presented during the oral exam.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Guidelines are as follows:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Choose one hot topic which interests you and which is highly related to this course. * Select one technical (in depth) research paper from the web, based on this topic.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The paper should have sufficient technical depth; i.e. it should clearly explain all the details of the proposed method or solution.
So e.g. do not choose company white or business papers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>You can also check whether the paper is from well perceived journals or conferences, like IEEE, or ACM conferences  and journals (see e.g.IEEE.org , and ACM.org ).
E.g., have a look at the following conferences: * DATE: Design Automation and Test in Europe: www.date-conference.com * CODES (Hardware-Software Codesign) + ISSS (International Symposium on System Synthesis): www.codes-isss.org * CASES: Compilers, Architectures, and Synthesis for Embedded Systems: www.casesconference.org * IEEE MICRO: Symposium on Micro Arch: www.microarch.org * HPCA: High-Performance Computer Architecture: www.hpcaconf.org * PACT: parallel architectures and compilation techniques: www.eecg.toronto.edu/pact * A larger list can be found here . * The paper should be published in 2010 or later (try to choose a very recent papers).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* You should make a powerpoint presentation on your topic; max 10 min. per presentation (so about10 slides; e.g. a few slides introducing the problem, then the approach and results of each paper, and final conclusion and suggestions from your side on this topic; add / use clearpictures to explain the approach)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The presentation should contain at least the following: * Summary of the paper contirbution (including technical details) * Your evaluation of the paper and topic * strong points * weak points * applicability of proposed methodology / solution * indicate new / future directions of research * In order to evaluate the paper you may have to read related material on the same topic. * Your presentation will be evaluated by us.
This evaluation will be taking into account for the final grading.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Hands-on lab work Becoming a very good Embedded Computer Architect you have to practice a lot.
Therefore, as part of this course we have put a lot of effort to prepare 3 very interesting lab assignments.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For each lab there is a website with all the required documentation and preparation material.
These lab assignments can be made on your own laptop, with for certain parts, remote access to our server systems.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For every lab you have to write a report, which has to be sent to one of the course assistants.
Hands-on 1: Processor Design Space Exploratoin, based on the Silicon Hive Architecture In the past we had several architecture design space exploration (DSE) labs, using the Transport Triggered Architecture (TTA) framework,  using the Imagine Processor, and one using the AR|T tools.
This year we base the first lab on  the reconfigurable processor from Silicon Hive For this excercise:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Check the link http://www.es.ele.tue.nl/~akash/5kk73.php You'll find several pdf files.
Have a look at all of them first.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Then check the start-up guide in detail. * Thereafter start with the assignment.It also describes what are the deliverables you have to sent in (as a small report).
The report should be send to Akash Kumar.
He can also help you with questions. * Hands-on 2: Platform Programming In this lab you are asked to program a (multi-)processor platform.
In the past we developed various labs:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* using the Wica platform (with a 320 PE SIMD processor, the Xetal); see (c) below.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* using the CELL platform (CELL is used in the e.g. the PlayStation 3; it has besides a PowerPC RISC processor upto 8 other processors for the high-performance kernels; these processors also exploit sub-word SIMD); see (b) below.
This year, 2012, we will take an x86 plus graphic processing unit (GPU) as platform.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Programming Graphic Processing Units Graphic processing units (GPUs) can contain upto hundreds of Processing Engines (PEs).
They achieve performance levels of hundreds of GFLOPS (10&lt;s&gt;9 floating point operations per second).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In the past GPUs were very dedicated, not general programmable, and  could only be used to speedup graphics processing.
Today, they become more-and-more general purpose.
The latest GPUs of ATI and NVIDIA can be programmed in C and OpenCL.
For this lab we will use NVIDIA GPUs together with the CUDA (based on C) programming environment.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Start with setting up the CUDA environment, studying the available learning materials, and running the example programs.
We added one extensive example program, about matrix multiplication, which demonstrates various GPU programming optimizations.
You will see getting something running using CUDA is not so difficult, but getting it efficiently running will take quite some effort.
After studying the example and learning material you have to perform your own assignment and hand in a small report.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The purpose is the use your GPU as efficient as possible.
All the details about this assignment can be found on the GPU-assignment site .
The assignment is made by Dongrui She and Zhenyu Ye.
For questions contact d.she _at_ tue.nl.
When finished, send in a small report about your result and various applied optimizations to Dongrui She.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Hands-on 3: Exploiting the data memory hierarchy for high performance and low power In this exercise you are asked to optimize a C algorithm by using the discussed data management techniques.
This should result into an implementation which shows a much improved memory behavior.
This improves performance and energy consumption.
In this exercise we mainly concentrate on reducing energy consumption.
You need to download the following, and follow the instructions.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The 2011 year assignment can be found here .
The algorithm is based on Harris corner detection.
You will start with a default platform, containing 2 levels of cache.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>First calculate the results of your code optimizations for this platform.
Thereafter you are free to tune the platform for the given application, e.g. changing the caches, or even use ScratchPad memory (SRAM) instead of, or in addition to, caches.
Success !
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Examination The examination will be oral about the treated course theory, the lab report(s), and studied articles.
Likely week: 4th week of January 2013.
Grading depends on your results on theory, lab exercises and your presentation.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Related material and other links * The computer architecture webpage * Good online introduction to MIPS programming * Interesting Wikipedia pages to read: * CPU: Central Processing Unit * History of computing hardware * History of general purpose CPUs * List of Intel Processors * AMD processors * Graphic processors * Multi-processing * About VLIWs: Embedded Computing: A VLIW Approach to Architecture, Compilers and Tools   Book by Joseph A.
Fisher, Paolo Faraboschi, and Cliff Young; 2005 Interesting processor architectures:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The cell architecture , made by Sony, IBM and Toshiba, and used e.g. in Playstation 3 * TRIPS architecture , combining several types of parallelism * The tile based RAW architecture from MIT * Imagine , a hybrid SIMD - VLIW architecture from Stanford * Merrimac , the successor of the Imagine * ChipCon, check e.g. their system-on-chip: CC1110 * MAXQ from MAXIM, Dallas; a Transport Triggered Architecture * Aethereal , a Network-on-Chip from Philips Back to homepage of Henk Corporaal Schaum's Outline of Computer Architecture (Schaum's Outline Series): Nick Carter: 9780071362078: Amazon.com: Books Amazon Join Prime * Your Amazon.com * Today's Deals * Gift Cards * Help Shop by Department Search All All DepartmentsAmazon Instant VideoAppliancesApps for AndroidArts, Crafts &amp; SewingAutomotiveBabyBeauty BooksCell Phones &amp; AccessoriesClothing &amp; AccessoriesCollectiblesComputersCredit CardsElectronicsGift Cards StoreGrocery &amp; Gourmet FoodHealth &amp; Personal Care Home &amp; KitchenIndustrial &amp; ScientificJewelryKindle StoreMagazine Subscriptions Movies &amp; TVMP3 MusicMusicMusical InstrumentsOffice ProductsPatio, Lawn &amp; Garden Pet SuppliesShoesSoftwareSports &amp; OutdoorsTools &amp; Home ImprovementToys &amp; Games Video GamesWatches Hello.
Sign in Your Account Join Prime Cart 0 Wish List * Books * Advanced Search * New Releases * Best Sellers * The New York Times® Best Sellers * Children's Books * Textbooks * Sell Your Books * Best Books of the Month Schaum's Outline of Computer Architecture and over one million other books are available forAmazon Kindle.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Learn more Buy New OOOOOO OOOO OOOOO $15.47 Quantity: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 Yes, I want FREE Two-Day Shipping with Amazon Prime Amazon Prime Free Trial FREE Two-Day Shipping is available to Amazon Prime members.
To join, select &quot;Yes, I want FREE Two-Day Shipping with Amazon Prime&quot; above the Add to Cart button and confirm your Amazon Prime free trial sign-up during checkout.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Amazon Prime members enjoy:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Unlimited Free Two-Day Shipping * One-Day Shipping for just $3.99/item * No Minimum Purchase for free or discounted shipping Important: Your credit card will NOT be charged when you start your free trial or if you cancel during the trial period.
If you're happy with Amazon Prime, do nothing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>At the end of the free trial, your membership will automatically upgrade to a full year for $79. or Sign in to turn on 1-Click ordering Sell Us Your Item For a $2.00 Gift Card Learn more More Buying Choices Have one to sell?
Sell yours here Start readingSchaum's Outline of Computer Architecture on your Kindlein under a minute.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Don't have a Kindle?
Get your Kindle here , or download a FREE Kindle Reading App .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Sorry, this item is not available in Image not available for Color: Image not available To view this video download Flash Player   Share your own customer images Schaum's Outline of Computer Architecture (Schaum's Outline Series)[Paperback]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Nick Carter (Author) 4.0 out of 5 stars   See all reviews  (3 customer reviews ) List Price: $21.00 Price: $15.47 &amp; FREE Shipping on orders over $25.
Details Deal Price: You Save: $5.53 (26%) o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Only 12 left in stock (more on the way).
Ships from and sold by Amazon.com.
Gift-wrap available.
Want it Thursday, April 18?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Choose One-Day Shipping at checkout.
Details Formats Amazon price New from Used from Kindle Edition $9.99   -- -- Paperback $15.47   -- -- See # more paperbacks Show fewer paperbacks Shop the new tech.book(store) New!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Introducing the tech.book(store) , a hub for Software Developers and Architects, Networking Administrators, TPMs, and other technology professionals to find highly-rated and highly-relevant career resources.
Shop books onprogramming and big data , or read this week's blog posts by authors and thought-leaders in the tech industry.&gt; Shop now ›  See more product promotions Book Description Publication Date: December 26, 2001 | ISBN-10: 007136207X | ISBN-13: 978-0071362078 | Edition: 1 * A problem/solution manual, integrating general principles and laboratory exercises, that provides students with the hands-on experience needed to master the basics of modern computer system design * Features more than 200 detailed problems, with step-by-step solutions; many detailed graphics and charts; chapter summaries with additional &quot;rapid-review&quot; questions; and expert sidebar tips * Describes analytical methods for quantifying real-world design choices regarding instruction sets, pipelining, cache, memory, I/O, and other critical hardware and software elements involved in building computers * An ideal educational resource for the more than 70,000 undergraduate and graduate students who, each year, enroll in computer architecture and related courses Show more Show less * A problem/solution manual, integrating general principles and laboratory exercises, that provides students with the hands-on experience needed to master the basics of modern computer system design * Features more than 200 detailed problems, with step-by-step solutions; many detailed graphics and charts; chapter summaries with additional &quot;rapid-review&quot; questions; and expert sidebar tips * Describes analytical methods for quantifying real-world design choices regarding instruction sets, pipelining, cache, memory, I/O, and other critical hardware and software elements involved in building computers * An ideal educational resource for the more than 70,000 undergraduate and graduate students who, each year, enroll in computer architecture and related courses Frequently Bought Together + + Price for all three: $48.57 Show availability and shipping details Buy the selected items together * This item: Schaum's Outline of Computer Architecture (Schaum's Outline Series) by Nick Carter Paperback $15.47 * Schaum's Outline of Operating Systems by J.
Archer Harris Paperback $19.95 * Schaum's Outline of Principles of Computer Science (Schaum's Outline Series)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Students love Schaum's Outlines because they produce results.
Each year, hundreds of thousands of students improve their test scores and final grades with these indispensable study guides.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Get the edge on your classmates.
Use Schaum's!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If you don't have a lot of time but want to excel in class, this book helps you:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Use detailed examples to solve problems * Brush up before tests * Find answers fast * Study quickly and more effectively * Get the big picture without poring over lengthy textbooks Schaum's Outlines give you the information your teachers expect you to know in a handy and succinct format­­without overwhelming you with unnecessary jargon.
You get a complete overview of the subject.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Plus, you get plenty of practice exercises to test your skill.
Compatible with any classroom text, Schaum's let you study at your own pace and remind you of all the important facts you need to remember­­fast!
And Schaum's are so complete, they're perfect for preparing for graduate or professional exams.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Inside, you will find:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Overview of hardware and software design elements in computer systems * Concise explanations of hardware and software interface * Complete details on the efficient use of system resources * Solved problems in: instruction sets, pipelining, cache, memory, I/O and more!
If you want top grades and a thorough understanding of computer architecture, this powerful study tool is the best tutor you can have!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Introduction * Binary Logic * Computer Arithmetic * Machine Organization * Programming Models * Basic Processor Design * Pipelining * Instruction-Level Parallelism * Introduction to Memory Systems * Cache Memories * Virtual Memory * Input/Output Systems * Introduction to Multiprocessors Related Titles in Schaum's Outlines Computing * Assembly Language * Combinatorics * Computer Graphics, 2nd Ed. * Data Structures with C++ * Essential Computer Mathematics * Fundamentals of Computing with C++ * Fundamentals of SQL Programming * Introduction to Computer Science * Mathematica * Microprocessor Fundamentals, 2nd Ed. * Operating Systems * Programming with Basic * Programming with C, 2nd Ed. * Programming with C++, 2nd Ed. * Programming with FORTRAN 77 * Programming with FORTRAN 90 * Programming with Java * Programming with Modern Structured COBOL, 2nd Ed. * Programming with Pascal, 2nd Ed. * Programming with Structured Basic, 4th Ed.
About the Author Nick Carter, Ph.D.
(Urbana, IL) is an assistant professor at the University of Illinois, Urbana-Champaign.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>He holds a doctorate in computer science from MIT, has worked at IBM’s Yorktown, NY, research facility and was the memory system architect on MIT’s prestigious M-Machine project.
Product Details * Paperback: 306 pages * Publisher: McGraw-Hill; 1 edition (December 26, 2001) * Language: English * ISBN-10: 007136207X * ISBN-13: 978-0071362078 * Product Dimensions: 8.4 x 0.7 x 10.7 inches * Shipping Weight: 1.6 pounds (View shipping rates and policies ) * Average Customer Review: 4.0 out of 5 stars   See all reviews  (3 customer reviews ) * Amazon Best Sellers Rank: #562,954 in Books (See Top 100 in Books ) Would you like to update product info orgive feedback on images ?
More About the Author › Visit Amazon's Nicholas Carter Page Discover books, learn about writers, read author blogs, and more.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Customer Reviews 4.0 out of 5 stars (3 ) 4.0 out of 5 stars 5 star 1 4 star 1 3 star 1 2 star 0 1 star 0 See all 3 customer reviews Share your thoughts with other customers Write a customer review Most Helpful Customer Reviews 21 of 21 people found the following review helpful 4.0 out of 5 stars Pretty good overview of computer architecture January 7, 2006 By calvinnme HALL OF FAME TOP 500 REVIEWER VINE™ VOICE Format:Paperback Quite frankly, I was surprised at the usefulness of this Schaum's outline.
I didn't think that the Schaum's outline format would work for a subject like computer architecture, but it does.
All aspects of computer architecture are covered from computer arithmetic to processor design to memory systems to the advanced topic of multiprocessing.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The format of the outline is a little different from the Schaum's usual formula.
Each chapter consists of an &quot;Objectives&quot; section, followed by an introduction, followed by the various subsections of that chapter.
There are examples and exercises on instruction set design, program design, block diagrams, and quite a few mathematical problems.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This book is probably best suited to the advanced undergraduate or for self-study of the subject.
If you are a graduate student that is using Hennessy's &quot;Computer Architecture: A Quantitative Approach&quot; the level of difficulty of the mathematical problems in that book is not matched by this one, and you should look for another source.
Otherwise I recommend this guide for most students of computer architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Comment |  Was this review helpful to you?
Yes No 6 of 6 people found the following review helpful 5.0 out of 5 stars Nice for review December 19, 2010 By Joseph M. Pereira Format: Paperback|Amazon Verified Purchase This is a nice book for review of the basic concepts of computer architecture.
Like other Schaum's outlines books, the concepts are explained in a concise manner with examples and solved problems to reinforce and clarify the material.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Comment |  Was this review helpful to you?
Yes No 0 of 12 people found the following review helpful 3.0 out of 5 stars meh November 27, 2011 By etosch Format:Paperback|Amazon Verified Purchase I bought this book two years ago to prep for the compsci GRE.
Didn't use it.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It's okay, but I didn't take the GRE and still got into my top grad school.
1 Comment |  Was this review helpful to you?
Yes No › See all 3 customer reviews (newest first)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Write a customer review Search Customer Reviews Only search this product's reviews Start your free trial and join millions of Amazon Prime members who enjoy: Prime Instant Videos Watch over 38,000 movies and TV episodes Free Two-Day Shipping Get fast, free shipping on over 15 million items Kindle Owners' Lending Library Borrow from over 300,000 titles for free &gt; Get started Watch.
Read.
Shop.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Relax.
Millions of Amazon Prime members enjoy instant videos, free Kindle books and unlimited free two-day shipping. &gt; Get started * Unlimited Instant Videos * Prime Instant Videos Unlimited streaming of thousands of movies and TV shows with Amazon Prime * Learn More About Amazon Prime * Amazon Instant Video Store Rent or buy hit movies and TV shows to stream or download * Your Video Library Your movies and TV shows stored in the cloud * Watch Anywhere Watch instantly on your Kindle Fire, TV, Blu-ray player, or set-top box * MP3s &amp; Cloud Player * MP3 Music Store Shop over 20 million songs * Music on Kindle Fire Discover how to play your music * Cloud Player for Web Play from any browser * Cloud Player for Android For Android phones and tablets * Cloud Player for iOS For iPhone, iPad and iPod touch * Cloud Player for Home For Sonos and Roku * Amazon Cloud Drive * Your Cloud Drive 5 GB of free storage * Get the Desktop App For Windows and Mac * Cloud Drive Photos for Android For Android phones and tablets * Learn More About Cloud Drive * Kindle E-readers * Kindle Small, light, perfect for reading * Kindle Paperwhite World's most advanced e-reader * Kindle Paperwhite 3G With free 3G wireless * Kindle E-reader Accessories Covers, chargers, sleeves and more * Kindle Store * Kindle Books * Newsstand * Kindle Owners' Lending Library With Prime, Kindle owners read for free * Kindle Fire * Fire All new--faster, twice the memory * Fire HD 7&quot;, Dolby audio, ultra-fast Wi-Fi * Fire HD 8.9&quot; 8.9&quot;, Dolby audio, ultra-fast Wi-Fi * Fire HD 8.9&quot; 4G With ultra-fast 4G LTE wireless * Kindle Fire Accessories Cases, chargers, sleeves and more * Kindle Apps &amp; Resources * Kindle Cloud Reader Read your Kindle books in a browser * Free Kindle Reading Apps For PC, iPad, iPhone, Android, and more * Manage Your Kindle * Appstore for Android * Apps * Games * Test Drive Apps Try thousands of apps and games right now * Amazon Apps Kindle, mobile shopping, MP3, and more * Your Apps and Devices View your apps and manage your devices * Digital Games &amp; Software * Game Downloads For PC and Mac * Free-to-Play Games For PC and Mac * Software Downloads For PC and Mac * Your Games &amp; Software Library * Audible Audiobooks * Audible Membership Get to know Audible * Audible Audiobooks &amp; More * Bestsellers * New &amp; Notable * Listener Favorites * Whispersync for Voice Switch between reading and listening * Books * Books * Kindle Books * Children's Books * Textbooks * Audiobooks * Magazines * Movies, Music &amp; Games * Movies &amp; TV * Blu-ray * Amazon Instant Video * Music * MP3 Downloads * Musical Instruments * Entertainment Collectibles * Video Games * Game Downloads * Electronics * TV &amp; Video * Home Audio &amp; Theater * Camera, Photo &amp; Video * Cell Phones &amp; Accessories * Video Games * MP3 Players &amp; Accessories * Car Electronics &amp; GPS * Appliances * Musical Instruments * Electronics Accessories * Computers * Laptops, Tablets &amp; Netbooks * Desktops &amp; Servers * Computer Accessories &amp; Peripherals External drives, mice, networking &amp; more * Computer Parts &amp; Components * Software * PC Games * Printers &amp; Ink * Office &amp; School Supplies * Home, Garden &amp; Pets * Kitchen &amp; Dining * Furniture &amp; Décor * Bedding &amp; Bath * Appliances * Patio, Lawn &amp; Garden * Arts, Crafts &amp; Sewing * Pet Supplies * Tools, Home Improvement * Home Improvement * Power &amp; Hand Tools * Lamps &amp; Light Fixtures * Kitchen &amp; Bath Fixtures * Hardware * Building Supplies * Grocery, Health &amp; Beauty * Grocery &amp; Gourmet Food * Wine * Natural &amp; Organic * Health &amp; Personal Care * Beauty * Toys, Kids &amp; Baby * Toys &amp; Games * Baby * Kids' Clothing * Baby Clothing * Video Games for Kids * Amazon Mom 20% off diapers, free shipping and more * Baby Registry * Clothing, Shoes &amp; Jewelry * Clothing * Shoes * Handbags * Accessories * Luggage * Jewelry * Watches * Sports &amp; Outdoors * Exercise &amp; Fitness * Outdoor Recreation * Hunting &amp; Fishing * Cycling * Athletic &amp; Outdoor Clothing * Boating &amp; Water Sports * Team Sports * Fan Shop * Sports Collectibles * Golf * All Sports &amp; Outdoors * Automotive * Automotive Parts &amp; Accessories * Automotive Tools &amp; Equipment * Car Electronics &amp; GPS * Tires &amp; Wheels * Motorcycle &amp; ATV * Industrial &amp; Scientific * Industrial Supplies * Lab &amp; Scientific * Janitorial * Safety * Unlimited Instant Videos * MP3s &amp; Cloud Player20 million songs, play anywhere * Amazon Cloud Drive5 GB of free storage * Kindle * Appstore for AndroidGet a premium app for free today * Digital Games &amp; Software * Audible Audiobooks * Books * Movies, Music &amp; Games * Electronics &amp; Computers * Home, Garden &amp; Tools * Grocery, Health &amp; Beauty * Toys, Kids &amp; Baby * Clothing, Shoes &amp; Jewelry * Sports &amp; Outdoors * Automotive &amp; Industrial * ›Full Store Directory * Sign in New customer?
Start here.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Your Account * Your Orders * Your Wish List * Your Recommendations * Your Subscribe &amp; Save Items * Manage Your Kindle * Your Cloud Player Play from any browser * Your Cloud Drive 5 GB of free storage * Prime Instant Videos Unlimited streaming of thousands of movies and TV shows * Your Video Library * Your Games &amp; Software Library * Your Android Apps &amp; Devices Your Shopping Cart is empty.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Give it purpose—fill it with books, DVDs, clothes, electronics, and more.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If you already have an account, sign in .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There's a problem previewing your cart right now.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Check your Internet connection and go to your cart , or try again .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>View Cart (0 items) (0 item) (0 items)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Create a Wish List * Find a Wish List or Registry * Wish from Any Website Add items to your List from anywhere * Wedding Registry * Baby Registry * Kids' Birthdays * Friends &amp; Family Gifting Front Cover  | Table of Contents  | First Pages  | Index  | Back Cover  | Surprise Me!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Search Inside This Book: Books on Related Topics (learn more )   Computer Organization and Design, Third Edition by David A.
PattersonDiscusses: * physical page number * average memory access time * virtual page number Parallel Computer Architecture by David E.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CullerDiscusses: * pipeline latch * instruction latency * signaling convention Computer Architecture by John L.
HennessyDiscusses: * instruction issue logic * pipeline latch * result forwarding Computer Architecture by John L.
HennessyDiscusses: * unpipelined processor * average memory access time * virtual page number   What Other Items Do Customers Buy After Viewing This Item?
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Schaum's Outline of Principles of Computer Science (Schaum's Outline Series)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text> by Paul Tymann Paperback 4.0 out of 5 stars  (6 ) $13.15 * Schaum's Outline of Digital Principles  by Roger Tokheim Paperback 4.0 out of 5 stars  (8 ) $13.99 * The Elements of Computing Systems: Building a Modern Computer from First Principles  by Noam Nisan Paperback 4.7 out of 5 stars  (30 ) $26.02 * How Computers Work (9th Edition)  by Ron White Paperback 4.1 out of 5 stars  (33 ) $20.22 › Explore similar items Like 1366175035 false -1 23 23 22 (23) Forums There are no discussions about this product yet.
Be the first to discuss this product with the community.
Start a Discussion Start a new discussion Topic: First post: Receive e-mail when new posts are made Prompts for sign-in   Guidelines Listmania!
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>*   General References for Scientific Computing : A list byNorbert &quot;norb9&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>*   Computer Science Reading List : A list byChristopher S. Duffy *   Destination Compilers : A list by Zlatozar &quot;zlatozar&quot; Create a Listmania! list Search Listmania!
So You'd Like to...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>*   Move from software into hardware - a little : A guide by wiredweird &quot;wiredweird&quot; Create a guide Search Guides Look for Similar Items by Category * Books &gt; Computers &amp; Technology &gt; Computer Science * Books &gt; Computers &amp; Technology &gt; Hardware &gt;Design &amp; Architecture * Books &gt; Education &amp; Reference &gt;Studying &amp; Workbooks &gt; Study Guides * Books &gt; New, Used &amp; Rental Textbooks &gt; Computer Science * Books &gt; New, Used &amp; Rental Textbooks &gt; Test Prep &amp; Study Guides * Books &gt; Professional &amp; Technical &gt; Architecture Get to Know Us * Careers * Investor Relations * Press Releases * Amazon and Our Planet * Amazon in the Community Make Money with Us * Sell on Amazon * Become an Affiliate * Advertise Your Products * Independently Publish with Us * › See all Let Us Help You * Your Account * Shipping Rates &amp; Policies * Amazon Prime * Returns Are Easy * Manage Your Kindle * Help Brazil Canada China France Germany Italy Japan Spain United Kingdom 6pm Score deals on fashion brands AbeBooks Rare Books &amp; Textbooks AfterSchool.com Kids' Sports, Footwear, Dance &amp; Crafts AmazonFresh Groceries &amp; More Right To Your Door AmazonLocal Great Local Deals in Your City AmazonSupply Business, Industrial &amp; Scientific Supplies AmazonWebServices Scalable Cloud Services Askville Community Answers   Audible Download Audio Books BeautyBar.com Prestige Beauty Delivered Book Depository Books With Free Delivery Worldwide Bookworm.com Books For Children Of All Ages Casa.com Kitchen, Storage &amp; Everything Home CreateSpace Indie Print Publishing Made Easy Diapers.com Everything But The Baby DPReview Digital Photography   Fabric Sewing, Quilting &amp; Knitting IMDb Movies, TV &amp; Celebrities Junglee.com Shop Online in India Kindle Direct Publishing Indie Digital Publishing Made Easy MYHABIT Private Fashion Designer Sales Shopbop Designer Fashion Brands Soap.com Health, Beauty &amp; Home Essentials Vine.com Everything to Live Life Green     Wag.com Everything For Your Pet Warehouse Deals Open-Box Discounts Woot Never Gonna Give You Up Yoyo.com A Happy Place To Shop For Toys Zappos Shoes &amp; Clothing     Conditions of Use Privacy Notice Interest-Based Ads © 1996-2013, Amazon.com, Inc. or its affiliates Computer - Wikipedia, the free encyclopedia Computer From Wikipedia, the free encyclopedia Jump to: navigation , search For other uses, see Computer (disambiguation) .
&quot;Computer technology&quot; redirects here.
For the company, seeComputer Technology Limited .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>&quot;Computer system&quot; redirects here.
For other uses, seeComputer system (disambiguation) .
Computer A computer is a general purpose device that can beprogrammed to carry out a finite set of arithmetic or logical operations.
Since a sequence of operations can be readily changed, the computer can solve more than one kind of problem.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Conventionally, a computer consists of at least one processing element, typically acentral processing unit (CPU) and some form of memory .
The processing element carries out arithmetic and logic operations, and a sequencing and control unit that can change the order of operations based on stored information.
Peripheral devices allow information to be retrieved from an external source, and the result of operations saved and retrieved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The first electronic digital computers were developed between 1940 and 1945 in the United Kingdom and United States.
Originally they were the size of a large room, consuming as much power as several hundred modernpersonal computers (PCs).[1]
In this era mechanical analog computers were used for military applications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Modern computers based on integrated circuits are millions to billions of times more capable than the early machines, and occupy a fraction of the space.[ 2]
Simple computers are small enough to fit intomobile devices , and mobile computers can be powered by small batteries .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Personal computers in their various forms areicons of theInformation Age and are what most people think of as “computers.&quot;
However, theembedded computers found in many devices from MP3 players to fighter aircraft and from toys to industrial robots are the most numerous.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Contents * 1 History of computing * 1.1 Limited-function early computers * 1.2 First general-purpose computers * 1.3 Stored-program architecture * 1.4 Semiconductors and microprocessors * 2 Programs * 2.1 Stored program architecture * 2.2 Bugs * 2.3 Machine code * 2.4 Programming language * 2.4.1 Low-level languages * 2.4.2 Higher-level languages * 2.5 Program design * 3 Components * 3.1 Control unit * 3.2 Arithmetic logic unit (ALU)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 3.3 Memory * 3.4 Input/output (I/O)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* 3.5 Multitasking * 3.6 Multiprocessing * 3.7 Networking and the Internet * 3.8 Computer architecture paradigms * 4 Misconceptions * 4.1 Required technology * 5 Further topics * 5.1 Artificial intelligence * 5.2 Hardware * 5.2.1 History of computing hardware * 5.2.2 Other hardware topics * 5.3 Software * 5.4 Languages * 5.5 Professions and organizations * 6 See also * 7 Notes * 8 References * 9 External links History of computing The Jacquard loom , on display at the Museum of Science and Industry in Manchester , England, was one of the first programmable devices.
Main article: History of computing hardware The first use of the word “computer&quot; was recorded in 1613 in a book called “The yong mans gleanings&quot; by English writer Richard BraithwaitI haue read the truest computer of Times, and the best Arithmetician that euer breathed, and he reduceth thy dayes into a short number.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>It referred to a person who carried out calculations, or computations, and the word continued with the same meaning until the middle of the 20th century.
From the end of the 19th century the word began to take on its more familiar meaning, a machine that carries out computations.[3]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Limited-function early computers The history of the modern computer begins with two separate technologies, automated calculation and programmability.
However no single device can be identified as the earliest computer, partly because of the inconsistent application of that term.
A few devices are worth mentioning though, like some mechanical aids to computing, which were very successful and survived for centuries until the advent of theelectronic calculator , like the Sumerian abacus , designed around 2500 BC[4] of which a descendant won a speed competition against a modern desk calculating machine in Japan in 1946,[5] the slide rules , invented in the 1620s, which were carried on fiveApollo space missions, including to the moon[6] and arguably the astrolabe and the Antikythera mechanism , an ancient astronomical computer built by theGreeks around 80 BC.[7]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Greek mathematicianHero of Alexandria (c.
10–70 AD) built a mechanical theater which performed a play lasting 10 minutes and was operated by a complex system of ropes and drums that might be considered to be a means of deciding which parts of the mechanism performed which actions and when.[8]
This is the essence of programmability.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Around the end of the 10th century, the French monk Gerbert d'Aurillac brought back from Spain the drawings of a machine invented by theMoors that answered either Yes or No to the questions it was asked.[9]
Again in the 13th century, the monksAlbertus Magnus andRoger Bacon built talking androids without any further development (Albertus Magnus complained that he had wasted forty years of his life whenThomas Aquinas , terrified by his machine, destroyed it).[10]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In 1642, the Renaissance saw the invention of the mechanical calculator ,[11] a device that could perform all four arithmetic operations without relying on human intelligence.[12]
The mechanical calculator was at the root of the development of computers in two separate ways.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Initially, it was in trying to develop more powerful and more flexible calculators[13] that the computer was first theorized byCharles Babbage [14] [15] and then developed.[16]
Secondly, development of a low-costelectronic calculator , successor to the mechanical calculator, resulted in the development byIntel [17] of the first commercially availablemicroprocessor integrated circuit.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>First general-purpose computers In 1801, Joseph Marie Jacquard made an improvement to the textile loom by introducing a series of punched paper cards as a template which allowed his loom to weave intricate patterns automatically.
The resulting Jacquard loom was an important step in the development of computers because the use of punched cards to define woven patterns can be viewed as an early, albeit limited, form of programmability.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Most Famous Image in the Early History of Computing[18]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This portrait of Jacquard was woven in silk on a Jacquard loom and required 24,000 punched cards to create (1839).
It was only produced to order.Charles Babbage owned one of these portraits; it inspired him in using perforated cards in hisanalytical engine .[19]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Zuse Z3 , 1941, considered the world's first working programmable, fully automatic computing machine.
It was the fusion of automatic calculation with programmability that produced the first recognizable computers.
In 1837,Charles Babbage was the first to conceptualize and design a fully programmablemechanical computer , his analytical engine .[20]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Limited finances and Babbage's inability to resist tinkering with the design meant that the device was never completed—nevertheless his son, Henry Babbage, completed a simplified version of the analytical engine's computing unit (themill) in 1888.
He gave a successful demonstration of its use in computing tables in 1906.
This machine was given to theScience museum in South Kensington in 1910.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In the late 1880s, Herman Hollerith invented the recording of data on a machine-readable medium.
Earlier uses of machine-readable media had been for control, not data. “After some initial trials withpaper tape , he settled on punched cards...&quot;[21]
To process these punched cards he invented thetabulator , and thekeypunch machines.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>These three inventions were the foundation of the modern information processing industry.
Large-scale automated data processing of punched cards was performed for the 1890 United States Census by Hollerith's company, which later became the core ofIBM .
By the end of the 19th century a number of ideas and technologies, that would later prove useful in the realization of practical computers, had begun to appear:Boolean algebra , thevacuum tube (thermionic valve), punched cards and tape, and theteleprinter .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>During the first half of the 20th century, many scientific computing needs were met by increasingly sophisticatedanalog computers , which used a direct mechanical or electrical model of the problem as a basis for computation .
However, these were not programmable and generally lacked the versatility and accuracy of modern digital computers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Alan Turing is widely regarded as the father of moderncomputer science .
In 1936, Turing provided an influential formalization of the concept of thealgorithm and computation with the Turing machine , providing a blueprint for the electronic digital computer.[22]
Of his role in the creation of the modern computer,Time magazine in naming Turing one of the100 most influential people of the 20th century, states: “The fact remains that everyone who taps at a keyboard, opening a spreadsheet or a word-processing program, is working on an incarnation of a Turing machine.&quot;[22]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The ENIAC , which became operational in 1946, is considered to be the first general-purpose electronic computer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>EDSAC was one of the first computers to implement the stored-program (von Neumann ) architecture.
The Atanasoff–Berry Computer (ABC) was the world's first electronic digital computer, albeit notprogrammable .[23]
Atanasoff is considered to be one of the fathers of the computer.[24]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Conceived in 1937 by Iowa State College physics professorJohn Atanasoff , and built with the assistance of graduate studentClifford Berry ,[25 ] the machine was not programmable, being designed only to solve systems of linear equations.
The computer did employ parallel computation.
A1973 court ruling in a patent dispute found that the patent for the 1946ENIAC computer derived from the Atanasoff–Berry Computer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The first program-controlled computer was invented by Konrad Zuse , who built the Z3 , an electromechanical computing machine, in 1941.[26]
The first programmable electronic computer was theColossus , built in 1943 by Tommy Flowers .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>George Stibitz is internationally recognized as a father of the modern digital computer.
While working at Bell Labs in November 1937, Stibitz invented and built a relay-based calculator he dubbed the “Model K&quot; (for “kitchen table,&quot; on which he had assembled it), which was the first to usebinary circuits to perform an arithmetic operation .
Later models added greater sophistication including complex arithmetic and programmability.[27]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A succession of steadily more powerful and flexible computing devices were constructed in the 1930s and 1940s, gradually adding the key features that are seen in modern computers.
The use of digital electronics (largely invented byClaude Shannon in 1937) and more flexible programmability were vitally important steps, but defining one point along this road as “the first digital electronic computer&quot; is difficult.Shannon 1940 Notable achievements include:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Konrad Zuse 's electromechanical “Z machines.&quot;
The Z3 (1941) was the first working machine featuringbinary arithmetic, including floating point arithmetic and a measure of programmability.
In 1998 the Z3 was proved to beTuring complete , therefore being the world's first operational computer.[28]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The non-programmable Atanasoff–Berry Computer (commenced in 1937, completed in 1941) which used vacuum tube basedcomputation , binary numbers, and regenerative capacitor memory .
The use of regenerative memory allowed it to be much more compact than its peers (being approximately the size of a large desk or workbench), since intermediate results could be stored and then fed back into the same set of computation elements. * The secret British Colossus computers (1943),[29] which had limited programmability but demonstrated that a device using thousands of tubes could be reasonably reliable and electronically re-programmable.
It was used for breaking German wartime codes. * The Harvard Mark I (1944), a large-scale electromechanical computer with limited programmability.[30]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* The U.S. Army's Ballistic Research Laboratory ENIAC (1946), which used decimal arithmetic and is sometimes called the first general purposeelectronic computer (sinceKonrad Zuse 's Z3 of 1941 used electromagnets instead of electronics ).
Initially, however, ENIAC had an architecture which required rewiring aplugboard to change its programming.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Stored-program architecture This section does notcite any references or sources .
Please help improve this section byadding citations to reliable sources .
Unsourced material may be challenged andremoved .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(July 2012) Several developers of ENIAC, recognizing its flaws, came up with a far more flexible and elegant design, which came to be known as the “stored-program architecture&quot; orvon Neumann architecture .
This design was first formally described byJohn von Neumann in the paper First Draft of a Report on the EDVAC , distributed in 1945.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A number of projects to develop computers based on the stored-program architecture commenced around this time, the first of which was completed in 1948 at theUniversity of Manchester in England, the Manchester Small-Scale Experimental Machine (SSEM or “Baby&quot;).
TheElectronic Delay Storage Automatic Calculator (EDSAC), completed a year after the SSEM at Cambridge University, was the first practical, non-experimental implementation of the stored-program design and was put to use immediately for research work at the university.
Shortly thereafter, the machine originally described by von Neumann's paper—EDVAC —was completed but did not see full-time use for an additional two years.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Nearly all modern computers implement some form of the stored-program architecture, making it the single trait by which the word “computer&quot; is now defined.
While the technologies used in computers have changed dramatically since the first electronic, general-purpose computers of the 1940s, most still use the von Neumann architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Die of an Intel 80486DX2 microprocessor (actual size: 12×6.75 mm) in its packaging Beginning in the 1950s, Soviet scientists Sergei Sobolev and Nikolay Brusentsov conducted research on ternary computers , devices that operated on a base three numbering system of -1, 0, and 1 rather than the conventionalbinary numbering system upon which most computers are based.
They designed theSetun , a functional ternary computer, at Moscow State University .
The device was put into limited production in the Soviet Union, but supplanted by the more common binary architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Semiconductors and microprocessors Computers using vacuum tubes as their electronic elements were in use throughout the 1950s, but by the 1960s they had been largely replaced bytransistor -based machines, which were smaller, faster, cheaper to produce, required less power, and were more reliable.
The first transistorized computer was demonstrated at theUniversity of Manchester in 1953.[31]
In the 1970s, integrated circuit technology and the subsequent creation ofmicroprocessors , such as the Intel 4004 , further decreased size and cost and further increased speed and reliability of computers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>By the late 1970s, many products such asvideo recorders contained dedicated computers calledmicrocontrollers , and they started to appear as a replacement to mechanical controls in domestic appliances such aswashing machines .
The 1980s witnessed home computers and the now ubiquitous personal computer.
With the evolution of the Internet, personal computers are becoming as common as the television and the telephone in the household.[ citation needed ]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Modern smartphones are fully programmable computers in their own right, and as of 2009 may well be the most common form of such computers in existence.[citation needed ]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Programs Alan Turing was an influential computer scientist.
The defining feature of modern computers which distinguishes them from all other machines is that they can beprogrammed .
That is to say that some type ofinstructions (the program ) can be given to the computer, and it will process them.
Modern computers based on thevon Neumann architecture often have machine code in the form of animperative programming language .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In practical terms, a computer program may be just a few instructions or extend to many millions of instructions, as do the programs forword processors and web browsers for example.
A typical modern computer can execute billions of instructions per second (gigaflops ) and rarely makes a mistake over many years of operation.
Large computer programs consisting of several million instructions may take teams ofprogrammers years to write, and due to the complexity of the task almost certainly contain errors.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Stored program architecture Main articles: Computer program and Computer programming Replica of the Small-Scale Experimental Machine (SSEM), the world's firststored-program computer , at the Museum of Science and Industry in Manchester, England This section applies to most common RAM machine -based computers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In most cases, computer instructions are simple: add one number to another, move some data from one location to another, send a message to some external device, etc.
These instructions are read from the computer'smemory and are generally carried out (executed ) in the order they were given.
However, there are usually specialized instructions to tell the computer to jump ahead or backwards to some other place in the program and to carry on executing from there.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>These are called “jump&quot; instructions (or branches ).
Furthermore, jump instructions may be made to happenconditionally so that different sequences of instructions may be used depending on the result of some previous calculation or some external event.
Many computers directly supportsubroutines by providing a type of jump that “remembers&quot; the location it jumped from and another instruction to return to the instruction following that jump instruction.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Program execution might be likened to reading a book.
While a person will normally read each word and line in sequence, they may at times jump back to an earlier place in the text or skip sections that are not of interest.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Similarly, a computer may sometimes go back and repeat the instructions in some section of the program over and over again until some internal condition is met.
This is called theflow of control within the program and it is what allows the computer to perform tasks repeatedly without human intervention.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Comparatively, a person using a pocket calculator can perform a basic arithmetic operation such as adding two numbers with just a few button presses.
But to add together all of the numbers from 1 to 1,000 would take thousands of button presses and a lot of time, with a near certainty of making a mistake.
On the other hand, a computer may be programmed to do this with just a few simple instructions.
For example:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>mov No.
0, sum ; set sum to 0 mov No.
1, num ; set num to 1 loop: add num, sum ; add num to sum add No.
1, num ; add 1 to num cmp num, #1000 ; compare num to 1000 ble loop ; if num &lt;= 1000, go back to 'loop' halt ; end of program. stop running Once told to run this program, the computer will perform the repetitive addition task without further human intervention.
It will almost never make a mistake and a modern PC can complete the task in about a millionth of a second.[32]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Bugs Main article: Software bug The actual first computer bug, a moth found trapped on a relay of the Harvard Mark II computer Errors in computer programs are called “bugs .&quot;
They may be benign and not affect the usefulness of the program, or have only subtle effects.
But in some cases, they may cause the program or the entire system to “hang ,&quot; becoming unresponsive to input such asmouse clicks or keystrokes, to completely fail, or tocrash .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Otherwise benign bugs may sometimes be harnessed for malicious intent by an unscrupulous user writing anexploit , code designed to take advantage of a bug and disrupt a computer's proper execution.
Bugs are usually not the fault of the computer.
Since computers merely execute the instructions they are given, bugs are nearly always the result of programmer error or an oversight made in the program's design.[33]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Grace Hopper is credited for having first used the term “bugs&quot; in computing after a dead moth was found shorting a relay in theHarvard Mark II computer in September 1947.[34]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Machine code In most computers, individual instructions are stored as machine code with each instruction being given a unique number (its operation code oropcode for short).
The command to add two numbers together would have one opcode, the command to multiply them would have a different opcode and so on.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The simplest computers are able to perform any of a handful of different instructions; the more complex computers have several hundred to choose from, each with a unique numerical code.
Since the computer's memory is able to store numbers, it can also store the instruction codes.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This leads to the important fact that entire programs (which are just lists of these instructions) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data.
The fundamental concept of storing programs in the computer's memory alongside the data they operate on is the crux of the von Neumann, or stored program, architecture.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In some cases, a computer might store some or all of its program in memory that is kept separate from the data it operates on.
This is called theHarvard architecture after the Harvard Mark I computer.
Modern von Neumann computers display some traits of the Harvard architecture in their designs, such as inCPU caches .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>While it is possible to write computer programs as long lists of numbers ( machine language ) and while this technique was used with many early computers,[35] it is extremely tedious and potentially error-prone to do so in practice, especially for complicated programs.
Instead, each basic instruction can be given a short name that is indicative of its function and easy to remember – amnemonic such as ADD, SUB, MULT or JUMP.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>These mnemonics are collectively known as a computer'sassembly language .
Converting programs written in assembly language into something the computer can actually understand (machine language) is usually done by a computer program called an assembler.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A 1970s punched card containing one line from a FORTRAN program.
The card reads: “Z(1) = Y + W(1)&quot; and is labeled “PROJ039&quot; for identification purposes.
Programming language Main article: Programming language Programming languages provide various ways of specifying programs for computers to run.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Unlikenatural languages , programming languages are designed to permit no ambiguity and to be concise.
They are purely written languages and are often difficult to read aloud.
They are generally either translated intomachine code by a compiler or an assembler before being run, or translated directly at run time by aninterpreter .
Sometimes programs are executed by a hybrid method of the two techniques.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Low-level languages Main article: Low-level programming language Machine languages and the assembly languages that represent them (collectively termedlow-level programming languages) tend to be unique to a particular type of computer.
For instance, anARM architecture computer (such as may be found in aPDA or a hand-held videogame ) cannot understand the machine language of anIntel Pentium or theAMD Athlon 64 computer that might be in aPC .[36]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Higher-level languages Main article: High-level programming language Though considerably easier than in machine language, writing long programs in assembly language is often difficult and is also error prone.
Therefore, most practical programs are written in more abstracthigh-level programming languages that are able to express the needs of theprogrammer more conveniently (and thereby help reduce programmer error).
High level languages are usually “compiled&quot; into machine language (or sometimes into assembly language and then into machine language) using another computer program called acompiler .[37]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>High level languages are less related to the workings of the target computer than assembly language, and more related to the language and structure of the problem(s) to be solved by the final program.
It is therefore often possible to use different compilers to translate the same high level language program into the machine language of many different types of computer.
This is part of the means by which software like video games may be made available for different computer architectures such as personal computers and variousvideo game consoles .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Program design This section does notcite any references or sources .
Please help improve this section byadding citations to reliable sources .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Unsourced material may be challenged andremoved .
(July 2012) Program design of small programs is relatively simple and involves the analysis of the problem, collection of inputs, using the programming constructs within languages, devising or using established procedures and algorithms, providing data for output devices and solutions to the problem as applicable.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>As problems become larger and more complex, features such as subprograms, modules, formal documentation, and new paradigms such as object-oriented programming are encountered.
Large programs involving thousands of line of code and more require formal software methodologies.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The task of developing largesoftware systems presents a significant intellectual challenge.
Producing software with an acceptably high reliability within a predictable schedule and budget has historically been difficult; the academic and professional discipline of software engineering concentrates specifically on this challenge.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Components Main articles: Central processing unit and Microprocessor A general purpose computer has four main components: thearithmetic logic unit (ALU), the control unit , the memory , and the input and output devices (collectively termed I/O).
These parts are interconnected bybuses , often made of groups of wires .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Inside each of these parts are thousands to trillions of small electrical circuits which can be turned off or on by means of anelectronic switch .
Each circuit represents a bit (binary digit) of information so that when the circuit is on it represents a “1&quot;, and when off it represents a “0&quot; (in positive logic representation).
The circuits are arranged inlogic gates so that one or more of the circuits may control the state of one or more of the other circuits.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The control unit, ALU, registers, and basic I/O (and often other hardware closely linked with these) are collectively known as acentral processing unit (CPU).
Early CPUs were composed of many separate components but since the mid-1970s CPUs have typically been constructed on a singleintegrated circuit called a microprocessor .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Control unit Main articles: CPU design and Control unit Diagram showing how a particularMIPS architecture instruction would be decoded by the control system.
The control unit (often called a control system or central controller) manages the computer's various components; it reads and interprets (decodes) the program instructions, transforming them into a series of control signals which activate other parts of the computer.[38]
Control systems in advanced computers may change the order of some instructions so as to improve performance.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>A key component common to all CPUs is the program counter , a special memory cell (a register ) that keeps track of which location in memory the next instruction is to be read from.[39]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The control system's function is as follows—note that this is a simplified description, and some of these steps may be performed concurrently or in a different order depending on the type of CPU:
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Read the code for the next instruction from the cell indicated by the program counter. * Decode the numerical code for the instruction into a set of commands or signals for each of the other systems. * Increment the program counter so it points to the next instruction. * Read whatever data the instruction requires from cells in memory (or perhaps from an input device).
The location of this required data is typically stored within the instruction code. * Provide the necessary data to an ALU or register. * If the instruction requires an ALU or specialized hardware to complete, instruct the hardware to perform the requested operation. * Write the result from the ALU back to a memory location or to a register or perhaps an output device. * Jump back to step (1).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Since the program counter is (conceptually) just another set of memory cells, it can be changed by calculations done in the ALU.
Adding 100 to the program counter would cause the next instruction to be read from a place 100 locations further down the program.
Instructions that modify the program counter are often known as “jumps&quot; and allow for loops (instructions that are repeated by the computer) and often conditional instruction execution (both examples ofcontrol flow ).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The sequence of operations that the control unit goes through to process an instruction is in itself like a short computer program, and indeed, in some more complex CPU designs, there is another yet smaller computer called a microsequencer , which runs a microcode program that causes all of these events to happen.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Arithmetic logic unit (ALU)
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Main article: Arithmetic logic unit The ALU is capable of performing two classes of operations: arithmetic and logic.[40]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The set of arithmetic operations that a particular ALU supports may be limited to addition and subtraction, or might include multiplication, division, trigonometry functions such as sine, cosine, etc., andsquare roots .
Some can only operate on whole numbers (integers ) whilst others use floating point to represent real numbers , albeit with limited precision.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>However, any computer that is capable of performing just the simplest operations can be programmed to break down the more complex operations into simple steps that it can perform.
Therefore, any computer can be programmed to perform any arithmetic operation—although it will take more time to do so if its ALU does not directly support the operation.
An ALU may also compare numbers and returnboolean truth values (true or false) depending on whether one is equal to, greater than or less than the other (“is 64 greater than 65?&quot;).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Logic operations involve Boolean logic : AND , OR , XOR and NOT .
These can be useful for creating complicatedconditional statements and processing boolean logic .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Superscalar computers may contain multiple ALUs, allowing them to process several instructions simultaneously.[41]
Graphics processors and computers with SIMD and MIMD features often contain ALUs that can perform arithmetic onvectors and matrices .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Memory Main article: Computer data storage Magnetic core memory was the computer memory of choice throughout the 1960s, until it was replaced by semiconductor memory.
A computer's memory can be viewed as a list of cells into which numbers can be placed or read.
Each cell has a numbered “address&quot; and can store a single number.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The computer can be instructed to “put the number 123 into the cell numbered 1357&quot; or to “add the number that is in cell 1357 to the number that is in cell 2468 and put the answer into cell 1595.&quot;
The information stored in memory may represent practically anything.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Letters, numbers, even computer instructions can be placed into memory with equal ease.
Since the CPU does not differentiate between different types of information, it is the software's responsibility to give significance to what the memory sees as nothing but a series of numbers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In almost all modern computers, each memory cell is set up to store binary numbers in groups of eight bits (called abyte ).
Each byte is able to represent 256 different numbers (2&lt;s&gt;8 = 256); either from 0 to 255 or −128 to +127.
To store larger numbers, several consecutive bytes may be used (typically, two, four or eight).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>When negative numbers are required, they are usually stored intwo's complement notation.
Other arrangements are possible, but are usually not seen outside of specialized applications or historical contexts.
A computer can store any kind of information in memory if it can be represented numerically.
Modern computers have billions or even trillions of bytes of memory.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The CPU contains a special set of memory cells called registers that can be read and written to much more rapidly than the main memory area.
There are typically between two and one hundred registers depending on the type of CPU.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Registers are used for the most frequently needed data items to avoid having to access main memory every time data is needed.
As data is constantly being worked on, reducing the need to access main memory (which is often slow compared to the ALU and control units) greatly increases the computer's speed.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer main memory comes in two principal varieties: random-access memory or RAM and read-only memory or ROM.
RAM can be read and written to anytime the CPU commands it, but ROM is preloaded with data and software that never changes, therefore the CPU can only read from it.
ROM is typically used to store the computer's initial start-up instructions.
In general, the contents of RAM are erased when the power to the computer is turned off, but ROM retains its data indefinitely.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In a PC, the ROM contains a specialized program called theBIOS that orchestrates loading the computer'soperating system from the hard disk drive into RAM whenever the computer is turned on or reset.
Inembedded computers , which frequently do not have disk drives, all of the required software may be stored in ROM.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Software stored in ROM is often calledfirmware , because it is notionally more like hardware than software.Flash memory blurs the distinction between ROM and RAM, as it retains its data when turned off but is also rewritable.
It is typically much slower than conventional ROM and RAM however, so its use is restricted to applications where high speed is unnecessary.[42]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In more sophisticated computers there may be one or more RAM cache memories , which are slower than registers but faster than main memory.
Generally computers with this sort of cache are designed to move frequently needed data into the cache automatically, often without the need for any intervention on the programmer's part.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Main article: Input/output Hard disk drives are common storage devices used with computers.
I/O is the means by which a computer exchanges information with the outside world.[43]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Devices that provide input or output to the computer are calledperipherals .[44]
On a typical personal computer, peripherals include input devices like the keyboard andmouse , and output devices such as the display and printer .
Hard disk drives , floppy disk drives and optical disc drives serve as both input and output devices.Computer networking is another form of I/O.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>I/O devices are often complex computers in their own right, with their own CPU and memory.
Agraphics processing unit might contain fifty or more tiny computers that perform the calculations necessary to display3D graphics .[citation needed ]
Modern desktop computers contain many smaller computers that assist the main CPU in performing I/O.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Multitasking Main article: Computer multitasking While a computer may be viewed as running one gigantic program stored in its main memory, in some systems it is necessary to give the appearance of running several programs simultaneously.
This is achieved by multitasking i.e. having the computer switch rapidly between running each program in turn.[45]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>One means by which this is done is with a special signal called an interrupt , which can periodically cause the computer to stop executing instructions where it was and do something else instead.
By remembering where it was executing prior to the interrupt, the computer can return to that task later.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>If several programs are running “at the same time,&quot; then the interrupt generator might be causing several hundred interrupts per second, causing a program switch each time.
Since modern computers typically execute instructions several orders of magnitude faster than human perception, it may appear that many programs are running at the same time even though only one is ever executing in any given instant.
This method of multitasking is sometimes termed “time-sharing&quot; since each program is allocated a “slice&quot; of time in turn.[46]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Before the era of cheap computers, the principal use for multitasking was to allow many people to share the same computer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Seemingly, multitasking would cause a computer that is switching between several programs to run more slowly, in direct proportion to the number of programs it is running, but most programs spend much of their time waiting for slow input/output devices to complete their tasks.
If a program is waiting for the user to click on the mouse or press a key on the keyboard, then it will not take a “time slice&quot; until the event it is waiting for has occurred.
This frees up time for other programs to execute so that many programs may be run simultaneously without unacceptable speed loss.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Multiprocessing Main article: Multiprocessing Cray designed many supercomputers that used multiprocessing heavily.
Some computers are designed to distribute their work across several CPUs in a multiprocessing configuration, a technique once employed only in large and powerful machines such assupercomputers , mainframe computers and servers .
Multiprocessor and multi-core (multiple CPUs on a single integrated circuit) personal and laptop computers are now widely available, and are being increasingly used in lower-end markets as a result.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Supercomputers in particular often have highly unique architectures that differ significantly from the basic stored-program architecture and from general purpose computers.[47]
They often feature thousands of CPUs, customized high-speed interconnects, and specialized computing hardware.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Such designs tend to be useful only for specialized tasks due to the large scale of program organization required to successfully utilize most of the available resources at once.
Supercomputers usually see usage in large-scalesimulation , graphics rendering , andcryptography applications, as well as with other so-called “embarrassingly parallel &quot; tasks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Networking and the Internet Main articles: Computer networking and Internet Visualization of a portion of theroutes on the Internet.
Computers have been used to coordinate information between multiple locations since the 1950s.
The U.S. military'sSAGE system was the first large-scale example of such a system, which led to a number of special-purpose commercial systems such asSabre .[48]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In the 1970s, computer engineers at research institutions throughout the United States began to link their computers together using telecommunications technology.
The effort was funded by ARPA (nowDARPA ), and the computer network that resulted was called the ARPANET .[49]
The technologies that made the Arpanet possible spread and evolved.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>In time, the network spread beyond academic and military institutions and became known as the Internet.
The emergence of networking involved a redefinition of the nature and boundaries of the computer.
Computer operating systems and applications were modified to include the ability to define and access the resources of other computers on the network, such as peripheral devices, stored information, and the like, as extensions of the resources of an individual computer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Initially these facilities were available primarily to people working in high-tech environments, but in the 1990s the spread of applications like e-mail and theWorld Wide Web , combined with the development of cheap, fast networking technologies likeEthernet and ADSL saw computer networking become almost ubiquitous.
In fact, the number of computers that are networked is growing phenomenally.
A very large proportion of personal computers regularly connect to the Internet to communicate and receive information. “Wireless&quot; networking, often utilizing mobile phone networks, has meant networking is becoming increasingly ubiquitous even in mobile computing environments.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer architecture paradigms There are many types of computer architectures :
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Quantum computer vs Chemical computer * Scalar processor vs Vector processor * Non-Uniform Memory Access (NUMA) computers * Register machine vs Stack machine * Harvard architecture vs von Neumann architecture * Cellular architecture The quantum computer architecture holds the most promise to revolutionize computing.[50]
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Logic gates are a common abstraction which can apply to most of the abovedigital or analog paradigms.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The ability to store and execute lists of instructions called programs makes computers extremely versatile, distinguishing them fromcalculators .
The Church–Turing thesis is a mathematical statement of this versatility: any computer with aminimum capability (being Turing-complete) is, in principle, capable of performing the same tasks that any other computer can perform.
Therefore any type of computer (netbook , supercomputer , cellular automaton , etc.) is able to perform the same computational tasks, given enough time and storage capacity.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Misconceptions A computer does not need to be electronic , nor even have a processor , nor RAM , nor even a hard disk .
While popular usage of the word “computer&quot; is synonymous with a personal electronic computer, the modern[51] definition of a computer is literally “A device that computes, especially a programmable [usually] electronic machine that performs high-speed mathematical or logical operations or that assembles, stores, correlates, or otherwise processes information.&quot;[52]
Any device which processes information qualifies as a computer, especially if the processing is purposeful.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Required technology Main article: Unconventional computing Historically, computers evolved frommechanical computers and eventually from vacuum tubes to transistors .
However, conceptually computational systems asflexible as a personal computer can be built out of almost anything.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For example, a computer can be made out of billiard balls (billiard ball computer ); an often quoted example. [citation needed ]
More realistically, modern computers are made out oftransistors made of photolithographed semiconductors .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>There is active research to make computers out of many promising new types of technology, such asoptical computers , DNA computers , neural computers , and quantum computers .
Most computers are universal, and are able to calculate anycomputable function , and are limited only by their memory capacity and operating speed.
However different designs of computers can give very different performance for particular problems; for example quantum computers can potentially break some modern encryption algorithms (byquantum factoring ) very quickly.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Further topics * Glossary of computers Artificial intelligence A computer will solve problems in exactly the way it is programmed to, without regard to efficiency, alternative solutions, possible shortcuts, or possible errors in the code.
Computer programs that learn and adapt are part of the emerging field ofartificial intelligence and machine learning .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Hardware Main articles: Computer hardware and Personal computer hardware The term hardware covers all of those parts of a computer that are tangible objects.
Circuits, displays, power supplies, cables, keyboards, printers and mice are all hardware.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>History of computing hardware Main article: History of computing hardware First generation (mechanical/electromechanical) Calculators Pascal's calculator , Arithmometer , Difference engine , Norden bombsight Programmable devices Jacquard loom , Analytical engine , Harvard Mark I , Z3 Second generation (vacuum tubes) Calculators Atanasoff–Berry Computer , IBM 604 , UNIVAC 60 , UNIVAC 120 Programmable devices Colossus , ENIAC , Manchester Small-Scale Experimental Machine , EDSAC , Manchester Mark 1 , Ferranti Pegasus , Ferranti Mercury , CSIRAC , EDVAC , UNIVAC I , IBM 701 , IBM 702 , IBM 650 , Z22 Third generation (discrete transistors and SSI, MSI, LSIintegrated circuits ) Mainframes IBM 7090 , IBM 7080 , IBM System/360 , BUNCH Minicomputer PDP-8 , PDP-11 , IBM System/32 , IBM System/36 Fourth generation (VLSI integrated circuits) Minicomputer VAX , IBM System i 4-bit microcomputer Intel 4004 , Intel 4040 8-bit microcomputer Intel 8008 , Intel 8080 , Motorola 6800 , Motorola 6809 , MOS Technology 6502 , Zilog Z80 16-bit microcomputer Intel 8088 , Zilog Z8000 , WDC 65816/65802 32-bit microcomputer Intel 80386 , Pentium , Motorola 68000 , ARM architecture 64-bit microcomputer[53]
Alpha , MIPS , PA-RISC , PowerPC , SPARC , x86-64 Embedded computer Intel 8048 , Intel 8051 Personal computer Desktop computer , Home computer , Laptop computer , Personal digital assistant (PDA), Portable computer , Tablet PC , Wearable computer Theoretical/experimental Quantum computer , Chemical computer , DNA computing , Optical computer , Spintronics based computer Other hardware topics Peripheral device (input/output ) Input Mouse , keyboard , joystick , image scanner , webcam , graphics tablet , microphone Output Monitor , printer , loudspeaker Both Floppy disk drive , hard disk drive , optical disc drive, teleprinter Computer busses Short range RS-232 , SCSI , PCI , USB Long range (computer networking ) Ethernet , ATM , FDDI Software Main article: Computer software Software refers to parts of the computer which do not have a material form, such as programs, data, protocols, etc.
When software is stored in hardware that cannot easily be modified (such asBIOS ROM in an IBM PC compatible ), it is sometimes called “firmware.&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Operating system Unix and BSD UNIX System V , IBM AIX , HP-UX , Solaris (SunOS ), IRIX , List of BSD operating systems GNU /Linux List of Linux distributions , Comparison of Linux distributions Microsoft Windows Windows 95 , Windows 98 , Windows NT , Windows 2000 , Windows Me , Windows XP , Windows Vista , Windows 7 , Windows 8 DOS 86-DOS (QDOS), PC-DOS , MS-DOS , DR-DOS , FreeDOS Mac OS Mac OS classic , Mac OS X Embedded and real-time List of embedded operating systems Experimental Amoeba , Oberon /Bluebottle , Plan 9 from Bell Labs Library Multimedia DirectX , OpenGL , OpenAL Programming library C standard library , Standard Template Library Data Protocol TCP/IP , Kermit , FTP , HTTP , SMTP File format HTML , XML , JPEG , MPEG , PNG User interface Graphical user interface (WIMP ) Microsoft Windows , GNOME , KDE , QNX Photon , CDE , GEM , Aqua Text-based user interface Command-line interface , Text user interface Application Office suite Word processing , Desktop publishing , Presentation program , Database management system , Scheduling &amp; Time management,Spreadsheet , Accounting software Internet Access Browser , E-mail client , Web server , Mail transfer agent , Instant messaging Design and manufacturing Computer-aided design , Computer-aided manufacturing , Plant management, Robotic manufacturing, Supply chain management Graphics Raster graphics editor , Vector graphics editor , 3D modeler , Animation editor , 3D computer graphics , Video editing , Image processing Audio Digital audio editor , Audio playback , Mixing, Audio synthesis , Computer music Software engineering Compiler , Assembler , Interpreter , Debugger , Text editor , Integrated development environment , Software performance analysis , Revision control , Software configuration management Educational Edutainment , Educational game , Serious game , Flight simulator Games Strategy , Arcade, Puzzle , Simulation, First-person shooter , Platform , Massively multiplayer , Interactive fiction Misc Artificial intelligence , Antivirus software , Malware scanner , Installer /Package management systems , File manager Languages There are thousands of different programming languages—some intended to be general purpose, others useful only for highly specialized applications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Programming languages Lists of programming languages Timeline of programming languages , List of programming languages by category , Generational list of programming languages , List of programming languages , Non-English-based programming languages Commonly usedassembly languages ARM , MIPS , x86 Commonly used high-level programming languages Ada , BASIC , C , C++ , C# , COBOL , Fortran , Java , Lisp , Pascal , Object Pascal Commonly used scripting languages Bourne script , JavaScript , Python , Ruby , PHP , Perl Professions and organizations As the use of computers has spread throughout society, there are an increasing number of careers involving computers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Computer-related professions Hardware-related Electrical engineering , Electronic engineering , Computer engineering , Telecommunications engineering , Optical engineering , Nanoengineering Software-related Computer science , Computer engineering , Desktop publishing , Human–computer interaction , Information technology,Information systems , Computational science , Software engineering , Video game industry , Web design The need for computers to work well together and to be able to exchange information has spawned the need for many standards organizations, clubs and societies of both a formal and informal nature.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Organizations Standards groups ANSI , IEC , IEEE ,IETF , ISO , W3C Professional Societies ACM ,AIS , IET , IFIP ,BCS Free /Open source software groups Free Software Foundation , Mozilla Foundation , Apache Software Foundation See also Information technology portal * Computability theory * Computer insecurity * Computer security * List of computer term etymologies * List of fictional computers * Pulse computation Notes * &lt;s&gt; In 1946, ENIAC required an estimated 174 kW.
By comparison, a modern laptop computer may use around 30 W; nearly six thousand times less.&quot;Approximate Desktop &amp; Notebook Power Usage&quot; .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>University of Pennsylvania.
Retrieved 20 June 2009.  * &lt;s&gt; Early computers such as Colossus and ENIAC were able to process between 5 and 100 operations per second.
A modern “commodity &quot; microprocessor (as of 2007) can process billions of operations per second, and many of these operations are more complicated and useful than early computer operations.&quot;Intel Core2 Duo Mobile Processor: Features&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>.
Intel Corporation.
Retrieved 20 June 2009.  * &lt;s&gt; computer, n. .
Oxford English Dictionary (2 ed.).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Oxford University Press.
1989.
Retrieved 10 April 2009.  * &lt;s&gt; * Ifrah, Georges (2001).The Universal History of Computing: From the Abacus to the Quantum Computer.
New York: John Wiley &amp; Sons.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>ISBN  0-471-39671-0 .  From 2700 to 2300 BC,Georges Ifrah , pp.11 * &lt;s&gt; Berkeley, Edmund (1949).Giant Brains, or Machines That Think.
John Wiley &amp; Sons. p. 19.  Edmund Berkeley * &lt;s&gt; According to advertising on Pickett's N600 slide rule boxes.&quot;Pickett Apollo Box Scans&quot; .
Copland.udel.edu.
Retrieved 20 February 2010.  * &lt;s&gt; &quot;Discovering How Greeks Computed in 100 B.C.&quot; .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The New York Times.
31 July 2008.
Retrieved 27 March 2010.  * &lt;s&gt; &quot;Heron of Alexandria&quot; .
Retrieved 15 January 2008.   * &lt;s&gt; Felt, Dorr E. (1916).Mechanical arithmetic, or The history of the counting machine .
Chicago: Washington Institute. p. 8.  Dorr E. Felt * &lt;s&gt; &quot;Speaking machines&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>.The parlour review, Philadelphia 1 (3).
20 January 1838.
Retrieved 11 October 2010.  * &lt;s&gt; Felt, Dorr E. (1916).Mechanical arithmetic, or The history of the counting machine .
Chicago: Washington Institute. p. 10. 
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Dorr E.
Felt * &lt;s&gt; “Pascal and Leibnitz, in the seventeenth century, and Diderot at a later period, endeavored to construct a machine which might serve as a substitute for human intelligence in the combination of figures&quot;The Gentleman's magazine, Volume 202, p.100 * &lt;s&gt; Babbage's Difference engine in 1823 and his Analytical engine in the mid-1830s * &lt;s&gt; “It is reasonable to inquire, therefore, whether it is possible to devise a machine which will do for mathematical computation what the automatic lathe has done for engineering.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The first suggestion that such a machine could be made came more than a hundred years ago from the mathematician Charles Babbage.
Babbage's ideas have only been properly appreciated in the last ten years, but we now realize that he understood clearly all the fundamental principles which are embodied in modern digital computers&quot;Faster than thought, edited by B.
V. Bowden, 1953, Pitman publishing corporation * &lt;s&gt; “...Among this extraordinary galaxy of talent Charles Babbage appears to be one of the most remarkable of all.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Most of his life he spent in an entirely unsuccessful attempt to make a machine which was regarded by his contemporaries as utterly preposterous, and his efforts were regarded as futile, time-consuming and absurd.
In the last decade or so we have learnt how his ideas can be embodied in a modern digital computer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>He understood more about the logic of these machines than anyone else in the world had learned until after the end of the last war.&quot;
Foreword,Irascible Genius, Charles Babbage, inventor by Maboth Moseley, 1964, London, Hutchinson * &lt;s&gt; In the proposal that Aiken gave IBM in 1937 while requesting funding for theHarvard Mark I we can read: “Few calculating machines have been designed strictly for application to scientific investigations, the notable exceptions being those of Charles Babbage and others who followed him ...
After abandoning the difference engine, Babbage devoted his energy to the design and construction of an analytical engine of far higher powers than the difference engine ...
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Since the time of Babbage, the development ofcalculating machinery has continued at an increasing rate.&quot;
Howard Aiken , Proposed automatic calculating machine, reprinted in: The origins of Digital computers, Selected Papers, Edited by Brian Randell, 1973,ISBN 3-540-06169-X * &lt;s&gt; &quot;Intel Museum – The 4004, Big deal then, Big deal now&quot; .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Intel.com.
Retrieved 29 January 2012.  * &lt;s&gt; From cave paintings to the internet HistoryofScience.com * &lt;s&gt; See: Anthony Hyman, ed.,Science and Reform: Selected Works of Charles Babbage (Cambridge, England: Cambridge University Press, 1989), page 298.
It is in the collection of the Science Museum in London, England.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>(Delve (2007), page 99.) * &lt;s&gt; The analytical engine should not be confused with Babbage'sdifference engine which was a non-programmable mechanical calculator. * &lt;s&gt; &quot;Columbia University Computing History: Herman Hollerith&quot; .
Columbia.edu.
Retrieved 11 December 2010.  * &lt;s&gt; a b &quot;Alan Turing – Time 100 People of the Century&quot; .
Time Magazine .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Retrieved 13 June 2009.
&quot;The fact remains that everyone who taps at a keyboard, opening a spreadsheet or a word-processing program, is working on an incarnation of a Turing machine&quot;  * &lt;s&gt; &quot;John Vincent Atanasoff and the Birth of Electronic Digital Computing&quot; .
Cs.iastate.edu.
Retrieved 29 January 2012.  * &lt;s&gt; &quot;John Vincent Atanasoff – the father of the computer&quot; .
Columbia.edu.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Retrieved 29 January 2012.  * &lt;s&gt; &quot;Atanasoff-Berry Computer&quot; .
Retrieved 20 November 2010.  * &lt;s&gt; &quot;Spiegel: The inventor of the computer's biography was published&quot; .
Der Spiegel.
28 September 2009.
Retrieved 11 December 2010.  * &lt;s&gt; &quot;Inventor Profile: George R. Stibitz&quot; .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>National Inventors Hall of Fame Foundation, Inc.  * &lt;s&gt; Rojas, R. (1998).
&quot;How to make Zuse's Z3 a universal computer&quot;.IEEE Annals of the History of Computing 20 (3): 51–54. doi :10.1109/85.707574 .  * &lt;s&gt; B.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Jack Copeland, ed., Colossus: The Secrets of Bletchley Park's Codebreaking Computers, Oxford University Press, 2006 * &lt;s&gt; &quot;Robot Mathematician Knows All The Answers&quot;, October 1944, Popular Science .
Google Books.
Retrieved 11 December 2010.  * &lt;s&gt; Lavington 1998 , p. 37 * &lt;s&gt; This program was written similarly to those for thePDP-11 minicomputer and shows some typical things a computer can do.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All the text after the semicolons arecomments for the benefit of human readers.
These have no significance to the computer and are ignored.
( Digital Equipment Corporation 1972 ) * &lt;s&gt; It is not universally true that bugs are solely due to programmer oversight.
Computer hardware may fail or may itself have a fundamental problem that produces unexpected results in certain situations.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>For instance, thePentium FDIV bug caused some Intel microprocessors in the early 1990s to produce inaccurate results for certainfloating point division operations.
This was caused by a flaw in the microprocessor design and resulted in a partial recall of the affected devices. * &lt;s&gt; Taylor, Alexander L., III (16 April 1984).&quot;The Wizard Inside the Machine&quot; .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>TIME .
Retrieved 17 February 2007.  * &lt;s&gt; Even some later computers were commonly programmed directly in machine code.
Someminicomputers like the DEC PDP-8 could be programmed directly from a panel of switches.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>However, this method was usually used only as part of thebooting process.
Most modern computers boot entirely automatically by reading a boot program from somenon-volatile memory . * &lt;s&gt; However, there is sometimes some form of machine language compatibility between different computers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Anx86-64 compatible microprocessor like theAMD Athlon 64 is able to run most of the same programs that anIntel Core 2 microprocessor can, as well as programs designed for earlier microprocessors like the IntelPentiums and Intel 80486 .
This contrasts with very early commercial computers, which were often one-of-a-kind and totally incompatible with other computers. * &lt;s&gt; High level languages are also ofteninterpreted rather than compiled.
Interpreted languages are translated into machine code on the fly, while running, by another program called aninterpreter . * &lt;s&gt; The control unit's role in interpreting instructions has varied somewhat in the past.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Although the control unit is solely responsible for instruction interpretation in most modern computers, this is not always the case.
Many computers include some instructions that may only be partially interpreted by the control system and partially interpreted by another device.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>This is especially the case with specialized computing hardware that may be partially self-contained.
For example,EDVAC , one of the earliest stored-program computers, used a central control unit that only interpreted four instructions.
All of the arithmetic-related instructions were passed on to its arithmetic unit and further decoded there. * &lt;s&gt; Instructions often occupy more than one memory address, therefore the program counter usually increases by the number of memory locations required to store one instruction. * &lt;s&gt; David J. Eck (2000).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>The Most Complex Machine: A Survey of Computers and Computing.
A K Peters, Ltd. p. 54.ISBN   978-1-56881-128-4 .  * &lt;s&gt; Erricos John Kontoghiorghes (2006).Handbook of Parallel Computing and Statistics.
CRC Press. p. 45.ISBN   978-0-8247-4067-2 .  * &lt;s&gt; Flash memory also may only be rewritten a limited number of times before wearing out, making it less useful for heavy random access usage.
(Verma &amp; Mielke 1988 ) * &lt;s&gt; Donald Eadie (1968).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Introduction to the Basic Computer.
Prentice-Hall. p. 12.  * &lt;s&gt; Arpad Barna; Dan I. Porat (1976).Introduction to Microcomputers and the Microprocessors.
Wiley. p. 85.ISBN   978-0-471-05051-3 .  * &lt;s&gt; Jerry Peek; Grace Todino, John Strang (2002).Learning the UNIX Operating System: A Concise Guide for the New User.
O'Reilly. p. 130.
ISBN   978-0-596-00261-9 .  * &lt;s&gt; Gillian M. Davis (2002).Noise Reduction in Speech Applications.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>CRC Press. p. 111.
ISBN   978-0-8493-0949-6 .  * &lt;s&gt; However, it is also very common to construct supercomputers out of many pieces of cheap commodity hardware; usually individual computers connected by networks.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>These so-called computer clusters ]] can often provide supercomputer performance at a much lower cost than customized designs.
While custom architectures are still used for most of the most powerful supercomputers, there has been a proliferation of cluster computers in recent years.
(TOP500 2006 ) * &lt;s&gt; Agatha C. Hughes (2000).Systems, Experts, and Computers.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>MIT Press . p. 161.
ISBN   978-0-262-08285-3 .
&quot;The experience of SAGE helped make possible the first truly large-scale commercial real-time network: the SABRE computerized airline reservations system...&quot;  * &lt;s&gt; &quot;A Brief History of the Internet&quot; .
Internet Society .
Retrieved 20 September 2008.  * &lt;s&gt; &quot;Computer architecture: fundamentals and principles of computer design&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>by Joseph D. Dumas 2006. page 340. * &lt;s&gt; According to the Shorter Oxford English Dictionary (6th ed, 2007), the wordcomputer dates back to the mid 17th century, when it referred to “A person who makes calculations; specifically a person employed for this in an observatory etc.&quot; * &lt;s&gt; &quot;Definition of computer&quot; .
Thefreedictionary.com.
Retrieved 29 January 2012.  * &lt;s&gt; Most major 64-bit instruction set architectures are extensions of earlier designs.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>All of the architectures listed in this table, except for Alpha, existed in 32-bit forms before their 64-bit incarnations were introduced.
References * a Kempf, Karl (1961).
Historical Monograph: Electronic Computers Within the Ordnance Corps .
Aberdeen Proving Ground (United States Army ).  * a Phillips, Tony (2000).&quot;The Antikythera Mechanism I&quot;
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>.
American Mathematical Society.
Retrieved 5 April 2006.  * a Shannon, Claude Elwood (1940).A symbolic analysis of relay and switching circuits .
Massachusetts Institute of Technology.  * Digital Equipment Corporation (1972).
PDP-11/40 Processor Handbook (PDF).Maynard, MA : Digital Equipment Corporation.  * Verma, G.; Mielke, N. (1988).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Reliability performance of ETOX based flash memories.
IEEE International Reliability Physics Symposium.  * Meuer, Hans ; Strohmaier, Erich; Simon, Horst;Dongarra, Jack (13 November 2006).&quot;Architectures Share Over Time&quot; .
TOP500 .
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Retrieved 27 November 2006.  * Lavington, Simon (1998).
A History of Manchester Computers (2 ed.).
Swindon: The British Computer Society.ISBN   978-0-902505-01-8 .  * Stokes, Jon (2007).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Inside the Machine: An Illustrated Introduction to Microprocessors and Computer Architecture.
San Francisco: No Starch Press.
ISBN   978-1-59327-104-6 .  * Felt, Dorr E. (1916).
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Mechanical arithmetic, or The history of the counting machine .
Chicago: Washington Institute.  * Ifrah, Georges (2001).
The Universal History of Computing: From the Abacus to the Quantum Computer.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>New York: John Wiley &amp; Sons.
ISBN  0-471-39671-0 .  * Berkeley, Edmund (1949).
Giant Brains, or Machines That Think.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>* Text is available under the Creative Commons Attribution-ShareAlike License ; additional terms may apply.
By using this site, you agree to theTerms of Use and Privacy Policy.
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
                <section>
                    <text>Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization. * Privacy policy * About Wikipedia * Disclaimers * Contact Wikipedia * Mobile view * *
</text>
                    <manualLabel>0</manualLabel>
                    <svmLabel>0</svmLabel>
                    <interrogativeFeature>0.0</interrogativeFeature>
                    <wordAbsenceFeature>0.0</wordAbsenceFeature>
                </section>
            </sectionList>
        </query>
    </topic>
</data>
